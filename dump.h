

namespace O {
	namespace BaseNetworkable {
		constexpr auto JustCreatedk__BackingField = 0x18;
		constexpr auto entityDestroy = 0x20;
		constexpr auto postNetworkUpdateComponents = 0x28;
		constexpr auto parentEntity = 0x30;
		constexpr auto children = 0x40;
		constexpr auto canTriggerParent = 0x48;
		constexpr auto prefabID = 0x4c;
		constexpr auto globalBroadcast = 0x50;
		constexpr auto net = 0x58;
		constexpr auto IsDestroyedk__BackingField = 0x60;
		constexpr auto _prefabName = 0x68;
		constexpr auto _prefabNameWithoutExtension = 0x70;

		constexpr auto get_JustCreated = 0x94dfa0;
		constexpr auto set_JustCreated = 0x94e180;
		constexpr auto ClientSpawn = 0x94c800;
		constexpr auto ClientOnEnable = 0x94c780;
		constexpr auto ClientInit = 0x94c620;
		constexpr auto OnNetworkUpdate = 0x94dac0;
		constexpr auto PreNetworkUpdate = 0x45e1d0;
		constexpr auto PostNetworkUpdate = 0x45e1d0;
		constexpr auto ShouldDestroyWithGroup = 0x5294a0;
		constexpr auto ShouldDestroyImmediately = 0x5d1c50;
		constexpr auto NetworkDestroy = 0x94d680;
		constexpr auto DoClientDestroy = 0x94cbd0;
		constexpr auto DoNetworkDestroy = 0x45e1d0;
		constexpr auto BroadcastOnPostNetworkUpdate = 0x94c400;
		constexpr auto PostProcess = 0x94dc40;
		constexpr auto GetParentEntity = 0x94cfb0;
		constexpr auto HasParent = 0x94cfc0;
		constexpr auto AddChild = 0x94c370;
		constexpr auto OnChildAdded = 0x45e1d0;
		constexpr auto RemoveChild = 0x94dcc0;
		constexpr auto OnChildRemoved = 0x45e1d0;
		constexpr auto get_gameManager = 0x94e0c0;
		constexpr auto get_prefabAttribute = 0x94e120;
		constexpr auto get_IsDestroyed = 0x94df90;
		constexpr auto set_IsDestroyed = 0x8c1800;
		constexpr auto get_PrefabName = 0x94dfb0;
		constexpr auto get_ShortPrefabName = 0x94e030;
		constexpr auto GetNetworkPosition = 0x94cf20;
		constexpr auto GetNetworkRotation = 0x94cf70;
		constexpr auto InvokeString = 0x94cfd0;
		constexpr auto LookupPrefab = 0x94d5e0;
		constexpr auto EqualNetID = 0x94cea0;
		constexpr auto ResetState = 0x94dd30;
		constexpr auto InitShared = 0x45e1d0;
		constexpr auto PreInitShared = 0x45e1d0;
		constexpr auto PostInitShared = 0x45e1d0;
		constexpr auto DestroyShared = 0x45e1d0;
		constexpr auto OnNetworkGroupEnter = 0x45e1d0;
		constexpr auto OnNetworkGroupLeave = 0x45e1d0;
		constexpr auto OnNetworkGroupChange = 0x94d980;
		constexpr auto OnNetworkSubscribersEnter = 0x45e1d0;
		constexpr auto OnNetworkSubscribersLeave = 0x45e1d0;
		constexpr auto EntityDestroy = 0x94cdb0;
		constexpr auto DoEntityDestroy = 0x94cc50;
		constexpr auto SpawnShared = 0x94dd80;
		constexpr auto Load = 0x94d220;
		constexpr auto get_isServer = 0x5d1c50;
		constexpr auto get_isClient = 0x5294a0;
		constexpr auto OnRpcMessage = 0x5d1c50;
		constexpr auto ctor = 0x94def0;
		constexpr auto cctor = 0x94de90;
	};

	namespace BasePlayer {
		constexpr auto __menuOption_Climb = 0x240;
		constexpr auto __menuOption_Drink = 0x298;
		constexpr auto __menuOption_InviteToTeam = 0x2f0;
		constexpr auto __menuOption_Menu_AssistPlayer = 0x348;
		constexpr auto __menuOption_Menu_LootPlayer = 0x3a0;
		constexpr auto __menuOption_Promote = 0x3f8;
		constexpr auto __menuOption_SaltWater = 0x450;
		constexpr auto lastOpenSoundPlay = 0x4a8;
		constexpr auto currentViewMode = 0x4ac;
		constexpr auto selectedViewMode = 0x4b0;
		constexpr auto lastRevivePoint = 0x4b4;
		constexpr auto lastReviveDirection = 0x4c0;
		constexpr auto playerModel = 0x4d0;
		constexpr auto Frozen = 0x4d8;
		constexpr auto voiceRecorder = 0x4e0;
		constexpr auto voiceSpeaker = 0x4e8;
		constexpr auto input = 0x4f0;
		constexpr auto movement = 0x4F8;
		constexpr auto collision = 0x500;
		constexpr auto emptyState = 0x8;
		constexpr auto _lookingAt = 0x508;
		constexpr auto _lookingAtEntity = 0x510;
		constexpr auto _lookingAtCollider = 0x518;
		constexpr auto lookingAtPointk__BackingField = 0x520;
		constexpr auto wakeTime = 0x52c;
		constexpr auto needsClothesRebuild = 0x530;
		constexpr auto wasSleeping = 0x531;
		constexpr auto wokeUpBefore = 0x532;
		constexpr auto wasDead = 0x533;
		constexpr auto lastClothesHash = 0x534;
		constexpr auto visiblePlayerList = 0x10;
		constexpr auto craftMode = 0x18;
		constexpr auto IsWearingDiveGogglesk__BackingField = 0x538;
		constexpr auto GestureViewModel = 0x540;
		constexpr auto timeSinceUpdatedLookingAt = 0x548;
		constexpr auto nextTopologyTestTime = 0x54c;
		constexpr auto usePressTime = 0x550;
		constexpr auto useHeldTime = 0x554;
		constexpr auto lookingAtTest = 0x558;
		constexpr auto lastDeathTimeClient = 0x1c;
		constexpr auto cachedWaterDrinkingPoint = 0x560;
		constexpr auto gestureList = 0x570;
		constexpr auto gestureFinishedTime = 0x578;
		constexpr auto blockHeldInputTimer = 0x57c;
		constexpr auto currentGesture = 0x580;
		constexpr auto disabledHeldEntity = 0x588;
		constexpr auto nextGestureMenuOpenTime = 0x590;
		constexpr auto lastGestureCancel = 0x594;
		constexpr auto client_lastHelloTime = 0x598;
		constexpr auto currentTeam = 0x5a0;
		constexpr auto MaxTeamSizeToast = 0x20;
		constexpr auto clientTeam = 0x5a8;
		constexpr auto lastReceivedTeamTime = 0x5b0;
		constexpr auto lastPresenceTeamId = 0x5b8;
		constexpr auto lastPresenceTeamSize = 0x5c0;
		constexpr auto playerGroupKey = 0x5c8;
		constexpr auto playerGroupSizeKey = 0x5d0;
		constexpr auto clActiveItem = 0x5d8;
		constexpr auto ClientCurrentMapNote = 0x5e0;
		constexpr auto ClientCurrentDeathNote = 0x5e8;
		constexpr auto missions = 0x5f0;
		constexpr auto _activeMission = 0x5f8;
		constexpr auto modelState = 0x600;
		constexpr auto mounted = 0x608;
		constexpr auto nextSeatSwapTime = 0x618;
		constexpr auto PetEntity = 0x620;
		constexpr auto lastPetCommandIssuedTime = 0x628;
		constexpr auto PetPrefabID = 0x62c;
		constexpr auto PetID = 0x630;
		constexpr auto PetWheelHasBeenOpened = 0x28;
		constexpr auto cachedBuildingPrivilegeTime = 0x634;
		constexpr auto cachedBuildingPrivilege = 0x638;
		constexpr auto maxProjectileID = 0x640;
		constexpr auto lastUpdateTime = 0x644;
		constexpr auto cachedThreatLevel = 0x648;
		constexpr auto serverTickRate = 0x64c;
		constexpr auto clientTickRate = 0x650;
		constexpr auto serverTickInterval = 0x654;
		constexpr auto clientTickInterval = 0x658;
		constexpr auto lastSentTickTime = 0x65c;
		constexpr auto lastTickStopwatch = 0x660;
		constexpr auto lastSentTick = 0x668;
		constexpr auto nextVisThink = 0x670;
		constexpr auto lastTimeSeen = 0x674;
		constexpr auto debugPrevVisible = 0x678;
		constexpr auto fallDamageEffect = 0x680;
		constexpr auto drownEffect = 0x688;
		constexpr auto playerFlags = 0x690;
		constexpr auto eyes = 0x698;
		constexpr auto inventory = 0x6a0;
		constexpr auto blueprints = 0x6a8;
		constexpr auto metabolism = 0x6b0;
		constexpr auto modifiers = 0x6b8;
		constexpr auto playerCollider = 0x6c0;
		constexpr auto Belt = 0x6c8;
		constexpr auto playerRigidbody = 0x6d0;
		constexpr auto userID = 0x6d8;
		constexpr auto UserIDString = 0x6e0;
		constexpr auto gamemodeteam = 0x6e8;
		constexpr auto reputation = 0x6ec;
		constexpr auto _displayName = 0x6f0;
		constexpr auto _lastSetName = 0x6f8;
		constexpr auto playerColliderStanding = 0x700;
		constexpr auto playerColliderDucked = 0x714;
		constexpr auto playerColliderCrawling = 0x728;
		constexpr auto playerColliderLyingDown = 0x73c;
		constexpr auto cachedProtection = 0x750;
		constexpr auto oldCameraFix = 0x29;
		constexpr auto lastHeadshotSoundTime = 0x758;
		constexpr auto nextColliderRefreshTime = 0x75c;
		constexpr auto clothingBlocksAiming = 0x760;
		constexpr auto clothingMoveSpeedReduction = 0x764;
		constexpr auto clothingWaterSpeedBonus = 0x768;
		constexpr auto clothingAccuracyBonus = 0x76c;
		constexpr auto equippingBlocked = 0x770;
		constexpr auto eggVision = 0x774;
		constexpr auto activeTelephone = 0x778;
		constexpr auto designingAIEntity = 0x780;

		constexpr auto GetMenuOptions = 0x5d4ea0;
		constexpr auto get_HasMenuOptions = 0x5f0610;
		constexpr auto OnRpcMessage = 0x5dd200;
		constexpr auto CanBeLooted = 0x5caa00;
		constexpr auto get_LootPanelTitle = 0x5f0b50;
		constexpr auto Menu_LootPlayer = 0x5dc0c0;
		constexpr auto Menu_LootPlayer_ShowIf = 0x5dc0a0;
		constexpr auto RPC_OpenLootPanel = 0x5e84e0;
		constexpr auto PlayOpenSound = 0x5e67d0;
		constexpr auto InFirstPersonMode = 0x5d7e10;
		constexpr auto UpdateViewMode = 0x5ee8b0;
		constexpr auto get_idealViewMode = 0x5f0d60;
		constexpr auto get_shouldDrawBody = 0x5f1280;
		constexpr auto OnViewModeChanged = 0x5e6290;
		constexpr auto ModifyCamera = 0x5dc130;
		constexpr auto Menu_AssistPlayer = 0x5dc060;
		constexpr auto Menu_AssistPlayer_TimeStart = 0x5dc020;
		constexpr auto Menu_AssistPlayer_ShowIf = 0x5dbdb0;
		constexpr auto get_lookingAt = 0x5f11f0;
		constexpr auto get_lookingAtEntity = 0x5f1140;
		constexpr auto get_lookingAtCollider = 0x5f10b0;
		constexpr auto get_lookingAtPoint = 0x5f11d0;
		constexpr auto set_lookingAtPoint = 0x5f1670;
		constexpr auto GetExtrapolationTime = 0x5d41e0;
		constexpr auto GetLocalVelocityClient = 0x5d4ca0;
		constexpr auto ClientInit = 0x5cc500;
		constexpr auto CreatePlayerModel = 0x5d1270;
		constexpr auto CreatePlayerCollision = 0x5d10c0;
		constexpr auto CreatePlayerMovement = 0x5d1790;
		constexpr auto InitLocalPlayer = 0x5d7f50;
		constexpr auto InitRemotePlayer = 0x5d8230;
		constexpr auto HasLocalControls = 0x5d74c0;
		constexpr auto SetNetworkPosition = 0x5eb220;
		constexpr auto SetNetworkRotation = 0x5eb2d0;
		constexpr auto DoClientDestroy = 0x5d1c60;
		constexpr auto PostNetworkUpdate = 0x5e7000;
		constexpr auto OnFirstWakeUp = 0x5dcb20;
		constexpr auto get_TimeAwake = 0x5f0bd0;
		constexpr auto CL_ClothingChanged = 0x5ca000;
		constexpr auto ForceRebuild = 0x5d3490;
		constexpr auto RebuildWorldModel = 0x5e8980;
		constexpr auto SetDefaultFootstepEffects = 0x5ea9e0;
		constexpr auto OnSignal = 0x5e5d10;
		constexpr auto FindBone = 0x5d2960;
		constexpr auto GetBones = 0x5d36e0;
		constexpr auto ShouldLerp = 0x5ebae0;
		constexpr auto get_VisiblePlayerList = 0x5f0c30;
		constexpr auto ClearVisibility = 0x5cc030;
		constexpr auto RegisterForVisibility = 0x5e9160;
		constexpr auto UnregisterFromVisibility = 0x5ec630;
		constexpr auto FindByID_Clientside = 0x5d2a60;
		constexpr auto Find_Clientside = 0x5d2c30;
		constexpr auto GetRandomFloatBasedOnUserID = 0x5d6ce0;
		constexpr auto DisplayHealthInfo = 0x5d1c50;
		constexpr auto ShouldDestroyWithGroup = 0x5ebab0;
		constexpr auto SetInheritedVelocity = 0x5eaea0;
		constexpr auto TogglePlayerMovement = 0x5ec400;
		constexpr auto GetPerformanceReport = 0x5d6a20;
		constexpr auto GetPerformanceReport_Frametime = 0x5d65a0;
		constexpr auto OnBecameRagdoll = 0x5dc550;
		constexpr auto OnVoiceData = 0x5e6790;
		constexpr auto RecieveAchievement = 0x5e8cf0;
		constexpr auto CraftMode = 0x5d0e50;
		constexpr auto StartDesigningAI = 0x5ebe30;
		constexpr auto OnDebugAIEventTriggeredStateChange = 0x5dc8d0;
		constexpr auto ClientOnEnable = 0x5cd4b0;
		constexpr auto Client_OnRepairFailedResources = 0x5cf930;
		constexpr auto TakeDamageHit = 0x5ec1d0;
		constexpr auto AdminReceivedUGC = 0x5c8450;
		constexpr auto AdminReceivedPatternFirework = 0x5c8390;
		constexpr auto get_IsWearingDiveGoggles = 0x5f0b40;
		constexpr auto set_IsWearingDiveGoggles = 0x5f1460;
		constexpr auto UpdateClothesIfNeeded = 0x5ec780;
		constexpr auto MakeVisible = 0x5dbab0;
		constexpr auto ClientUpdate_Sleeping = 0x5ce970;
		constexpr auto ClientUpdate = 0x5ceda0;
		constexpr auto RebuildClothingItems = 0x5e8760;
		constexpr auto UpdateClothingItems = 0x5ecc70;
		constexpr auto UpdateHolsterOffsets = 0x5ed3a0;
		constexpr auto PostLateClientCycle = 0x5e6e80;
		constexpr auto IsLocalPlayer = 0x5d9c40;
		constexpr auto ClientUpdateLocalPlayer = 0x5cd610;
		constexpr auto UpdateTopologyStats = 0x5ee750;
		constexpr auto ClientTick = 0x5cd560;
		constexpr auto DoMovement = 0x5d1f50;
		constexpr auto MountableOverrideViewAngles = 0x5dc220;
		constexpr auto BlockSprint = 0x5c9400;
		constexpr auto BlockJump = 0x5c9360;
		constexpr auto ClientInput = 0x5cca00;
		constexpr auto UseAction = 0x5eec10;
		constexpr auto GetInteractionEntity = 0x5d4800;
		constexpr auto QuickUse = 0x5e8340;
		constexpr auto LongUse = 0x5db9f0;
		constexpr auto UseStop = 0x5eeee0;
		constexpr auto UpdateLookingAt = 0x5ed530;
		constexpr auto ResetLookingAt = 0x5e95b0;
		constexpr auto SetLookingAt = 0x5eb030;
		constexpr auto CheckLookingAtVisible = 0x5cb830;
		constexpr auto FindVehicleParentFor = 0x5d2af0;
		constexpr auto OnDied = 0x5dca40;
		constexpr auto OnRespawnInformation = 0x5dce60;
		constexpr auto RequestRespawnUpdates = 0x5e9460;
		constexpr auto OnLand = 0x5dcc70;
		constexpr auto StartLoading = 0x5ec0b0;
		constexpr auto StartLoading_Quick = 0x5ebfc0;
		constexpr auto FinishLoading = 0x5d2f30;
		constexpr auto FullBlack_FadeIn = 0x5d3570;
		constexpr auto FullBlack_FadeOut = 0x45e1d0;
		constexpr auto FinishedLoadingRoutine = 0x5d3160;
		constexpr auto DirectionalDamage = 0x5d1a30;
		constexpr auto UnlockedBlueprint = 0x5ec5c0;
		constexpr auto CheckForRespawnInfo = 0x5cb7c0;
		constexpr auto UpdateRichPresenceState = 0x5ee4b0;
		constexpr auto HandleCompanionPairingResult = 0x5d6fc0;
		constexpr auto UpdateWaterDrinkingPoint = 0x5ee8f0;
		constexpr auto GetWaterDrinkingPoint = 0x5d6fa0;
		constexpr auto Drink = 0x5d21f0;
		constexpr auto Drink_ShowIf = 0x5d2010;
		constexpr auto SaltWater = 0x45e1d0;
		constexpr auto SaltWater_ShowIf = 0x5e9730;
		constexpr auto Climb = 0x5d0600;
		constexpr auto Climb_ShowIf = 0x5d0360;
		constexpr auto HasPlayerFlag = 0x5d7530;
		constexpr auto get_IsReceivingSnapshot = 0x5f0b30;
		constexpr auto get_IsAdmin = 0x5f0a50;
		constexpr auto get_IsDeveloper = 0x5f0b00;
		constexpr auto get_IsAiming = 0x5f0a60;
		constexpr auto get_IsFlying = 0x5f0b10;
		constexpr auto get_IsConnected = 0x5f0a70;
		constexpr auto get_InGesture = 0x5f09a0;
		constexpr auto get_CurrentGestureBlocksMovement = 0x5f04f0;
		constexpr auto get_CurrentGestureIsDance = 0x5f0530;
		constexpr auto get_CurrentGestureIsFullBody = 0x5f0570;
		constexpr auto get_InGestureCancelCooldown = 0x5f0970;
		constexpr auto SetGestureMenuOpen = 0x5eaaa0;
		constexpr auto RequestStartGesture = 0x5e9500;
		constexpr auto Client_StartGesture = 0x5cfe90;
		constexpr auto ProcessDanceAction = 0x5e76f0;
		constexpr auto SayingHello = 0x5e9a80;
		constexpr auto ProcessGestureStart = 0x5e7c00;
		constexpr auto EndGesture = 0x5d2510;
		constexpr auto EndLocalGesture = 0x5d25b0;
		constexpr auto EndGestureShared = 0x5d23a0;
		constexpr auto HideHeldEntity = 0x5d7ca0;
		constexpr auto CancelGesture = 0x5cb4e0;
		constexpr auto RemoteGestureCancel = 0x5e9250;
		constexpr auto CancelGestureInput = 0x5cb0c0;
		constexpr auto ClearGestureCooldown = 0x5cbee0;
		constexpr auto ConVarRequestStartGesture = 0x5d0be0;
		constexpr auto Client_RemoteCancelledGesture = 0x5cfe40;
		constexpr auto IsGestureBlocked = 0x5d9480;
		constexpr auto get_clientTeamLifetime = 0x5f0ca0;
		constexpr auto CLIENT_ReceiveTeamInfo = 0x5c9a10;
		constexpr auto UpdateSteamGroup = 0x5ee500;
		constexpr auto ClearSteamGroup = 0x5cbf10;
		constexpr auto CLIENT_ClearTeam = 0x5c94a0;
		constexpr auto CLIENT_PendingInvite = 0x5c9640;
		constexpr auto InviteToTeam = 0x5d82a0;
		constexpr auto Promote = 0x5e81d0;
		constexpr auto Menu_Promote_Start = 0x45e1d0;
		constexpr auto Promote_ShowIf = 0x5e7e20;
		constexpr auto LocalPlayerIsLeader = 0x5db500;
		constexpr auto Invite_ShowIf = 0x5d87c0;
		constexpr auto GetHeldEntity = 0x5d42d0;
		constexpr auto GetHeldItem = 0x5d4510;
		constexpr auto GetHeldItemID = 0x5d44c0;
		constexpr auto HeldEntityViewAngles = 0x5d7a80;
		constexpr auto HeldEntityFrame = 0x5d7610;
		constexpr auto HeldEntityInput = 0x5d77e0;
		constexpr auto HeldItemUse = 0x5d7ba0;
		constexpr auto HeldEntityStart = 0x5d79b0;
		constexpr auto HeldEntityEnd = 0x5d7540;
		constexpr auto IsHostileItem = 0x5d9850;
		constexpr auto IsItemHoldRestricted = 0x5d99b0;
		constexpr auto MapInfoOnEnable = 0x5dbb60;
		constexpr auto Client_ReceiveMarkers = 0x5cfb00;
		constexpr auto Client_UpdateDeathMarker = 0x5d0230;
		constexpr auto Client_AddNewDeathMarker = 0x5cf7f0;
		constexpr auto AddPointOfInterest = 0x5c82b0;
		constexpr auto ClearAllPointsOfInterest = 0x5cbd90;
		constexpr auto ClearAllMapMarkers = 0x5cbc30;
		constexpr auto HasAttemptedMission = 0x5d7070;
		constexpr auto CanAcceptMission = 0x5ca340;
		constexpr auto IsMissionActive = 0x5d9d20;
		constexpr auto HasCompletedMission = 0x5d71e0;
		constexpr auto HasFailedMission = 0x5d7350;
		constexpr auto SetActiveMission = 0x5ea9c0;
		constexpr auto GetActiveMission = 0x5d36d0;
		constexpr auto HasActiveMission = 0x5d7060;
		constexpr auto LoadMissions = 0x5daae0;
		constexpr auto OnModelState = 0x5dcdd0;
		constexpr auto OnModelStateChanged = 0x5dcd30;
		constexpr auto get_isMounted = 0x5f0fb0;
		constexpr auto get_isMountingHidingWeapon = 0x5f0fe0;
		constexpr auto GetMounted = 0x5d6050;
		constexpr auto GetMountedVehicle = 0x5d5fc0;
		constexpr auto MarkSwapSeat = 0x5dbbb0;
		constexpr auto SwapSeatCooldown = 0x5ec1a0;
		constexpr auto ClientUpdateMounted = 0x5ce3f0;
		constexpr auto CLIENT_SetPetPrefabID = 0x5c9f30;
		constexpr auto CLIENT_SetPetPetLoadedStateIndex = 0x5c9d80;
		constexpr auto LinkPet = 0x5da990;
		constexpr auto SetPetMenuOpen = 0x5eb3e0;
		constexpr auto ClientIssuePetCommand = 0x5cd3c0;
		constexpr auto IsSleeping = 0x5da000;
		constexpr auto IsSpectating = 0x5da010;
		constexpr auto IsRelaxed = 0x5d9f30;
		constexpr auto IsServerFalling = 0x5d9ff0;
		constexpr auto GetBuildingPrivilege = 0x5d3af0;
		constexpr auto CanBuild = 0x5cacd0;
		constexpr auto IsBuildingBlocked = 0x5d9210;
		constexpr auto IsBuildingAuthed = 0x5d8dd0;
		constexpr auto CanPlaceBuildingPrivilege = 0x5cae60;
		constexpr auto NewProjectileID = 0x5dc2b0;
		constexpr auto NewProjectileSeed = 0x5dc2c0;
		constexpr auto SendProjectileAttack = 0x5ea710;
		constexpr auto SendProjectileRicochet = 0x5ea760;
		constexpr auto SendProjectileUpdate = 0x5ea7b0;
		constexpr auto Load = 0x5db0a0;
		constexpr auto SpectatedPlayerHeadshot = 0x5ebda0;
		constexpr auto GetThreatLevel = 0x5d6f80;
		constexpr auto EnsureUpdated = 0x5d26d0;
		constexpr auto SetHostileLength = 0x5eadf0;
		constexpr auto SetWeaponDrawnDuration = 0x5eba10;
		constexpr auto ModifyInputState = 0x45e1d0;
		constexpr auto ForcePositionToParentOffset = 0x5d31d0;
		constexpr auto UpdateClientTickRate = 0x5ec720;
		constexpr auto ForcePositionTo = 0x5d3300;
		constexpr auto ForceViewAnglesTo = 0x5d34a0;
		constexpr auto SendVoiceData = 0x5ea800;
		constexpr auto SendClientTick = 0x5ea020;
		constexpr auto NotifyUnderwearChange = 0x5dc320;
		constexpr auto UpdatePlayerVisibilities = 0x5ee1b0;
		constexpr auto TimeSinceSeen = 0x5ec300;
		constexpr auto SetNextVisThink = 0x5eb3b0;
		constexpr auto WantsVisUpdate = 0x5efa20;
		constexpr auto IsAimingAt = 0x5d8a00;
		constexpr auto UpdateCullingSpheres = 0x5ed0d0;
		constexpr auto VisUpdateUsingCulling = 0x5ef060;
		constexpr auto VisUpdateUsingRays = 0x5ef170;
		constexpr auto LogDebugCull = 0x5db6b0;
		constexpr auto OnVisibilityChanged = 0x5e6490;
		constexpr auto VisUpdate = 0x5ef590;
		constexpr auto VisPlayerArmed = 0x5eefa0;
		constexpr auto AnyPartVisible = 0x5c8760;
		constexpr auto CalcVisUpdateRate = 0x5ca200;
		constexpr auto PointSeePoint = 0x5e6bb0;
		constexpr auto IsWounded = 0x5da2f0;
		constexpr auto IsCrawling = 0x5d92c0;
		constexpr auto IsIncapacitated = 0x5d99a0;
		constexpr auto ToPlayer = 0x5ec320;
		constexpr auto get_Connection = 0x5f04e0;
		constexpr auto get_displayName = 0x5f0cf0;
		constexpr auto set_displayName = 0x5f1470;
		constexpr auto SanitizePlayerNameString = 0x5e9900;
		constexpr auto IsGod = 0x5d9780;
		constexpr auto GetNetworkRotation = 0x5d60f0;
		constexpr auto CanInteract = 0x5cae00;
		constexpr auto StartHealth = 0x5ebfa0;
		constexpr auto StartMaxHealth = 0x5e67c0;
		constexpr auto MaxHealth = 0x5dbbf0;
		constexpr auto MaxVelocity = 0x5dbca0;
		constexpr auto WorldSpaceBounds = 0x5eff50;
		constexpr auto GetMountVelocity = 0x5d5ef0;
		constexpr auto GetInheritedProjectileVelocity = 0x5d4600;
		constexpr auto GetInheritedThrowVelocity = 0x5d4700;
		constexpr auto GetInheritedDropVelocity = 0x5d4540;
		constexpr auto PreInitShared = 0x5e7280;
		constexpr auto DestroyShared = 0x5d19b0;
		constexpr auto InSafeZone = 0x5d7e30;
		constexpr auto LateClientCycle = 0x5da300;
		constexpr auto ClientCycle = 0x5cc1f0;
		constexpr auto GetBounds = 0x5d3770;
		constexpr auto GetCenter = 0x5d3bc0;
		constexpr auto GetOffset = 0x5d6210;
		constexpr auto GetSize = 0x5d6de0;
		constexpr auto GetHeight = 0x5d42b0;
		constexpr auto GetRadius = 0x5d6cd0;
		constexpr auto GetJumpHeight = 0x5d4c90;
		constexpr auto TriggerPoint = 0x5ec4c0;
		constexpr auto NoClipOffset = 0x5dc2d0;
		constexpr auto NoClipRadius = 0x5dc310;
		constexpr auto MaxDeployDistance = 0x5dbbe0;
		constexpr auto ClientUpdatePersistantData = 0x5ce940;
		constexpr auto GetMinSpeed = 0x5d5ec0;
		constexpr auto GetMaxSpeed = 0x5d4e70;
		constexpr auto GetSpeed = 0x5d6e40;
		constexpr auto OnAttacked = 0x5dc360;
		constexpr auto EnablePlayerCollider = 0x5d2340;
		constexpr auto DisablePlayerCollider = 0x5d1bf0;
		constexpr auto RefreshColliderSize = 0x5e8e10;
		constexpr auto SetPlayerRigidbodyState = 0x5eb9f0;
		constexpr auto AddPlayerRigidbody = 0x5c8130;
		constexpr auto RemovePlayerRigidbody = 0x5e9330;
		constexpr auto IsEnsnared = 0x5d9390;
		constexpr auto IsAttacking = 0x5d8bd0;
		constexpr auto CanAttack = 0x5ca7b0;
		constexpr auto OnLadder = 0x5dcbd0;
		constexpr auto IsSwimming = 0x5da2a0;
		constexpr auto IsHeadUnderwater = 0x5d9800;
		constexpr auto IsOnGround = 0x5d9e90;
		constexpr auto IsRunning = 0x5d9f40;
		constexpr auto IsDucked = 0x5d92e0;
		constexpr auto RecentlyTeleported = 0x5e8c60;
		constexpr auto ShowToast = 0x5ebb40;
		constexpr auto ChatMessage = 0x5cb5b0;
		constexpr auto ConsoleMessage = 0x5d0d90;
		constexpr auto PenetrationResistance = 0x5e67c0;
		constexpr auto ScaleDamage = 0x5e9d90;
		constexpr auto UpdateMoveSpeedFromClothing = 0x5edde0;
		constexpr auto UpdateProtectionFromClothing = 0x5ee390;
		constexpr auto Categorize = 0x5cb580;
		constexpr auto ToString = 0x5ec330;
		constexpr auto GetDebugStatus = 0x5d3e50;
		constexpr auto GetItem = 0x5d4be0;
		constexpr auto get_Traits = 0x5f0c10;
		constexpr auto WaterFactor = 0x5efa40;
		constexpr auto AirFactor = 0x5c8670;
		constexpr auto GetOxygenTime = 0x5d6260;
		constexpr auto ShouldInheritNetworkGroup = 0x5da010;
		constexpr auto AnyPlayersVisibleToEntity = 0x5c8da0;
		constexpr auto IsStandingOnEntity = 0x5da020;
		constexpr auto SetActiveTelephone = 0x5ea9d0;
		constexpr auto get_HasActiveTelephone = 0x5f05b0;
		constexpr auto get_IsDesigningAI = 0x5f0aa0;
		constexpr auto ClearDesigningAIEntity = 0x5cbec0;
		constexpr auto ctor = 0x5f0330;
		constexpr auto cctor = 0x5f01e0;
	};

	namespace BaseMovement {
		constexpr auto adminCheat = 0x18;
		constexpr auto adminSpeed = 0x1c;
		constexpr auto Ownerk__BackingField = 0x20;
		constexpr auto InheritedVelocityk__BackingField = 0x28;
		constexpr auto TargetMovementk__BackingField = 0x34;
		constexpr auto Runningk__BackingField = 0x40;
		constexpr auto Duckingk__BackingField = 0x44;
		constexpr auto Crawlingk__BackingField = 0x48;
		constexpr auto Groundedk__BackingField = 0x4c;
		constexpr auto lastTeleportedTime = 0x50;

		constexpr auto get_Owner = 0x5f2320;
		constexpr auto set_Owner = 0x5f2350;
		constexpr auto get_InheritedVelocity = 0x94c010;
		constexpr auto set_InheritedVelocity = 0x6b4f50;
		constexpr auto get_TargetMovement = 0x94c0a0;
		constexpr auto set_TargetMovement = 0x6b4f40;
		constexpr auto get_Running = 0x530e60;
		constexpr auto set_Running = 0x530e70;
		constexpr auto get_Ducking = 0x8a0a90;
		constexpr auto set_Ducking = 0x94c0c0;
		constexpr auto get_Crawling = 0x8bffd0;
		constexpr auto set_Crawling = 0x8bffe0;
		constexpr auto get_Grounded = 0x6b4f20;
		constexpr auto set_Grounded = 0x6b4f60;
		constexpr auto get_IsRunning = 0x94c060;
		constexpr auto get_IsDucked = 0x94c040;
		constexpr auto get_IsCrawling = 0x94c030;
		constexpr auto get_IsGrounded = 0x94c050;
		constexpr auto CurrentVelocity = 0x94bd90;
		constexpr auto CurrentMoveSpeed = 0x652640;
		constexpr auto GetCollider = 0x52bcf0;
		constexpr auto Init = 0x5f2350;
		constexpr auto BlockJump = 0x45e1d0;
		constexpr auto BlockSprint = 0x45e1d0;
		constexpr auto get_RecentlyTeleported = 0x94c070;
		constexpr auto ClientInput = 0x45e1d0;
		constexpr auto DoFixedUpdate = 0x45e1d0;
		constexpr auto FrameUpdate = 0x94be80;
		constexpr auto TeleportTo = 0x94bf70;
		constexpr auto Push = 0x45e1d0;
		constexpr auto SetParent = 0x45e1d0;
		constexpr auto FixedUpdate = 0x94be00;
		constexpr auto PlayerAttemptedMount = 0x45e1d0;
		constexpr auto PlayerCompletedMount = 0x45e1d0;
		constexpr auto ctor = 0x8c5db0;
	};

	namespace BaseProjectile {
		constexpr auto NoiseRadius = 0x280;
		constexpr auto damageScale = 0x284;
		constexpr auto distanceScale = 0x288;
		constexpr auto projectileVelocityScale = 0x28c;
		constexpr auto automatic = 0x290;
		constexpr auto usableByTurret = 0x291;
		constexpr auto turretDamageScale = 0x294;
		constexpr auto attackFX = 0x298;
		constexpr auto silencedAttack = 0x2a0;
		constexpr auto muzzleBrakeAttack = 0x2a8;
		constexpr auto MuzzlePoint = 0x2b0;
		constexpr auto reloadTime = 0x2b8;
		constexpr auto canUnloadAmmo = 0x2bc;
		constexpr auto primaryMagazine = 0x2c0;
		constexpr auto fractionalReload = 0x2c8;
		constexpr auto reloadStartDuration = 0x2cc;
		constexpr auto reloadFractionDuration = 0x2d0;
		constexpr auto reloadEndDuration = 0x2d4;
		constexpr auto aimSway = 0x2d8;
		constexpr auto aimSwaySpeed = 0x2dc;
		constexpr auto recoil = 0x2e0;
		constexpr auto aimconeCurve = 0x2e8;
		constexpr auto aimCone = 0x2f0;
		constexpr auto hipAimCone = 0x2f4;
		constexpr auto aimconePenaltyPerShot = 0x2f8;
		constexpr auto aimConePenaltyMax = 0x2fc;
		constexpr auto aimconePenaltyRecoverTime = 0x300;
		constexpr auto aimconePenaltyRecoverDelay = 0x304;
		constexpr auto stancePenaltyScale = 0x308;
		constexpr auto hasADS = 0x30c;
		constexpr auto noAimingWhileCycling = 0x30d;
		constexpr auto manualCycle = 0x30e;
		constexpr auto needsCycle = 0x30f;
		constexpr auto isCycling = 0x310;
		constexpr auto aiming = 0x311;
		constexpr auto isBurstWeapon = 0x312;
		constexpr auto canChangeFireModes = 0x313;
		constexpr auto defaultOn = 0x314;
		constexpr auto internalBurstRecoilScale = 0x318;
		constexpr auto internalBurstFireRateScale = 0x31c;
		constexpr auto internalBurstAimConeScale = 0x320;
		constexpr auto Toast_BurstDisabled = 0x328;
		constexpr auto Toast_BurstEnabled = 0x330;
		constexpr auto resetDuration = 0x338;
		constexpr auto numShotsFired = 0x33c;
		constexpr auto nextReloadTime = 0x340;
		constexpr auto startReloadTime = 0x344;
		constexpr auto stancePenalty = 0x348;
		constexpr auto aimconePenalty = 0x34c;
		constexpr auto cachedModHash = 0x350;
		constexpr auto sightAimConeScale = 0x354;
		constexpr auto sightAimConeOffset = 0x358;
		constexpr auto hipAimConeScale = 0x35c;
		constexpr auto hipAimConeOffset = 0x360;
		constexpr auto isReloading = 0x364;
		constexpr auto swaySampleTime = 0x368;
		constexpr auto lastShotTime = 0x36c;
		constexpr auto reloadPressTime = 0x370;
		constexpr auto ammoTypePreReload = 0x378;
		constexpr auto fractionalReloadDesiredCount = 0x380;
		constexpr auto fractionalReloadNumAdded = 0x384;
		constexpr auto currentBurst = 0x388;
		constexpr auto triggerReady = 0x38c;
		constexpr auto nextHeightCheckTime = 0x390;
		constexpr auto cachedUnderground = 0x394;
		constexpr auto createdProjectiles = 0x398;

		constexpr auto OnRpcMessage = 0x91df30;
		constexpr auto get_recoilProperties = 0x91fd80;
		constexpr auto GetInheritedVelocity = 0x91b2d0;
		constexpr auto GetDamageScale = 0x91b2b0;
		constexpr auto GetDistanceScale = 0x91b2c0;
		constexpr auto GetProjectileVelocityScale = 0x5c3320;
		constexpr auto StartReloadCooldown = 0x91f770;
		constexpr auto ResetReloadCooldown = 0x91eb30;
		constexpr auto HasReloadCooldown = 0x91c1d0;
		constexpr auto GetReloadCooldown = 0x91bad0;
		constexpr auto GetReloadIdle = 0x91bc30;
		constexpr auto OnDrawGizmos = 0x91d6d0;
		constexpr auto GetRecoil = 0x91bac0;
		constexpr auto get_isSemiAuto = 0x91fd70;
		constexpr auto GetAimCone = 0x91a5f0;
		constexpr auto ScaleRepeatDelay = 0x91eb40;
		constexpr auto GetProjectileModifier = 0x91b480;
		constexpr auto UsingBurstMode = 0x91f890;
		constexpr auto UsingInternalBurstMode = 0x91fa20;
		constexpr auto IsBurstEligable = 0x91c290;
		constexpr auto TimeBetweenBursts = 0x91f7c0;
		constexpr auto DidAttackClientside = 0x918970;
		constexpr auto GetItemOptions = 0x91b330;
		constexpr auto ClientIsReloading = 0x918690;
		constexpr auto NotifySpectatorReloading = 0x91d680;
		constexpr auto EditViewAngles = 0x919bf0;
		constexpr auto OnFrame = 0x91daa0;
		constexpr auto ShotFired = 0x91eed0;
		constexpr auto SimulateAimcone = 0x91ef30;
		constexpr auto CanAttack = 0x918490;
		constexpr auto CanAim = 0x918460;
		constexpr auto OnInput = 0x91dab0;
		constexpr auto ReadyToAim = 0x91ea80;
		constexpr auto ReadyToFire = 0x91ead0;
		constexpr auto AmmoTypeClicked = 0x918340;
		constexpr auto AddAmmoOption = 0x918190;
		constexpr auto GetReloadMenu = 0x91bcb0;
		constexpr auto PredictAmmoType = 0x91e6e0;
		constexpr auto HasMoreThanOneAmmoType = 0x91bf20;
		constexpr auto OnDeploy = 0x91d690;
		constexpr auto DoReload = 0x919660;
		constexpr auto InsertAmmoFraction = 0x91c200;
		constexpr auto CancelFractionalReloading = 0x9184b0;
		constexpr auto ClientFinishFractionalReload = 0x918550;
		constexpr auto ClientSingleReload = 0x9186a0;
		constexpr auto IsBursting = 0x91c400;
		constexpr auto GetBurstModeCount = 0x91b130;
		constexpr auto DoAttack = 0x918a40;
		constexpr auto BeginCycle = 0x9183d0;
		constexpr auto LaunchProjectile = 0x91d490;
		constexpr auto DryFire = 0x919b30;
		constexpr auto ProcessSpectatorViewmodel = 0x91ea20;
		constexpr auto ProcessSpectatorViewmodelEvent = 0x91e910;
		constexpr auto GetReloadDuration = 0x91bb50;
		constexpr auto GetAvailableAmmo = 0x91af20;
		constexpr auto IsBurstDisabled = 0x91c260;
		constexpr auto IsSilenced = 0x91c410;
		constexpr auto FiredUnderground = 0x91a560;
		constexpr auto OnSignal = 0x91e020;
		constexpr auto LaunchProjectileClientside = 0x91c5f0;
		constexpr auto CreateProjectile = 0x9187e0;
		constexpr auto UpdateAmmoDisplay = 0x91f7e0;
		constexpr auto get_UsingInfiniteAmmoCheat = 0x5d1c50;
		constexpr auto Load = 0x91d5e0;
		constexpr auto ctor = 0x91fa60;
	};

	namespace PlayerWalkMovement {
		constexpr auto zeroFrictionMaterial = 0x58;
		constexpr auto highFrictionMaterial = 0x60;
		constexpr auto capsuleHeight = 0x68;
		constexpr auto capsuleCenter = 0x6c;
		constexpr auto capsuleHeightDucked = 0x70;
		constexpr auto capsuleCenterDucked = 0x74;
		constexpr auto capsuleHeightCrawling = 0x78;
		constexpr auto capsuleCenterCrawling = 0x7c;
		constexpr auto gravityTestRadius = 0x80;
		constexpr auto gravityMultiplier = 0x84;
		constexpr auto gravityMultiplierSwimming = 0x88;
		constexpr auto maxAngleWalking = 0x8c;
		constexpr auto maxAngleClimbing = 0x90;
		constexpr auto maxAngleSliding = 0x94;
		constexpr auto maxStepHeight = 0x98;
		constexpr auto body = 0xa0;
		constexpr auto initialColDetectionMode = 0xa8;
		constexpr auto capsule = 0xb0;
		constexpr auto ladder = 0xb8;
		constexpr auto maxVelocity = 0xc0;
		constexpr auto groundAngle = 0xc4;
		constexpr auto groundAngleNew = 0xc8;
		constexpr auto groundTime = 0xcc;
		constexpr auto jumpTime = 0xd0;
		constexpr auto landTime = 0xd4;
		constexpr auto previousPosition = 0xd8;
		constexpr auto previousVelocity = 0xe4;
		constexpr auto previousInheritedVelocity = 0xf0;
		constexpr auto groundNormal = 0xfc;
		constexpr auto groundNormalNew = 0x108;
		constexpr auto groundVelocity = 0x114;
		constexpr auto groundVelocityNew = 0x120;
		constexpr auto nextSprintTime = 0x12c;
		constexpr auto lastSprintTime = 0x130;
		constexpr auto sprintForced = 0x134;
		constexpr auto attemptedMountTime = 0x138;
		constexpr auto modify = 0x13c;
		constexpr auto grounded = 0x140;
		constexpr auto climbing = 0x141;
		constexpr auto sliding = 0x142;
		constexpr auto swimming = 0x143;
		constexpr auto wasSwimming = 0x144;
		constexpr auto jumping = 0x145;
		constexpr auto wasJumping = 0x146;
		constexpr auto falling = 0x147;
		constexpr auto wasFalling = 0x148;
		constexpr auto flying = 0x149;
		constexpr auto wasFlying = 0x14a;
		constexpr auto forcedDuckDelta = 0x14c;

		constexpr auto Awake = 0xb09f60;
		constexpr auto GetCollider = 0xa96660;
		constexpr auto OnDisable = 0xb0ee60;
		constexpr auto Init = 0xb0c690;
		constexpr auto OnCollisionEnter = 0xb0eca0;
		constexpr auto OnCollisionStay = 0xb0ed80;
		constexpr auto GroundCheck = 0xb0be50;
		constexpr auto TeleportTo = 0xb0f510;
		constexpr auto UpdateCurrentLadder = 0xb0f840;
		constexpr auto WantsSprint = 0xb108b0;
		constexpr auto ClientInput = 0xb0a250;
		constexpr auto Movement_Water = 0xb0e0f0;
		constexpr auto Movement_Mounted = 0xb0d1d0;
		constexpr auto Movement_Ladder = 0xb0cb80;
		constexpr auto Movement_Noclip = 0xb0d2e0;
		constexpr auto Movement_Walking = 0xb0d870;
		constexpr auto GetHeldEntityMovementMultiplier = 0xb0bda0;
		constexpr auto HandleGrounded = 0xb0c120;
		constexpr auto HandleRunDuckCrawl = 0xb0c2a0;
		constexpr auto GetForcedDuck = 0xb0bcb0;
		constexpr auto HandleJumping = 0xb0c170;
		constexpr auto CanJump = 0xb0a0d0;
		constexpr auto BlockJump = 0xb0a040;
		constexpr auto BlockSprint = 0xb0a080;
		constexpr auto SetKinematic = 0xb0f2e0;
		constexpr auto ApplyForce = 0xb09f20;
		constexpr auto CanSprint = 0xb0a1e0;
		constexpr auto Jump = 0xb0c860;
		constexpr auto DoFixedUpdate = 0xb0a600;
		constexpr auto DoStepUp = 0xb0ae30;
		constexpr auto UpdateVelocity = 0xb0fd60;
		constexpr auto UpdateGravity = 0xb0fa10;
		constexpr auto FrameUpdate = 0xb0b800;
		constexpr auto TransformState = 0xb0f630;
		constexpr auto SetParent = 0xb0f310;
		constexpr auto FallVelocity = 0xb0b750;
		constexpr auto CurrentVelocity = 0xb0a5c0;
		constexpr auto CurrentMoveSpeed = 0xb0a570;
		constexpr auto PlayerAttemptedMount = 0xb0f280;
		constexpr auto PlayerCompletedMount = 0xb0f2b0;
		constexpr auto ctor = 0xb10940;
	};

	namespace UnityEngine_GUI {
		constexpr auto s_BoxHash = 0x4;
		constexpr auto s_ButonHash = 0x8;
		constexpr auto s_RepeatButtonHash = 0xc;
		constexpr auto s_ToggleHash = 0x10;
		constexpr auto s_ButtonGridHash = 0x14;
		constexpr auto s_SliderHash = 0x18;
		constexpr auto s_BeginGroupHash = 0x1c;
		constexpr auto s_ScrollviewHash = 0x20;
		constexpr auto scrollTroughSidek__BackingField = 0x24;
		constexpr auto nextScrollStepTimek__BackingField = 0x28;
		constexpr auto s_Skin = 0x30;
		constexpr auto scrollViewStatesk__BackingField = 0x38;

		constexpr auto get_color = 0x1ce60a0;
		constexpr auto set_color = 0x1ce6640;
		constexpr auto get_backgroundColor = 0x1ce5f50;
		constexpr auto set_backgroundColor = 0x1ce6550;
		constexpr auto get_contentColor = 0x1ce6160;
		constexpr auto set_contentColor = 0x1ce66f0;
		constexpr auto get_changed = 0x1ce6030;
		constexpr auto set_changed = 0x1ce65c0;
		constexpr auto get_enabled = 0x1ce61e0;
		constexpr auto set_enabled = 0x1ce6760;
		constexpr auto get_usePageScrollbars = 0x1ce64e0;
		constexpr auto get_blendMaterial = 0x1ce5fd0;
		constexpr auto get_blitMaterial = 0x1ce6000;
		constexpr auto get_roundedRectMaterial = 0x1ce6300;
		constexpr auto get_roundedRectWithColorPerBorderMaterial = 0x1ce6330;
		constexpr auto GrabMouseControl = 0x1ce40a0;
		constexpr auto HasMouseControl = 0x1ce4e90;
		constexpr auto ReleaseMouseControl = 0x1ce55a0;
		constexpr auto SetNextControlName = 0x1ce5830;
		constexpr auto InternalRepaintEditorWindow = 0x1ce51b0;
		constexpr auto cctor = 0x1ce5c90;
		constexpr auto get_scrollTroughSide = 0x1ce6360;
		constexpr auto set_scrollTroughSide = 0x1ce68c0;
		constexpr auto get_nextScrollStepTime = 0x1ce62a0;
		constexpr auto set_nextScrollStepTime = 0x1ce6800;
		constexpr auto set_skin = 0x1ce6980;
		constexpr auto get_skin = 0x1ce6480;
		constexpr auto DoSetSkin = 0x1ce2520;
		constexpr auto get_matrix = 0x1ce6210;
		constexpr auto set_matrix = 0x1ce67a0;
		constexpr auto Label = 0x1ce52d0;
		constexpr auto DrawTexture = 0x1ce36b0;
		constexpr auto CalculateScaledTextureRects = 0x1ce0870;
		constexpr auto Box = 0x1cdfc60;
		constexpr auto Button = 0x1cdfd20;
		constexpr auto PasswordFieldGetStrToShow = 0x1ce5470;
		constexpr auto DoTextField = 0x1ce29a0;
		constexpr auto HandleTextFieldEventForTouchscreen = 0x1ce48d0;
		constexpr auto HandleTextFieldEventForDesktop = 0x1ce40e0;
		constexpr auto Toggle = 0x1ce5ad0;
		constexpr auto SelectionGrid = 0x1ce56d0;
		constexpr auto CalcTotalHorizSpacing = 0x1ce0660;
		constexpr auto DoControl = 0x1ce1e50;
		constexpr auto DoLabel = 0x1ce2290;
		constexpr auto DoToggle = 0x1ce2b60;
		constexpr auto DoButton = 0x1ce1d20;
		constexpr auto DoButtonGrid = 0x1ce1030;
		constexpr auto CalcMouseRects = 0x1ce0140;
		constexpr auto HorizontalSlider = 0x1ce4fa0;
		constexpr auto Slider = 0x1ce5870;
		constexpr auto BeginGroup = 0x1cdf640;
		constexpr auto EndGroup = 0x1ce4060;
		constexpr auto get_scrollViewStates = 0x1ce6420;
		constexpr auto CallWindowDelegate = 0x1ce0ba0;
		constexpr auto get_color_Injected = 0x1ce6060;
		constexpr auto set_color_Injected = 0x1ce6600;
		constexpr auto get_backgroundColor_Injected = 0x1ce5f10;
		constexpr auto set_backgroundColor_Injected = 0x1ce6510;
		constexpr auto get_contentColor_Injected = 0x1ce6120;
		constexpr auto set_contentColor_Injected = 0x1ce66b0;
	};

	namespace UnityEngine_GUIStyle {
		constexpr auto m_Ptr = 0x10;
		constexpr auto m_Normal = 0x18;
		constexpr auto m_Hover = 0x20;
		constexpr auto m_Active = 0x28;
		constexpr auto m_Focused = 0x30;
		constexpr auto m_OnNormal = 0x38;
		constexpr auto m_OnHover = 0x40;
		constexpr auto m_OnActive = 0x48;
		constexpr auto m_OnFocused = 0x50;
		constexpr auto m_Border = 0x58;
		constexpr auto m_Padding = 0x60;
		constexpr auto m_Margin = 0x68;
		constexpr auto m_Overflow = 0x70;
		constexpr auto m_Name = 0x78;
		constexpr auto s_None = 0x8;

		constexpr auto get_rawName = 0x1cdd1a0;
		constexpr auto set_rawName = 0x1cdd570;
		constexpr auto get_font = 0x1cdcc90;
		constexpr auto get_imagePosition = 0x1cdccd0;
		constexpr auto set_alignment = 0x1cdd410;
		constexpr auto get_wordWrap = 0x1cdd260;
		constexpr auto get_contentOffset = 0x1cdcbc0;
		constexpr auto set_contentOffset = 0x1cdd4a0;
		constexpr auto get_fixedWidth = 0x1cdcc50;
		constexpr auto get_fixedHeight = 0x1cdcc10;
		constexpr auto get_stretchWidth = 0x1cdd220;
		constexpr auto set_stretchWidth = 0x1cdd610;
		constexpr auto get_stretchHeight = 0x1cdd1e0;
		constexpr auto set_stretchHeight = 0x1cdd5c0;
		constexpr auto set_fontSize = 0x1cdd4e0;
		constexpr auto set_Internal_clipOffset = 0x1cdd3d0;
		constexpr auto Internal_Create = 0x1cdbfd0;
		constexpr auto Internal_Copy = 0x1cdbf80;
		constexpr auto Internal_Destroy = 0x1cdc010;
		constexpr auto GetStyleStatePtr = 0x1cdbdb0;
		constexpr auto GetRectOffsetPtr = 0x1cdbd70;
		constexpr auto Internal_GetLineHeight = 0x1cdc6a0;
		constexpr auto Internal_Draw = 0x1cdc420;
		constexpr auto Internal_Draw2 = 0x1cdc0c0;
		constexpr auto Internal_DrawCursor = 0x1cdc1a0;
		constexpr auto Internal_DrawWithTextSelection = 0x1cdc2c0;
		constexpr auto Internal_GetCursorPixelPosition = 0x1cdc550;
		constexpr auto Internal_GetCursorStringIndex = 0x1cdc640;
		constexpr auto Internal_GetSelectedRenderedText = 0x1cdc750;
		constexpr auto Internal_CalcSize = 0x1cdacc0;
		constexpr auto Internal_CalcSizeWithConstraints = 0x1cdac60;
		constexpr auto Internal_CalcHeight = 0x1cdab80;
		constexpr auto Internal_CalcMinMaxWidth = 0x1cdbe50;
		constexpr auto SetMouseTooltip = 0x1cdc850;
		constexpr auto Internal_GetCursorFlashOffset = 0x1cdc4b0;
		constexpr auto SetDefaultFont = 0x1cdc7c0;
		constexpr auto ctor = 0x1cdcaf0;
		constexpr auto Finalize = 0x1cdbb90;
		constexpr auto get_name = 0x1cdcf10;
		constexpr auto set_name = 0x1cdd520;
		constexpr auto get_normal = 0x1cdd030;
		constexpr auto get_margin = 0x1cdce60;
		constexpr auto get_padding = 0x1cdd0f0;
		constexpr auto get_lineHeight = 0x1cdcdb0;
		constexpr auto Draw = 0x1cdb960;
		constexpr auto DrawCursor = 0x1cdad20;
		constexpr auto DrawWithTextSelection = 0x1cdb1e0;
		constexpr auto op_Implicit = 0x1cdd2a0;
		constexpr auto get_none = 0x1cdcf70;
		constexpr auto GetCursorPixelPosition = 0x1cdbc90;
		constexpr auto GetCursorStringIndex = 0x1cdbd10;
		constexpr auto CalcSize = 0x1cdacc0;
		constexpr auto CalcSizeWithConstraints = 0x1cdac60;
		constexpr auto CalcHeight = 0x1cdab80;
		constexpr auto get_isHeightDependantOnWidth = 0x1cdcd10;
		constexpr auto CalcMinMaxWidth = 0x1cdabe0;
		constexpr auto ToString = 0x1cdc8d0;
		constexpr auto cctor = 0x1cdc9e0;
		constexpr auto get_contentOffset_Injected = 0x1cdcb70;
		constexpr auto set_contentOffset_Injected = 0x1cdd450;
		constexpr auto set_Internal_clipOffset_Injected = 0x1cdd380;
		constexpr auto Internal_Draw_Injected = 0x1cdc390;
		constexpr auto Internal_Draw2_Injected = 0x1cdc050;
		constexpr auto Internal_DrawCursor_Injected = 0x1cdc130;
		constexpr auto Internal_DrawWithTextSelection_Injected = 0x1cdc210;
		constexpr auto Internal_GetCursorPixelPosition_Injected = 0x1cdc4e0;
		constexpr auto Internal_GetCursorStringIndex_Injected = 0x1cdc5d0;
		constexpr auto Internal_GetSelectedRenderedText_Injected = 0x1cdc6e0;
		constexpr auto Internal_CalcSize_Injected = 0x1cdbf20;
		constexpr auto Internal_CalcSizeWithConstraints_Injected = 0x1cdbeb0;
		constexpr auto Internal_CalcMinMaxWidth_Injected = 0x1cdbdf0;
		constexpr auto SetMouseTooltip_Injected = 0x1cdc800;
	};

	namespace UnityEngine_Event {
		constexpr auto m_Ptr = 0x10;
		constexpr auto s_MasterEvent = 0x8;

		constexpr auto get_rawType = 0x1ccc8c0;
		constexpr auto get_mousePosition = 0x1ccc7f0;
		constexpr auto set_mousePosition = 0x1cccbd0;
		constexpr auto get_delta = 0x1ccc570;
		constexpr auto get_pointerType = 0x1ccc840;
		constexpr auto get_button = 0x1ccc360;
		constexpr auto get_modifiers = 0x1ccc760;
		constexpr auto set_modifiers = 0x1cccb40;
		constexpr auto get_pressure = 0x1ccc880;
		constexpr auto get_clickCount = 0x1ccc3e0;
		constexpr auto get_character = 0x1ccc3a0;
		constexpr auto set_character = 0x1ccc980;
		constexpr auto get_keyCode = 0x1ccc720;
		constexpr auto set_keyCode = 0x1cccb00;
		constexpr auto get_displayIndex = 0x1ccc5c0;
		constexpr auto set_displayIndex = 0x1cccac0;
		constexpr auto get_type = 0x1ccc940;
		constexpr auto set_type = 0x1cccc10;
		constexpr auto get_commandName = 0x1ccc420;
		constexpr auto set_commandName = 0x1ccc9d0;
		constexpr auto Internal_Use = 0x1cca240;
		constexpr auto Internal_Create = 0x1cca040;
		constexpr auto Internal_Destroy = 0x1cca080;
		constexpr auto Internal_Copy = 0x1cca000;
		constexpr auto GetTypeForControl = 0x1cc9fc0;
		constexpr auto CopyFromPtr = 0x1cc9aa0;
		constexpr auto PopEvent = 0x1ccb510;
		constexpr auto Internal_SetNativeEvent = 0x1cca200;
		constexpr auto Internal_MakeMasterEventCurrent = 0x1cca0c0;
		constexpr auto ctor = 0x1ccc290;
		constexpr auto Finalize = 0x1cc9db0;
		constexpr auto CopyFrom = 0x1cc9af0;
		constexpr auto get_shift = 0x1ccc900;
		constexpr auto get_control = 0x1ccc4a0;
		constexpr auto get_alt = 0x1ccc320;
		constexpr auto get_command = 0x1ccc460;
		constexpr auto get_current = 0x1ccc4e0;
		constexpr auto set_current = 0x1ccca20;
		constexpr auto get_isKey = 0x1ccc670;
		constexpr auto get_isMouse = 0x1ccc6c0;
		constexpr auto get_isDirectManipulationDevice = 0x1ccc600;
		constexpr auto KeyboardEvent = 0x1cca280;
		constexpr auto GetHashCode = 0x1cc9e90;
		constexpr auto Equals = 0x1cc9b60;
		constexpr auto ToString = 0x1ccb550;
		constexpr auto Use = 0x1ccc030;
		constexpr auto get_mousePosition_Injected = 0x1ccc7a0;
		constexpr auto set_mousePosition_Injected = 0x1cccb80;
		constexpr auto get_delta_Injected = 0x1ccc520;
	};

	namespace UnityEngine_Input {

		constexpr auto GetKeyInt = 0x25afcf0;
		constexpr auto GetKeyUpInt = 0x25afd30;
		constexpr auto GetKeyDownInt = 0x25afcb0;
		constexpr auto GetAxis = 0x25afc30;
		constexpr auto GetAxisRaw = 0x25afbf0;
		constexpr auto GetButtonDown = 0x25afc70;
		constexpr auto GetMouseButton = 0x25afdf0;
		constexpr auto GetMouseButtonDown = 0x25afd70;
		constexpr auto GetMouseButtonUp = 0x25afdb0;
		constexpr auto GetTouch = 0x25afe70;
		constexpr auto GetKey = 0x25afcf0;
		constexpr auto GetKeyUp = 0x25afd30;
		constexpr auto GetKeyDown = 0x25afcb0;
		constexpr auto get_anyKey = 0x25aff00;
		constexpr auto get_anyKeyDown = 0x25afed0;
		constexpr auto get_mousePosition = 0x25b0050;
		constexpr auto get_mouseScrollDelta = 0x25b0100;
		constexpr auto get_imeCompositionMode = 0x25affe0;
		constexpr auto set_imeCompositionMode = 0x25b0350;
		constexpr auto get_compositionString = 0x25affb0;
		constexpr auto get_compositionCursorPos = 0x25aff70;
		constexpr auto set_compositionCursorPos = 0x25b0310;
		constexpr auto get_mousePresent = 0x25b0090;
		constexpr auto get_touchCount = 0x25b0140;
		constexpr auto get_touchSupported = 0x25b0170;
		constexpr auto get_touches = 0x25b01a0;
		constexpr auto GetTouch_Injected = 0x25afe30;
		constexpr auto get_mousePosition_Injected = 0x25b0010;
		constexpr auto get_mouseScrollDelta_Injected = 0x25b00c0;
		constexpr auto get_compositionCursorPos_Injected = 0x25aff30;
		constexpr auto set_compositionCursorPos_Injected = 0x25b02d0;
	};

	namespace UnityEngine_DDraw {
		constexpr auto singleton = 0x8;
		constexpr auto list = 0x18;
		constexpr auto AutoYPosition = 0x10;
		constexpr auto LastAutoY = 0x14;
		constexpr auto lineMaterial = 0x18;
		constexpr auto _skin = 0x20;

		constexpr auto Get = 0x74d220;
		constexpr auto Capsule = 0x74ce40;
		constexpr auto Sphere = 0x74e6c0;
		constexpr auto SphereGizmo = 0x74e3d0;
		constexpr auto Line = 0x74d4f0;
		constexpr auto Arrow = 0x74bf10;
		constexpr auto ArrowPadded = 0x74b810;
		constexpr auto Bounds = 0x74c140;
		constexpr auto Box = 0x74c700;
		constexpr auto Text = 0x74e9a0;
		constexpr auto ScreenText = 0x74e230;
		constexpr auto Awake = 0x74c0d0;
		constexpr auto OnPreRender = 0x74de50;
		constexpr auto OnPostRender = 0x74db10;
		constexpr auto OnGUI = 0x74d940;
		constexpr auto CreateLineMaterial = 0x74d0c0;
		constexpr auto get_skin = 0x74ebb0;
		constexpr auto ctor = 0x74eb40;
		constexpr auto cctor = 0x45e1d0;
	};

	namespace UnityEngine_Texture2D {

		constexpr auto get_format = 0x2426fa0;
		constexpr auto get_whiteTexture = 0x2427020;
		constexpr auto get_blackTexture = 0x2426f70;
		constexpr auto Compress = 0x2425790;
		constexpr auto Internal_CreateImpl = 0x2425e20;
		constexpr auto Internal_Create = 0x2425e80;
		constexpr auto get_isReadable = 0x2426fe0;
		constexpr auto ApplyImpl = 0x24255e0;
		constexpr auto ResizeImpl = 0x2426350;
		constexpr auto SetPixelImpl = 0x2426690;
		constexpr auto GetPixelImpl = 0x2425a00;
		constexpr auto GetPixelBilinearImpl = 0x2425840;
		constexpr auto ResizeWithFormatImpl = 0x24263a0;
		constexpr auto ReadPixelsImpl = 0x2426140;
		constexpr auto SetPixelsImpl = 0x2426890;
		constexpr auto LoadRawTextureDataImpl = 0x2425f50;
		constexpr auto GetWritableImageData = 0x2425de0;
		constexpr auto GetRawImageDataSize = 0x2425da0;
		constexpr auto set_requestedMipmapLevel = 0x2427090;
		constexpr auto set_minimumMipmapLevel = 0x2427050;
		constexpr auto ClearRequestedMipmapLevel = 0x2425750;
		constexpr auto ClearMinimumMipmapLevel = 0x2425710;
		constexpr auto SetAllPixels32 = 0x2426570;
		constexpr auto SetBlockOfPixels32 = 0x24265d0;
		constexpr auto GetPixels = 0x2425ca0;
		constexpr auto GetPixels32 = 0x2425ba0;
		constexpr auto ctor = 0x2426db0;
		constexpr auto SetPixel = 0x2426700;
		constexpr auto SetPixels = 0x24268f0;
		constexpr auto GetPixel = 0x2425a80;
		constexpr auto GetPixelBilinear = 0x24258c0;
		constexpr auto LoadRawTextureData = 0x2425fb0;
		constexpr auto Apply = 0x2425660;
		constexpr auto Resize = 0x24264d0;
		constexpr auto ReadPixels = 0x2426280;
		constexpr auto SetPixels32 = 0x2426570;
		constexpr auto SetPixelImpl_Injected = 0x2426630;
		constexpr auto GetPixelImpl_Injected = 0x24259a0;
		constexpr auto GetPixelBilinearImpl_Injected = 0x24257e0;
		constexpr auto ReadPixelsImpl_Injected = 0x24260d0;
	};

	namespace ModelState {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto waterLevel = 0x14;
		constexpr auto lookDir = 0x18;
		constexpr auto flags = 0x24;
		constexpr auto poseType = 0x28;
		constexpr auto inheritedVelocity = 0x2c;

		constexpr auto ctor = 0x22c7e10;
		constexpr auto HasFlag = 0x22c72f0;
		constexpr auto SetFlag = 0x22c7da0;
		constexpr auto get_ducked = 0x22c7e60;
		constexpr auto set_ducked = 0x22c7f60;
		constexpr auto get_jumped = 0x22c7e90;
		constexpr auto set_jumped = 0x22c7fc0;
		constexpr auto get_onground = 0x22c7ed0;
		constexpr auto set_onground = 0x22c8040;
		constexpr auto get_sleeping = 0x22c7f00;
		constexpr auto set_sleeping = 0x22c80a0;
		constexpr auto get_sprinting = 0x22c7f10;
		constexpr auto set_sprinting = 0x22c80c0;
		constexpr auto get_onLadder = 0x22c7eb0;
		constexpr auto set_onLadder = 0x22c8000;
		constexpr auto get_flying = 0x22c7e70;
		constexpr auto set_flying = 0x22c7f80;
		constexpr auto get_aiming = 0x22c7e40;
		constexpr auto set_aiming = 0x22c7f20;
		constexpr auto get_prone = 0x22c7ee0;
		constexpr auto set_prone = 0x22c8060;
		constexpr auto get_mounted = 0x22c7ea0;
		constexpr auto set_mounted = 0x22c7fe0;
		constexpr auto get_relaxed = 0x22c7ef0;
		constexpr auto set_relaxed = 0x22c8080;
		constexpr auto get_crawling = 0x22c7e50;
		constexpr auto set_crawling = 0x22c7f40;
		constexpr auto get_onPhone = 0x22c7ec0;
		constexpr auto set_onPhone = 0x22c8020;
		constexpr auto get_headLook = 0x22c7e80;
		constexpr auto set_headLook = 0x22c7fa0;
		constexpr auto Equal = 0x22c6f90;
		constexpr auto ResetToPool = 0x22c73d0;
		constexpr auto Dispose = 0x22c6f10;
		constexpr auto EnterPool = 0x10beca0;
		constexpr auto LeavePool = 0x10becd0;
		constexpr auto CopyTo = 0x22c5bf0;
		constexpr auto Copy = 0x22c5c40;
		constexpr auto Deserialize = 0x22c6c90;
		constexpr auto DeserializeLengthDelimited = 0x22c5ce0;
		constexpr auto DeserializeLength = 0x22c6370;
		constexpr auto FromProto = 0x22c70a0;
		constexpr auto WriteToStream = 0x22c7dd0;
		constexpr auto WriteToStreamDelta = 0x22c7df0;
		constexpr auto ReadFromStream = 0x22c7300;
		constexpr auto SerializeDelta = 0x22c7480;
		constexpr auto Serialize = 0x22c7ae0;
		constexpr auto ToProtoBytes = 0x22c7dc0;
		constexpr auto ToProto = 0x22c7dd0;
		constexpr auto SerializeToBytes = 0x22c79d0;
		constexpr auto SerializeLengthDelimited = 0x22c7920;
	};

	namespace ProtoBuf_PlayerProjectileUpdate {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto projectileID = 0x14;
		constexpr auto curPosition = 0x18;
		constexpr auto curVelocity = 0x24;
		constexpr auto travelTime = 0x30;

		constexpr auto ResetToPool = 0x22ec010;
		constexpr auto Dispose = 0x22ebcb0;
		constexpr auto EnterPool = 0x10beca0;
		constexpr auto LeavePool = 0x10becd0;
		constexpr auto CopyTo = 0x22eab40;
		constexpr auto Copy = 0x22eab80;
		constexpr auto Deserialize = 0x22eb2b0;
		constexpr auto DeserializeLengthDelimited = 0x22eac20;
		constexpr auto DeserializeLength = 0x22eb220;
		constexpr auto FromProto = 0x22ebde0;
		constexpr auto WriteToStream = 0x22eca20;
		constexpr auto WriteToStreamDelta = 0x22eca40;
		constexpr auto ReadFromStream = 0x22ebff0;
		constexpr auto SerializeDelta = 0x22ec170;
		constexpr auto Serialize = 0x22ec780;
		constexpr auto ToProtoBytes = 0x22eca10;
		constexpr auto ToProto = 0x22eca20;
		constexpr auto SerializeToBytes = 0x22ec670;
		constexpr auto SerializeLengthDelimited = 0x22ec5c0;
		constexpr auto ctor = 0x10a2bd0;
	};

	namespace Projectile {
		constexpr auto initialVelocity = 0x18;
		constexpr auto drag = 0x24;
		constexpr auto gravityModifier = 0x28;
		constexpr auto thickness = 0x2c;
		constexpr auto initialDistance = 0x30;
		constexpr auto remainInWorld = 0x34;
		constexpr auto stickProbability = 0x38;
		constexpr auto breakProbability = 0x3c;
		constexpr auto conditionLoss = 0x40;
		constexpr auto ricochetChance = 0x44;
		constexpr auto penetrationPower = 0x48;
		constexpr auto damageProperties = 0x50;
		constexpr auto damageDistances = 0x58;
		constexpr auto damageMultipliers = 0x60;
		constexpr auto damageTypes = 0x68;
		constexpr auto rendererToScale = 0x70;
		constexpr auto firstPersonRenderer = 0x78;
		constexpr auto createDecals = 0x80;
		constexpr auto doDefaultHitEffects = 0x81;
		constexpr auto flybySound = 0x88;
		constexpr auto flybySoundDistance = 0x90;
		constexpr auto closeFlybySound = 0x98;
		constexpr auto closeFlybyDistance = 0xa0;
		constexpr auto tumbleSpeed = 0xa4;
		constexpr auto tumbleAxis = 0xa8;
		constexpr auto swimScale = 0xb4;
		constexpr auto swimSpeed = 0xc0;
		constexpr auto owner = 0xd0;
		constexpr auto sourceWeaponPrefab = 0xd8;
		constexpr auto sourceProjectilePrefab = 0xe0;
		constexpr auto mod = 0xe8;
		constexpr auto projectileID = 0xf0;
		constexpr auto seed = 0xf4;
		constexpr auto clientsideEffect = 0xf8;
		constexpr auto clientsideAttack = 0xf9;
		constexpr auto integrity = 0xfc;
		constexpr auto maxDistance = 0x100;
		constexpr auto modifier = 0x104;
		constexpr auto invisible = 0x114;
		constexpr auto currentVelocity = 0x118;
		constexpr auto currentPosition = 0x124;
		constexpr auto traveledDistance = 0x130;
		constexpr auto traveledTime = 0x134;
		constexpr auto launchTime = 0x138;
		constexpr auto sentPosition = 0x13c;
		constexpr auto previousPosition = 0x148;
		constexpr auto previousVelocity = 0x154;
		constexpr auto previousTraveledTime = 0x160;
		constexpr auto isRicochet = 0x164;
		constexpr auto isRetiring = 0x165;
		constexpr auto flybyPlayed = 0x166;
		constexpr auto wasFacingPlayer = 0x167;
		constexpr auto flybyPlane = 0x168;
		constexpr auto flybyRay = 0x178;
		constexpr auto cleanupAction = 0x190;
		constexpr auto hitTest = 0x198;
		constexpr auto swimRandom = 0x1a0;
		constexpr auto _waterMaterialID = 0x4;
		constexpr auto cachedWaterString = 0x8;

		constexpr auto CalculateDamage = 0x872680;
		constexpr auto get_isAuthoritative = 0x8774c0;
		constexpr auto get_isAlive = 0x877480;
		constexpr auto Retire = 0x876270;
		constexpr auto Cleanup = 0x872bd0;
		constexpr auto AdjustVelocity = 0x872410;
		constexpr auto InitializeVelocity = 0x8754b0;
		constexpr auto OnDisable = 0x875720;
		constexpr auto Update = 0x8770e0;
		constexpr auto SetEffectScale = 0x876840;
		constexpr auto DoFlybySound = 0x872dd0;
		constexpr auto CalculateEffectScale = 0x872b30;
		constexpr auto UpdateVelocity = 0x876e00;
		constexpr auto DoVelocityUpdate = 0x874cc0;
		constexpr auto DoMovement = 0x873af0;
		constexpr auto DoWaterHit = 0x8750a0;
		constexpr auto DoRicochet = 0x8748a0;
		constexpr auto DoHit = 0x8733e0;
		constexpr auto AdditiveImpactEffect = 0x45e1d0;
		constexpr auto Reflect = 0x8759f0;
		constexpr auto Refract = 0x875d40;
		constexpr auto RandomRotation = 0x8758f0;
		constexpr auto Launch = 0x875690;
		constexpr auto FleshMaterialID = 0x8753b0;
		constexpr auto WaterMaterialID = 0x8771e0;
		constexpr auto IsWaterMaterial = 0x875560;
		constexpr auto ShouldStopProjectile = 0x876d40;
		constexpr auto ctor = 0x8772e0;
		constexpr auto cctor = 0x45e1d0;
	};

	namespace PlayerEyes {
		constexpr auto DuckOffset = 0xc;
		constexpr auto CrawlOffset = 0x18;
		constexpr auto thirdPersonSleepingOffset = 0x20;
		constexpr auto defaultLazyAim = 0x30;
		constexpr auto viewOffset = 0x38;
		constexpr auto bodyRotationk__BackingField = 0x44;
		constexpr auto headAnglesk__BackingField = 0x54;
		constexpr auto rotationLookk__BackingField = 0x60;
		constexpr auto IsAltLookingLegsThresholdk__BackingField = 0x70;

		constexpr auto get_worldMountedPosition = 0x69cae0;
		constexpr auto get_worldStandingPosition = 0x69ccd0;
		constexpr auto get_worldCrouchedPosition = 0x69c9e0;
		constexpr auto get_worldCrawlingPosition = 0x69c8e0;
		constexpr auto get_position = 0x69c3a0;
		constexpr auto get_BodyLeanOffset = 0x69ba60;
		constexpr auto get_center = 0x69bdc0;
		constexpr auto get_offset = 0x69c0e0;
		constexpr auto get_rotation = 0x69c830;
		constexpr auto set_rotation = 0x69ce30;
		constexpr auto get_bodyRotation = 0x69bce0;
		constexpr auto set_bodyRotation = 0x69ce00;
		constexpr auto get_headAngles = 0x69c0c0;
		constexpr auto set_headAngles = 0x69ce10;
		constexpr auto get_rotationLook = 0x69c820;
		constexpr auto set_rotationLook = 0x69ce20;
		constexpr auto get_parentRotation = 0x69c210;
		constexpr auto get_canUpdateViewAngles = 0x69bcf0;
		constexpr auto get_IsAltLookingLegsThreshold = 0x69bcd0;
		constexpr auto set_IsAltLookingLegsThreshold = 0x69cdf0;
		constexpr auto FrameUpdate = 0x69a5f0;
		constexpr auto UpdateAltLegsThreshold = 0x69b680;
		constexpr auto UpdateCamera = 0x69b6f0;
		constexpr auto DoFirstPersonCamera = 0x698630;
		constexpr auto DoInEyeCamera = 0x698c80;
		constexpr auto DoThirdPersonCamera = 0x698fd0;
		constexpr auto DoDeathCamera = 0x698050;
		constexpr auto ApplyCameraMoves = 0x697a20;
		constexpr auto MovementForward = 0x69b300;
		constexpr auto MovementRight = 0x69b4c0;
		constexpr auto BodyRay = 0x697c00;
		constexpr auto BodyForward = 0x697ab0;
		constexpr auto BodyRight = 0x697db0;
		constexpr auto BodyUp = 0x697f00;
		constexpr auto HeadRay = 0x69af40;
		constexpr auto HeadForward = 0x69ae50;
		constexpr auto HeadRight = 0x69b120;
		constexpr auto HeadUp = 0x69b210;
		constexpr auto GetLookRotation = 0x69acd0;
		constexpr auto GetAimRotation = 0x69ac10;
		constexpr auto ctor = 0x69b9a0;
		constexpr auto cctor = 0x69b8a0;
	};

	namespace ViewModel {
		constexpr auto viewModelPrefab = 0x18;
		constexpr auto targetEntity = 0x20;
		constexpr auto instance = 0x28;

		constexpr auto Deploy = 0x8901b0;
		constexpr auto OnDisable = 0x890520;
		constexpr auto Holster = 0x8904b0;
		constexpr auto Clear = 0x890040;
		constexpr auto OnFrame = 0x890590;
		constexpr auto Play = 0x8906f0;
		constexpr auto ResetTrigger = 0x890820;
		constexpr auto Trigger = 0x890b30;
		constexpr auto CrossFade = 0x890110;
		constexpr auto SetBool = 0x890950;
		constexpr auto SetFloat = 0x890a90;
		constexpr auto set_ironSights = 0x890c50;
		constexpr auto ctor = 0x3ed250;
	};

	namespace BowWeapon {
		constexpr auto attackReady = 0x3a0;
		constexpr auto arrowBack = 0x3a4;
		constexpr auto swapArrows = 0x3a8;
		constexpr auto wasAiming = 0x3b0;

		constexpr auto OnRpcMessage = 0x8b3b90;
		constexpr auto ClientInit = 0x8b32f0;
		constexpr auto OnSignal = 0x8b3c80;
		constexpr auto UpdatePullbackThink = 0x8b40d0;
		constexpr auto CancelPullbackThink = 0x8b3280;
		constexpr auto PullbackThink = 0x8b3f90;
		constexpr auto OnInput = 0x8b3810;
		constexpr auto OnHolstered = 0x8b37d0;
		constexpr auto DoAttack = 0x8b3360;
		constexpr auto IsAiming = 0x8b3600;
		constexpr auto OnViewmodelEvent = 0x8b3df0;
		constexpr auto OnFrame = 0x8b36a0;
		constexpr auto PostNetworkUpdate = 0x8b3e60;
		constexpr auto TryReload = 0x8b4060;
		constexpr auto ProcessSpectatorViewmodel = 0x8b3f00;
		constexpr auto ctor = 0x80e280;
	};

	namespace AttackEntity {
		constexpr auto deployDelay = 0x1f8;
		constexpr auto repeatDelay = 0x1fc;
		constexpr auto animationDelay = 0x200;
		constexpr auto effectiveRange = 0x204;
		constexpr auto npcDamageScale = 0x208;
		constexpr auto attackLengthMin = 0x20c;
		constexpr auto attackLengthMax = 0x210;
		constexpr auto attackSpacing = 0x214;
		constexpr auto aiAimSwayOffset = 0x218;
		constexpr auto aiAimCone = 0x21c;
		constexpr auto aiOnlyInRange = 0x220;
		constexpr auto CloseRangeAddition = 0x224;
		constexpr auto MediumRangeAddition = 0x228;
		constexpr auto LongRangeAddition = 0x22c;
		constexpr auto CanUseAtMediumRange = 0x230;
		constexpr auto CanUseAtLongRange = 0x231;
		constexpr auto reloadSounds = 0x238;
		constexpr auto thirdPersonMeleeSound = 0x240;
		constexpr auto recoilCompDelayOverride = 0x248;
		constexpr auto wantsRecoilComp = 0x24c;
		constexpr auto nextAttackTime = 0x250;
		constexpr auto lastTickTime = 0x254;
		constexpr auto nextTickTime = 0x258;
		constexpr auto timeSinceDeploy = 0x25c;
		constexpr auto lastRecoilCompTime = 0x260;
		constexpr auto startAimingDirection = 0x264;
		constexpr auto wasDoingRecoilComp = 0x270;
		constexpr auto reductionSpeed = 0x274;

		constexpr auto GetInheritedVelocity = 0xa12c50;
		constexpr auto get_NextAttackTime = 0xa13180;
		constexpr auto GetAttackStats = 0x45e1d0;
		constexpr auto StartAttackCooldownRaw = 0xa12ec0;
		constexpr auto StartAttackCooldown = 0xa12ef0;
		constexpr auto ResetAttackCooldown = 0xa12e60;
		constexpr auto HasAttackCooldown = 0xa12cc0;
		constexpr auto GetAttackCooldown = 0xa12b50;
		constexpr auto GetAttackIdle = 0xa12bd0;
		constexpr auto CalculateCooldownTime = 0xa11f80;
		constexpr auto IsFullyDeployed = 0xa12cf0;
		constexpr auto ProcessInputTime = 0xa12d90;
		constexpr auto OnInput = 0xa12d30;
		constexpr auto OnDeploy = 0xa12d10;
		constexpr auto SpectatorNotifyDeploy = 0xa12e70;
		constexpr auto SpectatorNotifyTick = 0xa12e80;
		constexpr auto RecoilCompReady = 0xa12de0;
		constexpr auto AddPunch = 0xa11dd0;
		constexpr auto DoRecoilCompensation = 0xa120c0;
		constexpr auto ctor = 0xa13090;
		constexpr auto cctor = 0xa13020;
	};

	namespace BaseEntity {
		constexpr auto ragdoll = 0x78;
		constexpr auto positionLerp = 0x80;
		constexpr auto menuOptions = 0x88;
		constexpr auto globalBroadcastProtocol = 0x8;
		constexpr auto broadcastProtocol = 0x90;
		constexpr auto links = 0x98;
		constexpr auto linkedToNeighbours = 0xa0;
		constexpr auto QueuedFileRequests = 0x10;
		constexpr auto _fileRequestCounter = 0x18;
		constexpr auto _flushQueuedFileRequests = 0x30;
		constexpr auto _pendingFileRequests = 0xa8;
		constexpr auto updateParentingAction = 0xb0;
		constexpr auto addedToParentEntity = 0xb8;
		constexpr auto itemSkin = 0xc0;
		constexpr auto entitySlots = 0xc8;
		constexpr auto triggers = 0xd0;
		constexpr auto isVisible = 0xd8;
		constexpr auto isAnimatorVisible = 0xd9;
		constexpr auto isShadowVisible = 0xda;
		constexpr auto localOccludee = 0xe0;
		constexpr auto Weightk__BackingField = 0x100;
		constexpr auto bounds = 0x104;
		constexpr auto impactEffect = 0x120;
		constexpr auto enableSaving = 0x128;
		constexpr auto syncPosition = 0x129;
		constexpr auto model = 0x130;
		constexpr auto flags = 0x138;
		constexpr auto parentBone = 0x13c;
		constexpr auto skinID = 0x140;
		constexpr auto _components = 0x148;
		constexpr auto HasBrain = 0x150;
		constexpr auto _name = 0x158;
		constexpr auto OwnerIDk__BackingField = 0x160;

		constexpr auto OnRpcMessage = 0xc9f5e0;
		constexpr auto GetEntityMenu = 0xc9aa20;
		constexpr auto GetMenuOptions = 0x45e1d0;
		constexpr auto get_HasMenuOptions = 0x5d1c50;
		constexpr auto GetItemOptions = 0xc9b1d0;
		constexpr auto GetMovementModify = 0xc9bc20;
		constexpr auto GetExtrapolationTime = 0xc9ab60;
		constexpr auto GetInterpolationDelay = 0xc9b020;
		constexpr auto GetInterpolationInertia = 0xc9b0b0;
		constexpr auto GetInterpolationSmoothing = 0xc9b140;
		constexpr auto GetAngularVelocityClient = 0xc9a4c0;
		constexpr auto GetLocalVelocityClient = 0xc9b420;
		constexpr auto DrawInterpolationState = 0xc98530;
		constexpr auto LerpIdleDisable = 0xc9df50;
		constexpr auto ClientInit = 0xc97780;
		constexpr auto ClientOnEnable = 0xc97830;
		constexpr auto OnPositionalFromNetwork = 0xc9f270;
		constexpr auto StartLerping = 0xca2810;
		constexpr auto StopLerping = 0xca2990;
		constexpr auto ShouldLerp = 0xca2400;
		constexpr auto SetNetworkPosition = 0xca1ef0;
		constexpr auto SetNetworkRotation = 0xca2060;
		constexpr auto DoDestroyEffects = 0xc98510;
		constexpr auto SpawnGibs = 0xca2500;
		constexpr auto DoNetworkDestroy = 0x3ef140;
		constexpr auto PostNetworkUpdate = 0xca09a0;
		constexpr auto OnBecameRagdoll = 0xc9efb0;
		constexpr auto GetMenuInformation = 0xc9b5a0;
		constexpr auto HideMenuItems = 0xc9c970;
		constexpr auto GetMenuItems = 0xc9b890;
		constexpr auto OnUse = 0xca0790;
		constexpr auto OnUseHeld = 0xca0570;
		constexpr auto OnUseStopped = 0x45e1d0;
		constexpr auto OnRendered = 0x45e1d0;
		constexpr auto DoClientDestroy = 0xc98260;
		constexpr auto GetEyeTransform = 0xc9abf0;
		constexpr auto NeedsCrosshair = 0xc9eea0;
		constexpr auto AlwaysShowCrosshair = 0x5d1c50;
		constexpr auto ShouldDestroyWithGroup = 0xca2350;
		constexpr auto DetachEffects = 0xc97e50;
		constexpr auto OnVoiceData = 0x45e1d0;
		constexpr auto LookingAtTick = 0x45e1d0;
		constexpr auto get_RealisticMass = 0x5e67c0;
		constexpr auto OnCollision = 0xc9f060;
		constexpr auto ReceiveCollisionMessages = 0xca0a90;
		constexpr auto DebugClient = 0x45e1d0;
		constexpr auto OnDebugStart = 0xc9f0b0;
		constexpr auto DebugText = 0xc97d90;
		constexpr auto HasFlag = 0xc9c930;
		constexpr auto ParentHasFlag = 0xca0900;
		constexpr auto SetFlag = 0xca1d20;
		constexpr auto IsOn = 0xc9cf80;
		constexpr auto IsOpen = 0xc9cf90;
		constexpr auto IsOnFire = 0xc9cf70;
		constexpr auto IsLocked = 0xc9ccc0;
		constexpr auto IsDebugging = 0xc9cad0;
		constexpr auto IsDisabled = 0xc9cae0;
		constexpr auto IsBroken = 0xc9cac0;
		constexpr auto IsBusy = 0xc9c970;
		constexpr auto GetLogColor = 0xc9b550;
		constexpr auto OnFlagsChanged = 0xc9f170;
		constexpr auto IsOccupied = 0xc9cdc0;
		constexpr auto FindLink = 0xc99490;
		constexpr auto EntityLinkBroadcast = 0xc98f70;
		constexpr auto ReceivedEntityLinkBroadcast = 0xca0b20;
		constexpr auto GetEntityLinks = 0xc9a9e0;
		constexpr auto LinkToEntity = 0xc9df80;
		constexpr auto LinkToNeighbours = 0xc9e1e0;
		constexpr auto InitEntityLinks = 0xc9c980;
		constexpr auto FreeEntityLinks = 0xc9a3e0;
		constexpr auto RefreshEntityLinks = 0xca0b90;
		constexpr auto RequestFileFromServer = 0xca1440;
		constexpr auto EnqueueFileRequest = 0xc98c20;
		constexpr auto RequestFileImpl = 0xca1540;
		constexpr auto FlushQueuedFileRequests = 0xc99770;
		constexpr auto CL_ReceiveFileRequest = 0xc97490;
		constexpr auto CompletePendingFileRequests = 0xc97a30;
		constexpr auto UpdateChildren = 0xca2b50;
		constexpr auto UpdateParenting = 0xca3920;
		constexpr auto SetParentTransform = 0xca2130;
		constexpr auto UpdateDisableState = 0xca2ec0;
		constexpr auto HasClientTransformOffset = 0xc9c790;
		constexpr auto RemoveClientTransformOffset = 0xca0ea0;
		constexpr auto AddClientTransformOffset = 0xc96e50;
		constexpr auto OnParentChangingClient = 0x45e1d0;
		constexpr auto GetBuildingPrivilege = 0xc9a970;
		constexpr auto ServerRPC = 0xca19e0;
		constexpr auto ServerRPCStart = 0xca1830;
		constexpr auto ServerRPCSend = 0xca17c0;
		constexpr auto CL_RPCMessage = 0xc971a0;
		constexpr auto SendSignalBroadcast = 0xca1710;
		constexpr auto SignalFromServerEx = 0xca2420;
		constexpr auto SignalFromServer = 0xca24b0;
		constexpr auto OnSignal = 0x45e1d0;
		constexpr auto OnSkinChanged = 0xca01e0;
		constexpr auto OnSkinRefreshStart = 0xca0550;
		constexpr auto OnSkinRefreshEnd = 0xca0530;
		constexpr auto PreProcess = 0xca09c0;
		constexpr auto HasAnySlot = 0xc9c6b0;
		constexpr auto GetSlot = 0xc9c230;
		constexpr auto GetSlotAnchorName = 0xc9c0f0;
		constexpr auto GetSlotAnchor = 0xc9c180;
		constexpr auto HasSlot = 0x5d1c50;
		constexpr auto get_Traits = 0x52bcf0;
		constexpr auto HasTrait = 0xc9c940;
		constexpr auto HasAnyTrait = 0xc9c760;
		constexpr auto EnterTrigger = 0xc98ec0;
		constexpr auto LeaveTrigger = 0xc9deb0;
		constexpr auto RemoveFromTriggers = 0xca0f00;
		constexpr auto ForceUpdateTriggersAction = 0xc99960;
		constexpr auto ForceUpdateTriggers = 0xc99990;
		constexpr auto MakeVisible = 0xc9ee80;
		constexpr auto UpdateCullingSpheres = 0xca2d40;
		constexpr auto RegisterForCulling = 0xca0c70;
		constexpr auto OnVisibilityChanged = 0x45e1d0;
		constexpr auto UnregisterFromCulling = 0xca2ad0;
		constexpr auto UpdateCullingBounds = 0xca2c70;
		constexpr auto CheckVisibility = 0xc97760;
		constexpr auto CalcEntityVisUpdateRate = 0xc97640;
		constexpr auto DebugDrawCullingBounds = 0xc97cc0;
		constexpr auto get_Weight = 0xca4140;
		constexpr auto set_Weight = 0xca4160;
		constexpr auto get_Components = 0xca40c0;
		constexpr auto ToPlayer = 0x52bcf0;
		constexpr auto get_IsNpc = 0x5d1c50;
		constexpr auto InitShared = 0xc8e380;
		constexpr auto DestroyShared = 0xc93ba0;
		constexpr auto ResetState = 0xca16a0;
		constexpr auto InheritedVelocityScale = 0x652640;
		constexpr auto InheritedVelocityDirection = 0x5294a0;
		constexpr auto GetInheritedProjectileVelocity = 0xc9ad60;
		constexpr auto GetInheritedThrowVelocity = 0xc9aff0;
		constexpr auto GetInheritedDropVelocity = 0xc9ac80;
		constexpr auto GetParentVelocity = 0xc9be30;
		constexpr auto GetWorldVelocity = 0xc9c290;
		constexpr auto GetLocalVelocity = 0xc9b4b0;
		constexpr auto GetAngularVelocity = 0xc9a550;
		constexpr auto WorldSpaceBounds = 0xca3dc0;
		constexpr auto PivotPoint = 0x3eda40;
		constexpr auto CenterPoint = 0xc97720;
		constexpr auto ClosestPoint = 0xc97980;
		constexpr auto TriggerPoint = 0xc97720;
		constexpr auto Distance = 0xc98120;
		constexpr auto SqrDistance = 0xca26d0;
		constexpr auto Distance2D = 0xc97f80;
		constexpr auto SqrDistance2D = 0xca2530;
		constexpr auto IsVisible = 0xc9daf0;
		constexpr auto IsVisibleSpecificLayers = 0xc9d4a0;
		constexpr auto IsVisibleAndCanSee = 0xc9d290;
		constexpr auto IsOlderThan = 0xc9ced0;
		constexpr auto IsOutside = 0xc9cfa0;
		constexpr auto WaterFactor = 0xca3930;
		constexpr auto AirFactor = 0xc96ef0;
		constexpr auto WaterTestFromVolumes = 0xca3b00;
		constexpr auto IsInWaterVolume = 0xc9cb80;
		constexpr auto BlocksWaterFor = 0x5d1c50;
		constexpr auto Health = 0x652640;
		constexpr auto MaxHealth = 0x652640;
		constexpr auto MaxVelocity = 0x652640;
		constexpr auto BoundsPadding = 0xc96f30;
		constexpr auto PenetrationResistance = 0x5e67c0;
		constexpr auto GetImpactEffect = 0xa8d2c0;
		constexpr auto OnAttacked = 0x45e1d0;
		constexpr auto GetItem = 0x52bcf0;
		constexpr auto GiveItem = 0xc9c680;
		constexpr auto CanBeLooted = 0x5294a0;
		constexpr auto GetEntity = 0x5ec320;
		constexpr auto ToString = 0xca29e0;
		constexpr auto Categorize = 0xc976f0;
		constexpr auto Log = 0xc9e9d0;
		constexpr auto SetModel = 0xca1e40;
		constexpr auto GetModel = 0x9ed6c0;
		constexpr auto GetBones = 0xc9a5f0;
		constexpr auto FindBone = 0xc99320;
		constexpr auto FindBoneID = 0xc99240;
		constexpr auto FindClosestBone = 0xc993d0;
		constexpr auto get_OwnerID = 0xca4130;
		constexpr auto set_OwnerID = 0xca4150;
		constexpr auto ShouldBlockProjectiles = 0x5294a0;
		constexpr auto ShouldInheritNetworkGroup = 0x5294a0;
		constexpr auto SupportsChildDeployables = 0x5d1c50;
		constexpr auto BroadcastEntityMessage = 0xc96f40;
		constexpr auto OnEntityMessage = 0x45e1d0;
		constexpr auto Load = 0xc9e4d0;
		constexpr auto ctor = 0xca3fb0;
		constexpr auto cctor = 0xca3f00;
	};

	namespace UnityEngine_Time {

		constexpr auto get_time = 0x2427bc0;
		constexpr auto get_deltaTime = 0x2427a10;
		constexpr auto get_fixedTime = 0x2427a70;
		constexpr auto get_unscaledTime = 0x2427c20;
		constexpr auto get_unscaledDeltaTime = 0x2427bf0;
		constexpr auto get_fixedDeltaTime = 0x2427a40;
		constexpr auto set_fixedDeltaTime = 0x2427c50;
		constexpr auto get_maximumDeltaTime = 0x2427ad0;
		constexpr auto set_maximumDeltaTime = 0x2427c90;
		constexpr auto get_smoothDeltaTime = 0x2427b60;
		constexpr auto get_timeScale = 0x2427b90;
		constexpr auto set_timeScale = 0x2427cd0;
		constexpr auto get_frameCount = 0x2427aa0;
		constexpr auto get_renderedFrameCount = 0x2427b30;
		constexpr auto get_realtimeSinceStartup = 0x2427b00;
	};

	namespace UnityEngine_Physics {

		constexpr auto get_gravity = 0x2536860;
		constexpr auto get_queriesHitBackfaces = 0x25368a0;
		constexpr auto set_queriesHitBackfaces = 0x2536910;
		constexpr auto get_defaultPhysicsScene = 0x25367e0;
		constexpr auto IgnoreCollision = 0x2533090;
		constexpr auto Raycast = 0x2535000;
		constexpr auto Linecast = 0x25331d0;
		constexpr auto CapsuleCast = 0x25328d0;
		constexpr auto SphereCast = 0x2536270;
		constexpr auto BoxCast = 0x2532310;
		constexpr auto Internal_RaycastAll = 0x2533160;
		constexpr auto RaycastAll = 0x2533d40;
		constexpr auto RaycastNonAlloc = 0x2534460;
		constexpr auto Query_SphereCastAll = 0x2533be0;
		constexpr auto SphereCastAll = 0x2535ce0;
		constexpr auto SyncTransforms = 0x2536740;
		constexpr auto get_autoSyncTransforms = 0x2536770;
		constexpr auto set_autoSyncTransforms = 0x25368d0;
		constexpr auto OverlapSphereNonAlloc = 0x2533ab0;
		constexpr auto CheckSphere_Internal = 0x2532eb0;
		constexpr auto CheckSphere = 0x2532f20;
		constexpr auto CapsuleCastNonAlloc = 0x2532670;
		constexpr auto SphereCastNonAlloc = 0x2535e70;
		constexpr auto CheckCapsule_Internal = 0x2532c10;
		constexpr auto CheckCapsule = 0x2532c80;
		constexpr auto CheckBox_Internal = 0x2532a50;
		constexpr auto CheckBox = 0x2532ac0;
		constexpr auto OverlapBox_Internal = 0x2533790;
		constexpr auto OverlapBox = 0x2533800;
		constexpr auto OverlapBoxNonAlloc = 0x2533630;
		constexpr auto OverlapCapsuleNonAlloc = 0x25339c0;
		constexpr auto get_gravity_Injected = 0x2536820;
		constexpr auto get_defaultPhysicsScene_Injected = 0x25367a0;
		constexpr auto Internal_RaycastAll_Injected = 0x25330f0;
		constexpr auto Query_SphereCastAll_Injected = 0x2533b70;
		constexpr auto CheckSphere_Internal_Injected = 0x2532e40;
		constexpr auto CheckCapsule_Internal_Injected = 0x2532ba0;
		constexpr auto CheckBox_Internal_Injected = 0x25329e0;
		constexpr auto OverlapBox_Internal_Injected = 0x2533720;
	};

	namespace AssetNameCache {
		constexpr auto lower = 0x8;
		constexpr auto upper = 0x10;

		constexpr auto LookupName = 0xa0e560;
		constexpr auto LookupNameLower = 0xa0e2a0;
		constexpr auto LookupNameUpper = 0xa0e400;
		constexpr auto GetName = 0xa0e1e0;
		constexpr auto GetNameLower = 0xa0e060;
		constexpr auto GetNameUpper = 0xa0e120;
		constexpr auto cctor = 0xa0e6a0;
	};

	namespace UnityEngine_Component {

		constexpr auto get_transform = 0x1a67c60;
		constexpr auto get_gameObject = 0x1a67c20;
		constexpr auto GetComponent = 0x1a67800;
		constexpr auto GetComponentFastPath = 0x1a67690;
		constexpr auto GetComponentInChildren = 0x1a676f0;
		constexpr auto GetComponentsInChildren = 0x1a678e0;
		constexpr auto GetComponentInParent = 0x1a67780;
		constexpr auto GetComponents = 0x1a67940;
		constexpr auto GetComponentsForListInternal = 0x1a67880;
		constexpr auto CompareTag = 0x1a67610;
		constexpr auto SendMessageUpwards = 0x1a67a30;
		constexpr auto SendMessage = 0x1a67b70;
		constexpr auto BroadcastMessage = 0x1a675a0;
		constexpr auto ctor = 0x1a61ff0;
	};

	namespace UnityEngine_Transform {

		constexpr auto ctor = 0x1b6ec90;
		constexpr auto get_position = 0x242aa60;
		constexpr auto set_position = 0x242b3e0;
		constexpr auto get_localPosition = 0x242a730;
		constexpr auto set_localPosition = 0x242b150;
		constexpr auto get_eulerAngles = 0x242a430;
		constexpr auto set_eulerAngles = 0x242aea0;
		constexpr auto get_localEulerAngles = 0x242a650;
		constexpr auto set_localEulerAngles = 0x242b050;
		constexpr auto get_right = 0x242aab0;
		constexpr auto set_right = 0x242b430;
		constexpr auto get_up = 0x242aca0;
		constexpr auto set_up = 0x242b620;
		constexpr auto get_forward = 0x242a4c0;
		constexpr auto set_forward = 0x242af50;
		constexpr auto get_rotation = 0x242ac50;
		constexpr auto set_rotation = 0x242b5d0;
		constexpr auto get_localRotation = 0x242a7d0;
		constexpr auto set_localRotation = 0x242b1f0;
		constexpr auto get_localScale = 0x242a870;
		constexpr auto set_localScale = 0x242b290;
		constexpr auto get_parent = 0x2428e50;
		constexpr auto set_parent = 0x242b2e0;
		constexpr auto get_parentInternal = 0x2428e50;
		constexpr auto set_parentInternal = 0x2429e30;
		constexpr auto GetParent = 0x2428e50;
		constexpr auto SetParent = 0x2429e30;
		constexpr auto get_worldToLocalMatrix = 0x242ae40;
		constexpr auto get_localToWorldMatrix = 0x242a910;
		constexpr auto SetPositionAndRotation = 0x2429ee0;
		constexpr auto Translate = 0x242a220;
		constexpr auto Rotate = 0x2429840;
		constexpr auto RotateAroundInternal = 0x24295a0;
		constexpr auto RotateAround = 0x2429600;
		constexpr auto LookAt = 0x24293d0;
		constexpr auto Internal_LookAt = 0x2428f70;
		constexpr auto TransformDirection = 0x2429fe0;
		constexpr auto InverseTransformDirection = 0x2429030;
		constexpr auto TransformVector = 0x242a160;
		constexpr auto InverseTransformVector = 0x24291b0;
		constexpr auto TransformPoint = 0x242a0a0;
		constexpr auto InverseTransformPoint = 0x24290f0;
		constexpr auto get_root = 0x2428e90;
		constexpr auto GetRoot = 0x2428e90;
		constexpr auto get_childCount = 0x242a3f0;
		constexpr auto DetachChildren = 0x2428c60;
		constexpr auto SetAsFirstSibling = 0x2429d50;
		constexpr auto SetAsLastSibling = 0x2429d90;
		constexpr auto SetSiblingIndex = 0x2429f40;
		constexpr auto GetSiblingIndex = 0x2428ed0;
		constexpr auto FindRelativeTransformWithPath = 0x2428ca0;
		constexpr auto Find = 0x2428d00;
		constexpr auto get_lossyScale = 0x242a9c0;
		constexpr auto IsChildOf = 0x2429210;
		constexpr auto get_hasChanged = 0x242a610;
		constexpr auto set_hasChanged = 0x242b000;
		constexpr auto GetEnumerator = 0x2428de0;
		constexpr auto GetChild = 0x2428da0;
		constexpr auto get_position_Injected = 0x242aa10;
		constexpr auto set_position_Injected = 0x242b390;
		constexpr auto get_localPosition_Injected = 0x242a6e0;
		constexpr auto set_localPosition_Injected = 0x242b100;
		constexpr auto get_rotation_Injected = 0x242ac00;
		constexpr auto set_rotation_Injected = 0x242b580;
		constexpr auto get_localRotation_Injected = 0x242a780;
		constexpr auto set_localRotation_Injected = 0x242b1a0;
		constexpr auto get_localScale_Injected = 0x242a820;
		constexpr auto set_localScale_Injected = 0x242b240;
		constexpr auto get_worldToLocalMatrix_Injected = 0x242adf0;
		constexpr auto get_localToWorldMatrix_Injected = 0x242a8c0;
		constexpr auto SetPositionAndRotation_Injected = 0x2429e80;
		constexpr auto RotateAroundInternal_Injected = 0x2429540;
		constexpr auto Internal_LookAt_Injected = 0x2428f10;
		constexpr auto TransformDirection_Injected = 0x2429f80;
		constexpr auto InverseTransformDirection_Injected = 0x2428fd0;
		constexpr auto TransformVector_Injected = 0x242a100;
		constexpr auto InverseTransformVector_Injected = 0x2429150;
		constexpr auto TransformPoint_Injected = 0x242a040;
		constexpr auto InverseTransformPoint_Injected = 0x2429090;
		constexpr auto get_lossyScale_Injected = 0x242a970;
	};

	namespace GameTrace {

		constexpr auto TraceAll = 0xaeb0e0;
		constexpr auto Trace = 0xaeb9e0;
	};

	namespace HitTest {
		constexpr auto type = 0x10;
		constexpr auto AttackRay = 0x14;
		constexpr auto Radius = 0x2c;
		constexpr auto Forgiveness = 0x30;
		constexpr auto MaxDistance = 0x34;
		constexpr auto RayHit = 0x38;
		constexpr auto MultiHit = 0x64;
		constexpr auto BestHit = 0x65;
		constexpr auto DidHit = 0x66;
		constexpr auto damageProperties = 0x68;
		constexpr auto gameObject = 0x70;
		constexpr auto collider = 0x78;
		constexpr auto ignoreEntity = 0x80;
		constexpr auto HitEntity = 0x88;
		constexpr auto HitPoint = 0x90;
		constexpr auto HitNormal = 0x9c;
		constexpr auto HitDistance = 0xa8;
		constexpr auto HitTransform = 0xb0;
		constexpr auto HitPart = 0xb8;
		constexpr auto HitMaterial = 0xc0;

		constexpr auto HitPointWorld = 0x8f8a40;
		constexpr auto HitNormalWorld = 0x8f8920;
		constexpr auto BuildAttackMessage = 0x8f8090;
		constexpr auto Clear = 0x8f8840;
		constexpr auto ctor = 0x3ef140;
	};

	namespace UnityEngine_Quaternion {
		constexpr auto x = 0x10;
		constexpr auto y = 0x14;
		constexpr auto z = 0x18;
		constexpr auto w = 0x1c;

		constexpr auto FromToRotation = 0x1b757a0;
		constexpr auto Inverse = 0x1b75b90;
		constexpr auto Slerp = 0x1b76610;
		constexpr auto SlerpUnclamped = 0x1b764f0;
		constexpr auto Lerp = 0x1b75dc0;
		constexpr auto LerpUnclamped = 0x1b75ca0;
		constexpr auto Internal_FromEulerRad = 0x1b75900;
		constexpr auto Internal_ToEulerRad = 0x1b75ab0;
		constexpr auto AngleAxis = 0x1b75180;
		constexpr auto LookRotation = 0x1b76020;
		constexpr auto ctor = 0xfc380;
		constexpr auto get_identity = 0x1b76b10;
		constexpr auto op_Multiply = 0x1b76f30;
		constexpr auto IsEqualUsingDot = 0x1b75c20;
		constexpr auto op_Equality = 0x1b76b80;
		constexpr auto op_Inequality = 0x1b76c40;
		constexpr auto Dot = 0x1b75340;
		constexpr auto SetLookRotation = 0x30ed30;
		constexpr auto Angle = 0x1b75220;
		constexpr auto Internal_MakePositive = 0x1b75990;
		constexpr auto get_eulerAngles = 0x30ee50;
		constexpr auto Euler = 0x1b75470;
		constexpr auto RotateTowards = 0x1b760c0;
		constexpr auto GetHashCode = 0x30ecc0;
		constexpr auto Equals = 0x30ebe0;
		constexpr auto ToString = 0x30ee40;
		constexpr auto cctor = 0x1b76900;
		constexpr auto FromToRotation_Injected = 0x1b75740;
		constexpr auto Inverse_Injected = 0x1b75b40;
		constexpr auto Slerp_Injected = 0x1b765a0;
		constexpr auto SlerpUnclamped_Injected = 0x1b76480;
		constexpr auto Lerp_Injected = 0x1b75d50;
		constexpr auto LerpUnclamped_Injected = 0x1b75c30;
		constexpr auto Internal_FromEulerRad_Injected = 0x1b758b0;
		constexpr auto Internal_ToEulerRad_Injected = 0x1b75a60;
		constexpr auto AngleAxis_Injected = 0x1b75120;
		constexpr auto LookRotation_Injected = 0x1b75e70;
	};

	namespace GamePhysics {
		constexpr auto hitBufferB = 0x8;
		constexpr auto colBuffer = 0x10;

		constexpr auto CheckSphere = 0x913f80;
		constexpr auto CheckCapsule = 0x913510;
		constexpr auto CheckOBB = 0x913e50;
		constexpr auto CheckOBBAndEntity = 0x913bd0;
		constexpr auto CheckBounds = 0x9133b0;
		constexpr auto CheckInsideNonConvexMesh = 0x913820;
		constexpr auto CheckInsideAnyCollider = 0x913690;
		constexpr auto OverlapSphere = 0x915390;
		constexpr auto CapsuleSweep = 0x913110;
		constexpr auto OverlapCapsule = 0x915110;
		constexpr auto OverlapOBB = 0x915240;
		constexpr auto OverlapBounds = 0x914f70;
		constexpr auto BufferToList = 0x912f70;
		constexpr auto HitBufferToList = 0x9141c0;
		constexpr auto Trace = 0x915a40;
		constexpr auto TraceAll = 0x915960;
		constexpr auto TraceAllUnordered = 0x915670;
		constexpr auto LineOfSightRadius = 0x914b50;
		constexpr auto LineOfSight = 0x914d40;
		constexpr auto LineOfSightInternal = 0x914330;
		constexpr auto Verify = 0x915c50;
		constexpr auto CompareEntity = 0x914040;
		constexpr auto HandleTerrainCollision = 0x9140b0;
		constexpr auto Sort = 0x915570;
		constexpr auto cctor = 0x915f00;
	};

	namespace WaterLevel {

		constexpr auto Factor = 0xcac5c0;
		constexpr auto Test = 0xcae770;
		constexpr auto GetWaterDepth = 0xcace90;
		constexpr auto GetOverallWaterDepth = 0xcacd40;
		constexpr auto GetBuoyancyWaterInfo = 0xcac7a0;
		constexpr auto GetWaterInfo = 0xcad220;
		constexpr auto GetWaterInfoFromVolumes = 0xcacfd0;
	};

	namespace System_Math {
		constexpr auto roundPower10Double = 0x8;

		constexpr auto Acos = 0x1876160;
		constexpr auto Asin = 0x1876170;
		constexpr auto Atan = 0x1876190;
		constexpr auto Atan2 = 0x1876180;
		constexpr auto Ceiling = 0x18761a0;
		constexpr auto Cos = 0x18761b0;
		constexpr auto Cosh = 0x18761c0;
		constexpr auto Floor = 0x18761f0;
		constexpr auto InternalRound = 0x1876200;
		constexpr auto InternalTruncate = 0x1876460;
		constexpr auto Sin = 0x1876fb0;
		constexpr auto Tan = 0x1876ff0;
		constexpr auto Sinh = 0x1876fc0;
		constexpr auto Round = 0x1876c90;
		constexpr auto SplitFractionDouble = 0x1876fd0;
		constexpr auto Truncate = 0x1877000;
		constexpr auto Sqrt = 0x1876fe0;
		constexpr auto Log = 0x1876630;
		constexpr auto Log10 = 0x18764c0;
		constexpr auto Exp = 0x18761e0;
		constexpr auto Pow = 0x1876a40;
		constexpr auto Abs = 0x1876090;
		constexpr auto AbsHelper = 0x1875f30;
		constexpr auto Max = 0x18766e0;
		constexpr auto Min = 0x1876a30;
		constexpr auto Sign = 0x1876f70;
		constexpr auto DivRem = 0x18761d0;
		constexpr auto cctor = 0x18770b0;
	};

	namespace UnityEngine_Mathf {

		constexpr auto ClosestPowerOfTwo = 0x1b65440;
		constexpr auto IsPowerOfTwo = 0x1b65860;
		constexpr auto NextPowerOfTwo = 0x1b66030;
		constexpr auto GammaToLinearSpace = 0x1b65730;
		constexpr auto LinearToGammaSpace = 0x1b65ac0;
		constexpr auto FloatToHalf = 0x1b65630;
		constexpr auto HalfToFloat = 0x1b65770;
		constexpr auto PerlinNoise = 0x1b66070;
		constexpr auto Sin = 0x1b662c0;
		constexpr auto Cos = 0x1b65480;
		constexpr auto Tan = 0x1b667a0;
		constexpr auto Asin = 0x1b651e0;
		constexpr auto Acos = 0x1b650d0;
		constexpr auto Atan = 0x1b652c0;
		constexpr auto Atan2 = 0x1b65240;
		constexpr auto Sqrt = 0x1b66740;
		constexpr auto Abs = 0x1b65070;
		constexpr auto Min = 0x1b65cd0;
		constexpr auto Max = 0x1b65c40;
		constexpr auto Pow = 0x1b660c0;
		constexpr auto Exp = 0x1b655d0;
		constexpr auto Log = 0x1b65bc0;
		constexpr auto Log10 = 0x1b65b00;
		constexpr auto Ceil = 0x1b65380;
		constexpr auto Floor = 0x1b656d0;
		constexpr auto Round = 0x1b66240;
		constexpr auto CeilToInt = 0x1b65320;
		constexpr auto FloorToInt = 0x1b65670;
		constexpr auto RoundToInt = 0x1b661e0;
		constexpr auto Sign = 0x1b662a0;
		constexpr auto Clamp = 0x1b65400;
		constexpr auto Clamp01 = 0x1b653e0;
		constexpr auto Lerp = 0x1b65a20;
		constexpr auto LerpUnclamped = 0x1b65a00;
		constexpr auto LerpAngle = 0x1b658a0;
		constexpr auto MoveTowards = 0x1b65f40;
		constexpr auto MoveTowardsAngle = 0x1b65ce0;
		constexpr auto SmoothStep = 0x1b66680;
		constexpr auto Approximately = 0x1b65130;
		constexpr auto SmoothDamp = 0x1b664b0;
		constexpr auto Repeat = 0x1b66140;
		constexpr auto InverseLerp = 0x1b657b0;
		constexpr auto DeltaAngle = 0x1b654e0;
		constexpr auto cctor = 0x1b66800;
	};

	namespace Door {
		constexpr auto __menuOption_Menu_CloseDoor = 0x270;
		constexpr auto __menuOption_Menu_KnockDoor = 0x2c8;
		constexpr auto __menuOption_Menu_OpenDoor = 0x320;
		constexpr auto __menuOption_Menu_ToggleHatch = 0x378;
		constexpr auto knockEffect = 0x3d0;
		constexpr auto canTakeLock = 0x3d8;
		constexpr auto hasHatch = 0x3d9;
		constexpr auto canTakeCloser = 0x3da;
		constexpr auto canTakeKnocker = 0x3db;
		constexpr auto canNpcOpen = 0x3dc;
		constexpr auto canHandOpen = 0x3dd;
		constexpr auto isSecurityDoor = 0x3de;
		constexpr auto vehiclePhysBoxes = 0x3e0;
		constexpr auto checkPhysBoxesOnOpen = 0x3e8;
		constexpr auto vehicleCollisionSfx = 0x3f0;
		constexpr auto ClosedColliderRoots = 0x3f8;
		constexpr auto closeHash = 0x4;

		constexpr auto GetMenuOptions = 0xb813e0;
		constexpr auto get_HasMenuOptions = 0xb82ec0;
		constexpr auto OnRpcMessage = 0xb82810;
		constexpr auto ResetState = 0xb82c60;
		constexpr auto HasSlot = 0xb81fd0;
		constexpr auto CanPickup = 0xb81270;
		constexpr auto Menu_OpenDoor = 0xb823c0;
		constexpr auto Menu_OpenDoor_Proxy = 0xb822a0;
		constexpr auto Menu_OpenDoorStart = 0xb82260;
		constexpr auto Menu_OpenDoor_ShowIf = 0xb82380;
		constexpr auto Menu_CloseDoor = 0xb82170;
		constexpr auto Menu_CloseDoor_Proxy = 0xb82050;
		constexpr auto Menu_CloseDoorStart = 0xb82010;
		constexpr auto Menu_CloseDoor_ShowIf = 0xb82130;
		constexpr auto Menu_KnockDoor = 0xb82220;
		constexpr auto Menu_KnockDoor_ShowIf = 0xb821b0;
		constexpr auto Menu_ToggleHatch = 0xb82410;
		constexpr auto Menu_ToggleHatch_ShowIf = 0xb82400;
		constexpr auto NeedsCrosshair = 0x5294a0;
		constexpr auto OnDoorInterrupted = 0xb82450;
		constexpr auto ReverseDoorAnimation = 0xb82c70;
		constexpr auto BoundsPadding = 0x65fee0;
		constexpr auto OnObjects = 0x45e1d0;
		constexpr auto OnEmpty = 0x45e1d0;
		constexpr auto OnFlagsChanged = 0xb826e0;
		constexpr auto ctor = 0xb82ea0;
		constexpr auto cctor = 0xb82e30;
	};

	namespace UnityEngine_Object {
		constexpr auto m_CachedPtr = 0x10;

		constexpr auto GetInstanceID = 0x1b6f580;
		constexpr auto GetHashCode = 0x1b6f570;
		constexpr auto Equals = 0x1b6f190;
		constexpr auto op_Implicit = 0x1b70a10;
		constexpr auto CompareBaseObjects = 0x1b6eea0;
		constexpr auto IsNativeObjectAlive = 0x1b70660;
		constexpr auto GetCachedPtr = 0x1a5f750;
		constexpr auto get_name = 0x1b70830;
		constexpr auto set_name = 0x1b70c90;
		constexpr auto Instantiate = 0x1b700e0;
		constexpr auto Destroy = 0x1b6f090;
		constexpr auto DestroyImmediate = 0x1b6f040;
		constexpr auto FindObjectsOfType = 0x1b6f530;
		constexpr auto DontDestroyOnLoad = 0x1b6f150;
		constexpr auto get_hideFlags = 0x1b707f0;
		constexpr auto set_hideFlags = 0x1b70c50;
		constexpr auto CheckNullArgument = 0x1b6ee30;
		constexpr auto FindObjectOfType = 0x1b6f4a0;
		constexpr auto ToString = 0x1b70700;
		constexpr auto op_Equality = 0x1b708a0;
		constexpr auto op_Inequality = 0x1b70ae0;
		constexpr auto GetOffsetOfInstanceIDInCPlusPlusObject = 0x1b6f6f0;
		constexpr auto Internal_CloneSingle = 0x1b70420;
		constexpr auto Internal_CloneSingleWithParent = 0x1b703c0;
		constexpr auto Internal_InstantiateSingle = 0x1b705d0;
		constexpr auto Internal_InstantiateSingleWithParent = 0x1b704d0;
		constexpr auto GetName = 0x1b6f6b0;
		constexpr auto SetName = 0x1b706b0;
		constexpr auto FindObjectFromInstanceID = 0x1b6f460;
		constexpr auto ctor = 0x3ef140;
		constexpr auto cctor = 0x1b707b0;
		constexpr auto Internal_InstantiateSingle_Injected = 0x1b70570;
		constexpr auto Internal_InstantiateSingleWithParent_Injected = 0x1b70460;
	};

	namespace BaseMelee {
		constexpr auto canThrowAsProjectile = 0x280;
		constexpr auto canAiHearIt = 0x281;
		constexpr auto onlyThrowAsProjectile = 0x282;
		constexpr auto damageProperties = 0x288;
		constexpr auto damageTypes = 0x290;
		constexpr auto maxDistance = 0x298;
		constexpr auto attackRadius = 0x29c;
		constexpr auto isAutomatic = 0x2a0;
		constexpr auto blockSprintOnAttack = 0x2a1;
		constexpr auto strikeFX = 0x2a8;
		constexpr auto useStandardHitEffects = 0x2b0;
		constexpr auto aiStrikeDelay = 0x2b4;
		constexpr auto swingEffect = 0x2b8;
		constexpr auto materialStrikeFX = 0x2c0;
		constexpr auto heartStress = 0x2c8;
		constexpr auto gathering = 0x2d0;
		constexpr auto throwReady = 0x2d8;

		constexpr auto OnRpcMessage = 0x945260;
		constexpr auto GetInheritedVelocity = 0x944ca0;
		constexpr auto DoThrow = 0x9444f0;
		constexpr auto CreateProjectile = 0x943eb0;
		constexpr auto GetAttackStats = 0x944c10;
		constexpr auto DoAttackShared = 0x944060;
		constexpr auto OnInput = 0x944e80;
		constexpr auto get_CanAttack = 0x5294a0;
		constexpr auto get_CanThrow = 0x5294a0;
		constexpr auto ClientAttack = 0x45e1d0;
		constexpr auto OnHolstered = 0x944e60;
		constexpr auto ProcessAttack = 0x945410;
		constexpr auto DoAttack = 0x9442b0;
		constexpr auto DoViewmodelImpact = 0x944b80;
		constexpr auto OnViewmodelEvent = 0x945350;
		constexpr auto ProcessSpectatorViewmodel = 0x945750;
		constexpr auto ProcessSpectatorViewmodelEvent = 0x9456a0;
		constexpr auto GetGatherInfoFromIndex = 0x944c70;
		constexpr auto CanHit = 0x5294a0;
		constexpr auto TotalDamage = 0x945800;
		constexpr auto CanBeUsedInWater = 0x5294a0;
		constexpr auto GetStrikeEffectPath = 0x944d00;
		constexpr auto ctor = 0x945960;
	};

	namespace ItemModProjectile {
		constexpr auto projectileObject = 0x18;
		constexpr auto mods = 0x20;
		constexpr auto ammoType = 0x28;
		constexpr auto numProjectiles = 0x2c;
		constexpr auto projectileSpread = 0x30;
		constexpr auto projectileVelocity = 0x34;
		constexpr auto projectileVelocitySpread = 0x38;
		constexpr auto useCurve = 0x3c;
		constexpr auto spreadScalar = 0x40;
		constexpr auto attackEffectOverride = 0x48;
		constexpr auto barrelConditionLoss = 0x50;
		constexpr auto category = 0x58;

		constexpr auto GetRandomVelocity = 0xa75ec0;
		constexpr auto GetSpreadScalar = 0xa75f00;
		constexpr auto GetIndexedSpreadScalar = 0xa75e30;
		constexpr auto GetAverageVelocity = 0xa75e20;
		constexpr auto GetMinVelocity = 0xa75eb0;
		constexpr auto GetMaxVelocity = 0xa75ea0;
		constexpr auto IsAmmo = 0xa75f60;
		constexpr auto ServerProjectileHit = 0xa75f70;
		constexpr auto ctor = 0xa76040;
	};

	namespace RecoilProperties {
		constexpr auto recoilYawMin = 0x18;
		constexpr auto recoilYawMax = 0x1c;
		constexpr auto recoilPitchMin = 0x20;
		constexpr auto recoilPitchMax = 0x24;
		constexpr auto timeToTakeMin = 0x28;
		constexpr auto timeToTakeMax = 0x2c;
		constexpr auto ADSScale = 0x30;
		constexpr auto movementPenalty = 0x34;
		constexpr auto clampPitch = 0x38;
		constexpr auto pitchCurve = 0x40;
		constexpr auto yawCurve = 0x48;
		constexpr auto useCurves = 0x50;
		constexpr auto curvesAsScalar = 0x51;
		constexpr auto shotsUntilMax = 0x54;
		constexpr auto maxRecoilRadius = 0x58;
		constexpr auto overrideAimconeWithCurve = 0x5c;
		constexpr auto aimconeCurveScale = 0x60;
		constexpr auto aimconeCurve = 0x68;
		constexpr auto aimconeProbabilityCurve = 0x70;
		constexpr auto newRecoilOverride = 0x78;

		constexpr auto GetRecoil = 0xa7f440;
		constexpr auto ctor = 0xa7f4c0;
	};

	namespace ItemDefinition {
		constexpr auto itemid = 0x18;
		constexpr auto shortname = 0x20;
		constexpr auto displayName = 0x28;
		constexpr auto displayDescription = 0x30;
		constexpr auto iconSprite = 0x38;
		constexpr auto category = 0x40;
		constexpr auto selectionPanel = 0x44;
		constexpr auto maxDraggable = 0x48;
		constexpr auto itemType = 0x4c;
		constexpr auto amountType = 0x50;
		constexpr auto occupySlots = 0x54;
		constexpr auto stackable = 0x58;
		constexpr auto quickDespawn = 0x5c;
		constexpr auto rarity = 0x60;
		constexpr auto despawnRarity = 0x64;
		constexpr auto spawnAsBlueprint = 0x68;
		constexpr auto inventoryGrabSound = 0x70;
		constexpr auto inventoryDropSound = 0x78;
		constexpr auto physImpactSoundDef = 0x80;
		constexpr auto condition = 0x88;
		constexpr auto hidden = 0xa0;
		constexpr auto flags = 0xa4;
		constexpr auto steamItem = 0xa8;
		constexpr auto steamDlc = 0xb0;
		constexpr auto Parent = 0xb8;
		constexpr auto worldModelPrefab = 0xc0;
		constexpr auto isRedirectOf = 0xc8;
		constexpr auto redirectVendingBehaviour = 0xd0;
		constexpr auto itemMods = 0xd8;
		constexpr auto Traits = 0xe0;
		constexpr auto skins = 0xe8;
		constexpr auto _skins2 = 0xf0;
		constexpr auto panel = 0xf8;
		constexpr auto ItemModWearablek__BackingField = 0x100;
		constexpr auto isHoldablek__BackingField = 0x108;
		constexpr auto isUsablek__BackingField = 0x109;
		constexpr auto CraftableWithSkink__BackingField = 0x10a;
		constexpr auto Children = 0x110;

		constexpr auto get_skins2 = 0xa6c560;
		constexpr auto InvalidateWorkshopSkinCache = 0xa6c2b0;
		constexpr auto get_Blueprint = 0xa6c3c0;
		constexpr auto get_craftingStackable = 0xa6c480;
		constexpr auto HasFlag = 0xa6c030;
		constexpr auto Initialize = 0xa6c040;
		constexpr auto GetDisplayName = 0xa6bf30;
		constexpr auto GetDescriptionText = 0xa6be60;
		constexpr auto FindIconSprite = 0xa6bb00;
		constexpr auto get_isWearable = 0xa6c500;
		constexpr auto get_ItemModWearable = 0xa6c470;
		constexpr auto set_ItemModWearable = 0xa6c770;
		constexpr auto get_isHoldable = 0xa6c4e0;
		constexpr auto set_isHoldable = 0xa6c780;
		constexpr auto get_isUsable = 0xa6c4f0;
		constexpr auto set_isUsable = 0xa6c790;
		constexpr auto get_HasSkins = 0xa6c410;
		constexpr auto get_CraftableWithSkin = 0xa6c400;
		constexpr auto set_CraftableWithSkin = 0xa6c760;
		constexpr auto ctor = 0xa6c350;
		constexpr auto Initializeb__45_0 = 0xa6c2d0;
	};

	namespace PlayerInput {
		constexpr auto state = 0x20;
		constexpr auto hadInputBuffer = 0x28;
		constexpr auto bodyRotation = 0x2c;
		constexpr auto bodyAngles = 0x3c;
		constexpr auto headRotation = 0x48;
		constexpr auto headAngles = 0x58;
		constexpr auto recoilAngles = 0x64;
		constexpr auto viewDelta = 0x70;
		constexpr auto headLerp = 0x78;
		constexpr auto mouseWheelUp = 0x7c;
		constexpr auto mouseWheelDn = 0x80;
		constexpr auto autorun = 0x84;
		constexpr auto toggleDuck = 0x85;
		constexpr auto toggleAds = 0x86;
		constexpr auto lastAdsEntity = 0x88;
		constexpr auto pendingMouseDelta = 0x8c;
		constexpr auto offsetAngles = 0x98;
		constexpr auto ignoredButtons = 0xa4;
		constexpr auto hasKeyFocus = 0xa8;

		constexpr auto OnDisable = 0x69fd10;
		constexpr auto FrameUpdate = 0x69eeb0;
		constexpr auto CanToggleAds = 0x69e8d0;
		constexpr auto Flip = 0x69ed40;
		constexpr auto ResetMouseDelta = 0x69fd90;
		constexpr auto AddMouseDelta = 0x69d130;
		constexpr auto AdjustMouseMovement = 0x69d400;
		constexpr auto UpdateViewAngles = 0x69ff90;
		constexpr auto ApplyViewAngles = 0x69d640;
		constexpr auto SetViewVars = 0x69fe70;
		constexpr auto FinalizeRecoil = 0x69eb60;
		constexpr auto ResetOffsetAngles = 0x69fe00;
		constexpr auto ClientAngles = 0x69eb30;
		constexpr auto ClientLookVars = 0x69eb40;
		constexpr auto HeadAngles = 0x69f300;
		constexpr auto HeadLookVars = 0x69f310;
		constexpr auto ModifyInputState = 0x69fc80;
		constexpr auto IsButtonDownNative = 0x69f780;
		constexpr auto BuildInputState = 0x69e1e0;
		constexpr auto IsAiming = 0x69f630;
		constexpr auto UpdateButton = 0x69ff00;
		constexpr auto IgnoreCurrentButtons = 0x69f330;
		constexpr auto get_hasOnlyPartialKeyInput = 0x6a02a0;
		constexpr auto get_hasNoKeyInput = 0x6a0110;
		constexpr auto UpdateKeyFocus = 0x69ff70;
		constexpr auto IgnoreCurrentKeys = 0x69f440;
		constexpr auto ctor = 0x6a00a0;
	};

	namespace PlayerModel {
		constexpr auto pm_downlimit = 0x4;
		constexpr auto pm_upspine = 0x8;
		constexpr auto pm_downspine = 0xc;
		constexpr auto pm_lookoffset = 0x10;
		constexpr auto pm_anglesmoothspeed = 0x1c;
		constexpr auto pm_nohold = 0x20;
		constexpr auto pm_ladder = 0x24;
		constexpr auto pm_minweight = 0x28;
		constexpr auto _smoothAimWeight = 0x18;
		constexpr auto _smoothVelocity = 0x1c;
		constexpr auto _smoothlookAngle = 0x20;
		constexpr auto allowMountedHeadLook = 0x2c;
		constexpr auto smoothLookDir = 0x30;
		constexpr auto lastSafeLookDir = 0x3c;
		constexpr auto Shoulders = 0x48;
		constexpr auto AdditionalSpineBones = 0x50;
		constexpr auto FinishedLegWearables = 0x30;
		constexpr auto LegParts = 0x58;
		constexpr auto fakeSpineBones = 0x60;
		constexpr auto extraLeanBack = 0x68;
		constexpr auto drawState = 0x6c;
		constexpr auto timeInArmsMode = 0x70;
		constexpr auto speed = 0x38;
		constexpr auto acceleration = 0x3c;
		constexpr auto rotationYaw = 0x40;
		constexpr auto forward = 0x44;
		constexpr auto right = 0x48;
		constexpr auto up = 0x4c;
		constexpr auto ducked = 0x50;
		constexpr auto grounded = 0x54;
		constexpr auto crawling = 0x58;
		constexpr auto waterlevel = 0x5c;
		constexpr auto attack = 0x60;
		constexpr auto attack_alt = 0x64;
		constexpr auto deploy = 0x68;
		constexpr auto reload = 0x6c;
		constexpr auto throwWeapon = 0x70;
		constexpr auto holster = 0x74;
		constexpr auto aiming = 0x78;
		constexpr auto onLadder = 0x7c;
		constexpr auto posing = 0x80;
		constexpr auto poseType = 0x84;
		constexpr auto relaxGunPose = 0x88;
		constexpr auto vehicle_aim_yaw = 0x8c;
		constexpr auto vehicle_aim_speed = 0x90;
		constexpr auto onPhone = 0x94;
		constexpr auto usePoseTransition = 0x98;
		constexpr auto leftFootIK = 0x9c;
		constexpr auto rightFootIK = 0xa0;
		constexpr auto vehicleSteering = 0xa4;
		constexpr auto sitReaction = 0xa8;
		constexpr auto forwardReaction = 0xac;
		constexpr auto rightReaction = 0xb0;
		constexpr auto collision = 0x78;
		constexpr auto censorshipCube = 0x80;
		constexpr auto censorshipCubeBreasts = 0x88;
		constexpr auto jawBone = 0x90;
		constexpr auto neckBone = 0x98;
		constexpr auto headBone = 0xa0;
		constexpr auto eyeController = 0xa8;
		constexpr auto blinkController = 0xb0;
		constexpr auto SpineBones = 0xb8;
		constexpr auto leftFootBone = 0xc0;
		constexpr auto rightFootBone = 0xc8;
		constexpr auto leftHandPropBone = 0xd0;
		constexpr auto rightHandPropBone = 0xd8;
		constexpr auto rightHandTarget = 0xe0;
		constexpr auto leftHandTargetPosition = 0xec;
		constexpr auto leftHandTargetRotation = 0xf8;
		constexpr auto rightHandTargetPosition = 0x108;
		constexpr auto rightHandTargetRotation = 0x114;
		constexpr auto steeringTargetDegrees = 0x124;
		constexpr auto rightFootTargetPosition = 0x128;
		constexpr auto rightFootTargetRotation = 0x134;
		constexpr auto leftFootTargetPosition = 0x144;
		constexpr auto leftFootTargetRotation = 0x150;
		constexpr auto CinematicAnimationController = 0x160;
		constexpr auto DefaultAvatar = 0x168;
		constexpr auto CinematicAvatar = 0x170;
		constexpr auto DefaultHoldType = 0x178;
		constexpr auto SleepGesture = 0x180;
		constexpr auto CrawlToIncapacitatedGesture = 0x188;
		constexpr auto StandToIncapacitatedGesture = 0x190;
		constexpr auto CurrentGesture = 0x198;
		constexpr auto MaleSkin = 0x1a0;
		constexpr auto FemaleSkin = 0x1a8;
		constexpr auto subsurfaceProfile = 0x1b0;
		constexpr auto voiceVolume = 0x1b8;
		constexpr auto skinColor = 0x1bc;
		constexpr auto skinNumber = 0x1c0;
		constexpr auto meshNumber = 0x1c4;
		constexpr auto hairNumber = 0x1c8;
		constexpr auto skinType = 0x1cc;
		constexpr auto movementSounds = 0x1d0;
		constexpr auto showSash = 0x1d8;
		constexpr auto tempPoseType = 0x1dc;
		constexpr auto underwearSkin = 0x1e0;
		constexpr auto overrideSkinSeedk__BackingField = 0x1e8;
		constexpr auto AimAnglesk__BackingField = 0x1f0;
		constexpr auto LookAnglesk__BackingField = 0x200;
		constexpr auto modelState = 0x210;
		constexpr auto position = 0x218;
		constexpr auto velocity = 0x224;
		constexpr auto speedOverride = 0x230;
		constexpr auto newVelocity = 0x23c;
		constexpr auto rotation = 0x248;
		constexpr auto mountedRotation = 0x258;
		constexpr auto smoothLeftFootIK = 0x268;
		constexpr auto smoothRightFootIK = 0x274;
		constexpr auto drawShadowOnly = 0x280;
		constexpr auto isIncapacitated = 0x281;
		constexpr auto flinchLocation = 0x284;
		constexpr auto visible = 0x288;
		constexpr auto nameTag = 0x290;
		constexpr auto animatorNeedsWarmup = 0x298;
		constexpr auto isLocalPlayer = 0x299;
		constexpr auto aimSoundDef = 0x2a0;
		constexpr auto aimEndSoundDef = 0x2a8;
		constexpr auto InGesture = 0x2b0;
		constexpr auto CurrentGestureConfig = 0x2b8;
		constexpr auto InCinematic = 0x2c0;
		constexpr auto defaultAnimatorController = 0x2c8;
		constexpr auto _multiMesh = 0x2d0;
		constexpr auto _animator = 0x2d8;
		constexpr auto _lodGroup = 0x2e0;
		constexpr auto _currentGesture = 0x2e8;
		constexpr auto holdTypeLock = 0x2f0;
		constexpr auto hasHeldEntity = 0x2f4;
		constexpr auto wasMountedRightAim = 0x2f5;
		constexpr auto cachedMask = 0x2f8;
		constexpr auto cachedConstructionMask = 0x2fc;
		constexpr auto WorkshopHeldEntity = 0x300;
		constexpr auto wasCrawling = 0x308;
		constexpr auto mountedSpineLookWeight = 0x30c;
		constexpr auto mountedAnimSpeed = 0x310;
		constexpr auto preserveBones = 0x314;
		constexpr auto downLimitOverride = 0x318;
		constexpr auto IsNpck__BackingField = 0x320;
		constexpr auto timeSinceReactionStart = 0x324;
		constexpr auto timeSinceLeftFootTest = 0x328;
		constexpr auto cachedLeftFootPos = 0x32c;
		constexpr auto cachedLeftFootNormal = 0x338;
		constexpr auto timeSinceRightFootTest = 0x344;
		constexpr auto cachedRightFootPos = 0x348;
		constexpr auto cachedRightFootNormal = 0x354;

		constexpr auto SetMountedLookAtOverride = 0x6ac830;
		constexpr auto SpineIk = 0x6acc50;
		constexpr auto ParentArmsToCamera = 0x6aaa40;
		constexpr auto OnAnimatorIK = 0x6aa0b0;
		constexpr auto HandIK = 0x6a8710;
		constexpr auto FootIK = 0x6a4f20;
		constexpr auto HeadIK = 0x6a8b70;
		constexpr auto get_ShouldDoLegs = 0x6b2540;
		constexpr auto get_ShouldShowHands = 0x6b25c0;
		constexpr auto ClearLegs = 0x6a3d90;
		constexpr auto RebuildLegs = 0x6ab3f0;
		constexpr auto InitializeLegSpineBones = 0x6a9250;
		constexpr auto UpdateLegsBeforeRender = 0x6ae460;
		constexpr auto UpdateLegsDisable = 0x6af350;
		constexpr auto AddLegRenderer = 0x6a32c0;
		constexpr auto SwapLegBone = 0x6ad640;
		constexpr auto GetFlat = 0x6a7b80;
		constexpr auto RebuildAll = 0x6aaff0;
		constexpr auto get_overrideSkinSeed = 0x6b28a0;
		constexpr auto set_overrideSkinSeed = 0x6b28e0;
		constexpr auto get_IsFemale = 0x6b24f0;
		constexpr auto get_SkinSet = 0x6b26a0;
		constexpr auto get_AimAngles = 0x6b23a0;
		constexpr auto set_AimAngles = 0x6b28b0;
		constexpr auto get_LookAngles = 0x6b2530;
		constexpr auto set_LookAngles = 0x6b28d0;
		constexpr auto get_GestureAllowsSpineMovement = 0x6b2450;
		constexpr auto get_GestureAllowsRootMotion = 0x6b23b0;
		constexpr auto get_IsFirstPerson = 0x6b2500;
		constexpr auto get_IsNpc = 0x6b2520;
		constexpr auto set_IsNpc = 0x6b28c0;
		constexpr auto get_multiMesh = 0x6b2800;
		constexpr auto get_animator = 0x6b26c0;
		constexpr auto get_lodGroup = 0x6b2760;
		constexpr auto GetTargetVelocity = 0x6a85b0;
		constexpr auto Awake = 0x6a3cf0;
		constexpr auto OnEnable = 0x6aa4d0;
		constexpr auto OnDisable = 0x6aa1e0;
		constexpr auto SetDefaultAnimatorWeights = 0x6ac110;
		constexpr auto UpdateMultiMesh = 0x6af9f0;
		constexpr auto UpdateCensorship = 0x6adb80;
		constexpr auto UpdateCollider = 0x6ae000;
		constexpr auto UpdateModelState = 0x6af9a0;
		constexpr auto UpdatePosition = 0x6b0460;
		constexpr auto UpdateRotation = 0x6b0580;
		constexpr auto UpdateLocalVelocity = 0x6af8d0;
		constexpr auto UpdateVelocity = 0x6b0f00;
		constexpr auto UpdateParameters = 0x6afb80;
		constexpr auto UpdateFrom = 0x6ae270;
		constexpr auto UpdateGlobalShaderConstants = 0x6ae2d0;
		constexpr auto LateCycle = 0x6a9a30;
		constexpr auto FrameUpdate = 0x6a7190;
		constexpr auto FrameUpdate_Default = 0x6a67b0;
		constexpr auto FrameUpdate_Sleeping = 0x6a6ec0;
		constexpr auto FrameUpdate_Incapacitated = 0x6a6920;
		constexpr auto FrameUpdate_OnLadder = 0x6a6bf0;
		constexpr auto GetAim360 = 0x6a7910;
		constexpr auto UpdateVehicleAim360 = 0x6b0a10;
		constexpr auto ResetCurrentState = 0x6abfc0;
		constexpr auto DoAimingSounds = 0x6a46c0;
		constexpr auto SetAimSounds = 0x6ac0d0;
		constexpr auto SetMountedLookAtWeight = 0x6ac840;
		constexpr auto SetMountedAnimationSpeed = 0x6ac820;
		constexpr auto UpdateLocalPlayerPosition = 0x6af580;
		constexpr auto Attack = 0x6a3c70;
		constexpr auto AltAttack = 0x6a3930;
		constexpr auto Deploy = 0x6a4610;
		constexpr auto Reload = 0x6abd40;
		constexpr auto Holster = 0x6a91d0;
		constexpr auto Flinch = 0x6a4ec0;
		constexpr auto SetReactionAnim = 0x6ac850;
		constexpr auto OnReactionEnded = 0x6aaa10;
		constexpr auto Throw = 0x6ad970;
		constexpr auto Gesture = 0x6a7580;
		constexpr auto FadeInGestureUpperBodyLayer = 0x6a4920;
		constexpr auto FadeOutGestureUpperBodyLayer = 0x6a4c10;
		constexpr auto FadeInGestureFullBodyLayer = 0x6a4800;
		constexpr auto FadeOutGestureFullBodyLayer = 0x6a4a40;
		constexpr auto AnimatorWarmup = 0x6a39e0;
		constexpr auto AlwaysAnimate = 0x6a39b0;
		constexpr auto SetHoldType = 0x6ac4a0;
		constexpr auto SetHasHeldEntity = 0x6ac490;
		constexpr auto FadeOutGestureLayer = 0x6a4ba0;
		constexpr auto SetGesture = 0x6ac240;
		constexpr auto FadeOutPlayerGestureLayers = 0x6a4d70;
		constexpr auto StopGesture = 0x6ad540;
		constexpr auto PlayCinematic = 0x6aae60;
		constexpr auto StopCinematic = 0x6ad4e0;
		constexpr auto SetSpeedOverride = 0x6acc30;
		constexpr auto GetReplacementUnderwear = 0x6a84f0;
		constexpr auto RemoveUnderwearParts = 0x6abe90;
		constexpr auto Clear = 0x6a3ef0;
		constexpr auto Rebuild = 0x6ab7b0;
		constexpr auto AddPart = 0x6a3650;
		constexpr auto RemovePart = 0x6abdc0;
		constexpr auto HasPart = 0x6a8ab0;
		constexpr auto IsBarefoot = 0x6a99a0;
		constexpr auto GetSkinColor = 0x6a8530;
		constexpr auto SetSkinProperties = 0x6acb10;
		constexpr auto RefreshUnderwear = 0x6ab9b0;
		constexpr auto ForceModelSeed = 0x6a6580;
		constexpr auto FindBone = 0x6a4e90;
		constexpr auto GetBones = 0x6a7b50;
		constexpr auto GetFootPlacement = 0x6a7bc0;
		constexpr auto ApplyVisibility = 0x6a3a40;
		constexpr auto ToggleUpdateOffscreen = 0x6ada10;
		constexpr auto OnParentDestroying = 0x6aa910;
		constexpr auto WorkshopPreviewSetup = 0x6b1310;
		constexpr auto ctor = 0x6b21f0;
		constexpr auto cctor = 0x6b1cb0;
	};

	namespace ProtoBuf_PlayerTeam {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto teamID = 0x18;
		constexpr auto teamName = 0x20;
		constexpr auto teamLeader = 0x28;
		constexpr auto members = 0x30;
		constexpr auto teamLifetime = 0x38;
		constexpr auto mapNote = 0x40;

		constexpr auto ResetToPool = 0x22f0d20;
		constexpr auto Dispose = 0x22f0920;
		constexpr auto EnterPool = 0x10beca0;
		constexpr auto LeavePool = 0x10becd0;
		constexpr auto CopyTo = 0x22eee30;
		constexpr auto Copy = 0x22ef070;
		constexpr auto Deserialize = 0x22efe20;
		constexpr auto DeserializeLengthDelimited = 0x22ef0f0;
		constexpr auto DeserializeLength = 0x22ef5a0;
		constexpr auto FromProto = 0x22f09a0;
		constexpr auto WriteToStream = 0x22f1be0;
		constexpr auto WriteToStreamDelta = 0x22f1c00;
		constexpr auto ReadFromStream = 0x22f0d00;
		constexpr auto SerializeDelta = 0x22f11d0;
		constexpr auto Serialize = 0x22f17f0;
		constexpr auto ToProtoBytes = 0x22f1bd0;
		constexpr auto ToProto = 0x22f1be0;
		constexpr auto SerializeToBytes = 0x22f16e0;
		constexpr auto SerializeLengthDelimited = 0x22f1630;
		constexpr auto ctor = 0x10a2bd0;
	};

	namespace PlayerInventory {
		constexpr auto containerMain = 0x20;
		constexpr auto containerBelt = 0x28;
		constexpr auto containerWear = 0x30;
		constexpr auto crafting = 0x38;
		constexpr auto loot = 0x40;

		constexpr auto OnRpcMessage = 0x6a1100;
		constexpr auto Initialize = 0x6a0d50;
		constexpr auto DoDestroy = 0x6a0530;
		constexpr auto ClientInit = 0x6a04b0;
		constexpr auto UpdatedItemContainer = 0x6a1550;
		constexpr auto FindItemUID = 0x6a0b70;
		constexpr auto FindItemID = 0x6a0890;
		constexpr auto FindBySubEntityID = 0x6a0610;
		constexpr auto FindItemIDs = 0x6a0a80;
		constexpr auto FindContainer = 0x6a06e0;
		constexpr auto GetContainer = 0x6a0cd0;
		constexpr auto Load = 0x6a0fb0;
		constexpr auto GetAmount = 0x6a0c50;
		constexpr auto AllItems = 0x6a03e0;
		constexpr auto AllItemsNoAlloc = 0x6a0310;
		constexpr auto FindAmmo = 0x6a05c0;
		constexpr auto HasAmmo = 0x6a0cf0;
		constexpr auto ctor = 0x6a1740;
	};

	namespace ItemContainer {
		constexpr auto flags = 0x10;
		constexpr auto allowedContents = 0x14;
		constexpr auto onlyAllowedItems = 0x18;
		constexpr auto availableSlots = 0x20;
		constexpr auto capacity = 0x28;
		constexpr auto uid = 0x2c;
		constexpr auto dirty = 0x30;
		constexpr auto itemList = 0x38;
		constexpr auto temperature = 0x40;
		constexpr auto parent = 0x48;
		constexpr auto playerOwner = 0x50;
		constexpr auto entityOwner = 0x58;
		constexpr auto isServer = 0x60;
		constexpr auto maxStackSize = 0x64;

		constexpr auto HasFlag = 0xa69ea0;
		constexpr auto SetFlag = 0xa6af50;
		constexpr auto IsLocked = 0xa6a070;
		constexpr auto PlayerItemInputBlocked = 0xa6ab90;
		constexpr auto get_HasLimitedAllowedItems = 0xa6b340;
		constexpr auto OnChanged = 0xa6aaf0;
		constexpr auto ClientInitialize = 0xa68fd0;
		constexpr auto FindItemByUID = 0xa69580;
		constexpr auto IsFull = 0xa6a020;
		constexpr auto IsEmpty = 0xa69fe0;
		constexpr auto CanAccept = 0xa68ea0;
		constexpr auto GetMaxTransferAmount = 0xa69b40;
		constexpr auto SetOnlyAllowedItem = 0xa6af70;
		constexpr auto SetOnlyAllowedItems = 0xa6b030;
		constexpr auto Insert = 0xa69eb0;
		constexpr auto SlotTaken = 0xa6b1c0;
		constexpr auto GetSlot = 0xa69d00;
		constexpr auto FindPosition = 0xa69870;
		constexpr auto Clear = 0xa68ef0;
		constexpr auto Kill = 0xa6a080;
		constexpr auto GetAmount = 0xa699c0;
		constexpr auto FindItemByItemID = 0xa69410;
		constexpr auto FindItemsByItemName = 0xa69720;
		constexpr auto FindBySubEntityID = 0xa691b0;
		constexpr auto FindItemsByItemID = 0xa69670;
		constexpr auto Save = 0xa6aba0;
		constexpr auto Load = 0xa6a340;
		constexpr auto GetOwnerPlayer = 0x6048d0;
		constexpr auto ContainerMaxStackSize = 0xa69010;
		constexpr auto FindAmmo = 0xa690f0;
		constexpr auto HasAmmo = 0xa69dd0;
		constexpr auto GetAmmoAmount = 0xa69900;
		constexpr auto TotalItemAmount = 0xa6b1e0;
		constexpr auto ContentsHash = 0xa69020;
		constexpr auto FindContainer = 0xa69320;
		constexpr auto CanAcceptItem = 0xa68d70;
		constexpr auto ctor = 0xa6b290;
	};

	namespace Item {
		constexpr auto amountOverride = 0x10;
		constexpr auto _condition = 0x18;
		constexpr auto _maxCondition = 0x1c;
		constexpr auto info = 0x20;
		constexpr auto uid = 0x28;
		constexpr auto dirty = 0x2c;
		constexpr auto amount = 0x30;
		constexpr auto position = 0x34;
		constexpr auto busyTime = 0x38;
		constexpr auto removeTime = 0x3c;
		constexpr auto fuel = 0x40;
		constexpr auto isServer = 0x44;
		constexpr auto instanceData = 0x48;
		constexpr auto skin = 0x50;
		constexpr auto name = 0x58;
		constexpr auto text = 0x60;
		constexpr auto cookTimeLeft = 0x68;
		constexpr auto progressBar = 0x6c;
		constexpr auto OnDirty = 0x70;
		constexpr auto flags = 0x78;
		constexpr auto contents = 0x80;
		constexpr auto parent = 0x88;
		constexpr auto worldEnt = 0x90;
		constexpr auto heldEntity = 0xa0;

		constexpr auto UpdateAmountDisplay = 0xa782c0;
		constexpr auto FormatAmount = 0xa76d40;
		constexpr auto set_condition = 0xa79290;
		constexpr auto get_condition = 0x84b890;
		constexpr auto set_maxCondition = 0xa79310;
		constexpr auto get_maxCondition = 0x84b860;
		constexpr auto get_maxConditionNormalized = 0xa79040;
		constexpr auto get_conditionNormalized = 0xa78bc0;
		constexpr auto set_conditionNormalized = 0xa791f0;
		constexpr auto get_hasCondition = 0xa78cd0;
		constexpr auto get_isBroken = 0xa78f10;
		constexpr auto get_despawnMultiplier = 0xa78c00;
		constexpr auto get_blueprintTargetDef = 0xa78b90;
		constexpr auto get_blueprintTarget = 0xa78bb0;
		constexpr auto set_blueprintTarget = 0xa79160;
		constexpr auto get_blueprintAmount = 0xa78b80;
		constexpr auto set_blueprintAmount = 0xa79150;
		constexpr auto IsBlueprint = 0xa77280;
		constexpr auto add_OnDirty = 0xa78ac0;
		constexpr auto remove_OnDirty = 0xa790b0;
		constexpr auto HasFlag = 0xa77270;
		constexpr auto SetFlag = 0xa77dc0;
		constexpr auto IsOn = 0xa774b0;
		constexpr auto IsOnFire = 0xa774a0;
		constexpr auto IsCooking = 0xa77460;
		constexpr auto IsLocked = 0xa77470;
		constexpr auto get_parentItem = 0xa79070;
		constexpr auto MarkDirty = 0xa77900;
		constexpr auto OnChanged = 0xa779f0;
		constexpr auto CollectedForCrafting = 0x45e1d0;
		constexpr auto ReturnedFromCancelledCraft = 0x45e1d0;
		constexpr auto IsChildContainer = 0xa772d0;
		constexpr auto IsBusy = 0xa772a0;
		constexpr auto BusyFor = 0xa768c0;
		constexpr auto Remove = 0xa77ba0;
		constexpr auto DoRemove = 0xa76b80;
		constexpr auto SwitchOnOff = 0xa77f50;
		constexpr auto LockUnlock = 0xa77880;
		constexpr auto get_temperature = 0xa79090;
		constexpr auto GetOwnerPlayer = 0xa77080;
		constexpr auto CanBeHeld = 0xa768f0;
		constexpr auto CanStack = 0xa76930;
		constexpr auto IsValid = 0xa774c0;
		constexpr auto SetWorldEntity = 0xa77de0;
		constexpr auto OnMovedToWorld = 0xa77b10;
		constexpr auto GetWorldEntity = 0xa77130;
		constexpr auto GetHeldEntity = 0xa77060;
		constexpr auto BeltBarSelect = 0xa76820;
		constexpr auto GetTotalUISlots = 0xa770a0;
		constexpr auto GetFilledUISlots = 0xa76fd0;
		constexpr auto HasAmmo = 0xa77150;
		constexpr auto FindAmmo = 0xa76be0;
		constexpr auto GetAmmoAmount = 0xa76ea0;
		constexpr auto ToString = 0xa77fd0;
		constexpr auto FindItem = 0xa76d20;
		constexpr auto MaxStackable = 0xa77960;
		constexpr auto get_iconSprite = 0xa78d70;
		constexpr auto get_isLoadingIconSprite = 0xa78f40;
		constexpr auto get_Traits = 0xa78b60;
		constexpr auto Save = 0xa77c00;
		constexpr auto Load = 0xa774d0;
		constexpr auto ctor = 0xa78aa0;
		constexpr auto cctor = 0xa789d0;
		constexpr auto get_iconSpriteb__97_0 = 0xa782b0;
		constexpr auto get_isLoadingIconSpriteb__99_0 = 0xa782b0;
	};

	namespace Model {
		constexpr auto collision = 0x18;
		constexpr auto rootBone = 0x20;
		constexpr auto headBone = 0x28;
		constexpr auto eyeBone = 0x30;
		constexpr auto animator = 0x38;
		constexpr auto skeleton = 0x40;
		constexpr auto boneTransforms = 0x48;
		constexpr auto boneNames = 0x50;
		constexpr auto boneDict = 0x58;
		constexpr auto skin = 0x60;
		constexpr auto _lodGroup = 0x68;

		constexpr auto OnEnable = 0x84adf0;
		constexpr auto BuildBoneDictionary = 0x84a550;
		constexpr auto GetSkin = 0x84a910;
		constexpr auto FindBoneInternal = 0x84a640;
		constexpr auto FindBone = 0x84a6d0;
		constexpr auto FindBoneID = 0x84a600;
		constexpr auto GetBones = 0x84a8e0;
		constexpr auto FindClosestBone = 0x84a740;
		constexpr auto get_lodGroup = 0x84b5e0;
		constexpr auto OnDisable = 0x84acc0;
		constexpr auto SyncBones = 0x84b1c0;
		constexpr auto Trigger = 0x84b530;
		constexpr auto GetTransform = 0x84a920;
		constexpr auto ApplyVisibility = 0x84a3c0;
		constexpr auto PreProcess = 0x84ae00;
		constexpr auto ctor = 0x3ed250;
	};

	namespace MedicalTool {
		constexpr auto healDurationSelf = 0x280;
		constexpr auto healDurationOther = 0x284;
		constexpr auto healDurationOtherWounded = 0x288;
		constexpr auto maxDistanceOther = 0x28c;
		constexpr auto canUseOnOther = 0x290;
		constexpr auto canRevive = 0x291;
		constexpr auto useTarget = 0x298;
		constexpr auto resetTime = 0x2a0;

		constexpr auto OnRpcMessage = 0x9756d0;
		constexpr auto GetTarget = 0x974f70;
		constexpr auto AnyPressed = 0x974ea0;
		constexpr auto OnInput = 0x975320;
		constexpr auto OnViewmodelEvent = 0x975aa0;
		constexpr auto Reset = 0x975cb0;
		constexpr auto OnDeploy = 0x9752c0;
		constexpr auto OnHolstered = 0x9752f0;
		constexpr auto ProcessSpectatorViewmodelEvent = 0x975bf0;
		constexpr auto ctor = 0x975cd0;
	};

	namespace HeldEntity {
		constexpr auto _punches = 0x168;
		constexpr auto punchAdded = 0x170;
		constexpr auto lastPunchTime = 0x17c;
		constexpr auto worldModelAnimator = 0x180;
		constexpr auto thirdPersonDeploySound = 0x188;
		constexpr auto thirdPersonAimSound = 0x190;
		constexpr auto thirdPersonAimEndSound = 0x198;
		constexpr auto viewModel = 0x1a0;
		constexpr auto isDeployed = 0x1a8;
		constexpr auto nextExamineTime = 0x1ac;
		constexpr auto handBone = 0x1b0;
		constexpr auto HoldAnimationOverride = 0x1b8;
		constexpr auto isBuildingTool = 0x1c0;
		constexpr auto hostileScore = 0x1c4;
		constexpr auto holsterInfo = 0x1c8;
		constexpr auto HeldCameraMode = 0x1d0;
		constexpr auto FirstPersonArmOffset = 0x1d4;
		constexpr auto FirstPersonArmRotation = 0x1e0;
		constexpr auto FirstPersonRotationStrength = 0x1ec;
		constexpr auto ownerItemUID = 0x1f0;

		constexpr auto OnRpcMessage = 0x8f32e0;
		constexpr auto AddPunch = 0x8f2540;
		constexpr auto CL_Punch = 0x8f2610;
		constexpr auto DoRecoilCompensation = 0x45e1d0;
		constexpr auto GetAddedPunch = 0x8f2940;
		constexpr auto SimPunches = 0x8f3ad0;
		constexpr auto ClientInit = 0x8f26c0;
		constexpr auto GetFovOverride = 0x8f2960;
		constexpr auto DoNetworkDestroy = 0x8f2790;
		constexpr auto PostLateClientCycle = 0x45e1d0;
		constexpr auto PostNetworkUpdate = 0x8f3790;
		constexpr auto UpdateHolsteredOffset = 0x8f3fa0;
		constexpr auto EditViewAngles = 0x45e1d0;
		constexpr auto ClampPitch = 0x45e1d0;
		constexpr auto OnFrame = 0x8f3150;
		constexpr auto OnInput = 0x45e1d0;
		constexpr auto Examine = 0x8f27d0;
		constexpr auto OnDeploy = 0x8f2e90;
		constexpr auto OnDeployed = 0x8f3140;
		constexpr auto OnHolster = 0x8f3170;
		constexpr auto OnHolstered = 0x8f32d0;
		constexpr auto OnViewmodelEvent = 0x45e1d0;
		constexpr auto OnReliableEvent = 0x45e1d0;
		constexpr auto ModifyCamera = 0x45e1d0;
		constexpr auto ShouldDestroyImmediately = 0x5294a0;
		constexpr auto UpdatePlayerModel = 0x8f47a0;
		constexpr auto ProcessPlayerModel = 0x45e1d0;
		constexpr auto GetHoldAnimations = 0x8f2b50;
		constexpr auto GetMovementMultiplier = 0x526360;
		constexpr auto OnSpawnedForWorkshopPreview = 0x45e1d0;
		constexpr auto HeldEntityBlocksMovement = 0x5d1c50;
		constexpr auto ProcessSpectatorViewmodel = 0x45e1d0;
		constexpr auto ProcessSpectatorViewmodelEvent = 0x8f3a20;
		constexpr auto get_hostile = 0x8f4950;
		constexpr auto LightsOn = 0x651300;
		constexpr auto IsDeployed = 0x8f2e20;
		constexpr auto GetOwnerPlayer = 0x8f2d60;
		constexpr auto GetOwnerConnection = 0x8f2b70;
		constexpr auto CanBeUsedInWater = 0x5d1c50;
		constexpr auto BlocksGestures = 0x5d1c50;
		constexpr auto GetOwnerItem = 0x8f2c80;
		constexpr auto GetItem = 0x8f2b60;
		constexpr auto GetOwnerItemDefinition = 0x8f2c00;
		constexpr auto IsInstrument = 0x5d1c50;
		constexpr auto Load = 0x8f2e30;
		constexpr auto ctor = 0x8f4860;
		constexpr auto cctor = 0x8f4820;
	};

	namespace UnityEngine_GUIContent {
		constexpr auto m_Text = 0x10;
		constexpr auto m_Image = 0x18;
		constexpr auto m_Tooltip = 0x20;
		constexpr auto s_Image = 0x8;
		constexpr auto s_TextImage = 0x10;
		constexpr auto none = 0x18;

		constexpr auto get_text = 0x1a5f750;
		constexpr auto set_text = 0x60c1f0;
		constexpr auto set_image = 0x61c5f0;
		constexpr auto get_tooltip = 0x1ccdb50;
		constexpr auto set_tooltip = 0x5f2350;
		constexpr auto ctor = 0x1ccdac0;
		constexpr auto Temp = 0x1ccd3a0;
		constexpr auto ClearStaticCache = 0x1ccd240;
		constexpr auto cctor = 0x1ccd670;
	};

	namespace BaseCombatEntity {
		constexpr auto __menuOption_Menu_Pickup = 0x168;
		constexpr auto skeletonProperties = 0x1c0;
		constexpr auto baseProtection = 0x1c8;
		constexpr auto startHealth = 0x1d0;
		constexpr auto pickup = 0x1d8;
		constexpr auto repair = 0x1f8;
		constexpr auto ShowHealthInfo = 0x220;
		constexpr auto lifestate = 0x224;
		constexpr auto sendsHitNotification = 0x228;
		constexpr auto sendsMeleeHitNotification = 0x229;
		constexpr auto markAttackerHostile = 0x22a;
		constexpr auto _health = 0x22c;
		constexpr auto _maxHealth = 0x230;
		constexpr auto faction = 0x234;
		constexpr auto deathTime = 0x238;
		constexpr auto lastNotifyFrame = 0x23c;

		constexpr auto GetMenuOptions = 0xc940b0;
		constexpr auto get_HasMenuOptions = 0xc952a0;
		constexpr auto OnRpcMessage = 0xc947f0;
		constexpr auto HitNotify = 0xc94410;
		constexpr auto ClientInit = 0xc93ac0;
		constexpr auto DisplayHealthInfo = 0x741f00;
		constexpr auto GetEyeTransform = 0xc93f90;
		constexpr auto OnLifeStateChanged = 0xc947c0;
		constexpr auto GetPickupCount = 0xc943f0;
		constexpr auto CanPickup = 0xc93a20;
		constexpr auto OnPickedUp = 0x45e1d0;
		constexpr auto OnPickedUpPreItemMove = 0x45e1d0;
		constexpr auto Menu_Pickup = 0xc94690;
		constexpr auto Menu_Pickup_TimeStart = 0x45e1d0;
		constexpr auto Menu_Pickup_If = 0xc94670;
		constexpr auto BuildCost = 0xc93950;
		constexpr auto IsDead = 0xc945c0;
		constexpr auto IsAlive = 0xc945b0;
		constexpr auto GetFaction = 0xc940a0;
		constexpr auto IsFriendly = 0x5d1c50;
		constexpr auto get_SecondsSinceDeath = 0xc95360;
		constexpr auto get_healthFraction = 0xc95380;
		constexpr auto ResetState = 0xc94e30;
		constexpr auto DestroyShared = 0xc93ba0;
		constexpr auto GetThreatLevel = 0x652640;
		constexpr auto PenetrationResistance = 0xc94da0;
		constexpr auto ScaleDamage = 0xc94f30;
		constexpr auto SkeletonLookup = 0xc95070;
		constexpr auto Load = 0xc945d0;
		constexpr auto get_health = 0xc94400;
		constexpr auto set_health = 0xc953d0;
		constexpr auto Health = 0xc94400;
		constexpr auto MaxHealth = 0x5c7ed0;
		constexpr auto StartHealth = 0x5c7fb0;
		constexpr auto StartMaxHealth = 0xc95120;
		constexpr auto SetMaxHealth = 0xc94fe0;
		constexpr auto DoHitNotify = 0xc93bc0;
		constexpr auto OnAttacked = 0xc946d0;
		constexpr auto ctor = 0xc95140;
	};

	namespace InputState {
		constexpr auto current = 0x10;
		constexpr auto previous = 0x18;
		constexpr auto SwallowedButtons = 0x20;

		constexpr auto IsDown = 0x6203d0;
		constexpr auto WasDown = 0x6204a0;
		constexpr auto IsAnyDown = 0x6203a0;
		constexpr auto WasJustPressed = 0x6204c0;
		constexpr auto WasJustReleased = 0x620500;
		constexpr auto SwallowButton = 0x620490;
		constexpr auto AimAngle = 0x620160;
		constexpr auto MouseDelta = 0x620400;
		constexpr auto Flip = 0x6202d0;
		constexpr auto Clear = 0x620220;
		constexpr auto ctor = 0x620540;
	};

	namespace InputMessage {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto buttons = 0x14;
		constexpr auto aimAngles = 0x18;
		constexpr auto mouseDelta = 0x24;

		constexpr auto ResetToPool = 0x22c52e0;
		constexpr auto Dispose = 0x22c4fe0;
		constexpr auto EnterPool = 0x10beca0;
		constexpr auto LeavePool = 0x10becd0;
		constexpr auto CopyTo = 0x22c4040;
		constexpr auto Copy = 0x22c4080;
		constexpr auto Deserialize = 0x22c4710;
		constexpr auto DeserializeLengthDelimited = 0x22c43a0;
		constexpr auto DeserializeLength = 0x22c4420;
		constexpr auto FromProto = 0x22c5060;
		constexpr auto WriteToStream = 0x22c5bb0;
		constexpr auto WriteToStreamDelta = 0x22c5bd0;
		constexpr auto ReadFromStream = 0x22c5220;
		constexpr auto SerializeDelta = 0x22c5380;
		constexpr auto Serialize = 0x22c5940;
		constexpr auto ToProtoBytes = 0x22c5ba0;
		constexpr auto ToProto = 0x22c5bb0;
		constexpr auto SerializeToBytes = 0x22c5830;
		constexpr auto SerializeLengthDelimited = 0x22c5780;
		constexpr auto ctor = 0x10a2bd0;
	};

	namespace BaseMountable {
		constexpr auto __menuOption_Menu_Mount = 0x240;
		constexpr auto eyePositionOverride = 0x298;
		constexpr auto eyeCenterOverride = 0x2a0;
		constexpr auto pitchClamp = 0x2a8;
		constexpr auto yawClamp = 0x2b0;
		constexpr auto canWieldItems = 0x2b8;
		constexpr auto relativeViewAngles = 0x2b9;
		constexpr auto mountAnchor = 0x2c0;
		constexpr auto mountPose = 0x2c8;
		constexpr auto maxMountDistance = 0x2cc;
		constexpr auto dismountPositions = 0x2d0;
		constexpr auto checkPlayerLosOnMount = 0x2d8;
		constexpr auto disableMeshCullingForPlayers = 0x2d9;
		constexpr auto allowHeadLook = 0x2da;
		constexpr auto ignoreVehicleParent = 0x2db;
		constexpr auto modifiesPlayerCollider = 0x2dc;
		constexpr auto customPlayerCollider = 0x2e0;
		constexpr auto mountSoundDef = 0x2f8;
		constexpr auto swapSoundDef = 0x300;
		constexpr auto dismountSoundDef = 0x308;
		constexpr auto mountTimeStatType = 0x310;
		constexpr auto allowedGestures = 0x314;
		constexpr auto canDrinkWhileMounted = 0x318;
		constexpr auto allowSleeperMounting = 0x319;
		constexpr auto animateClothInLocalSpace = 0x31a;
		constexpr auto MountedCameraMode = 0x31c;
		constexpr auto isMobile = 0x320;
		constexpr auto SideLeanAmount = 0x324;

		constexpr auto GetMenuOptions = 0x949c00;
		constexpr auto get_HasMenuOptions = 0x94bcc0;
		constexpr auto OnRpcMessage = 0x94aa10;
		constexpr auto CanHoldItems = 0x949000;
		constexpr auto GetMountedCameraMode = 0x949f60;
		constexpr auto DirectlyMountable = 0x5294a0;
		constexpr auto GetEyeOverride = 0x949b70;
		constexpr auto GetMountedBodyAngles = 0x949f10;
		constexpr auto ModifiesThirdPersonCamera = 0x5d1c50;
		constexpr auto GetPitchClamp = 0x675440;
		constexpr auto GetYawClamp = 0x675460;
		constexpr auto IsMounted = 0x94a1c0;
		constexpr auto EyePositionForPlayer = 0x949800;
		constexpr auto EyeCenterForPlayer = 0x949700;
		constexpr auto WaterFactorForPlayer = 0x94baf0;
		constexpr auto MaxVelocity = 0x94a300;
		constexpr auto PlayerIsMounted = 0x94b010;
		constexpr auto OnClientInput = 0x45e1d0;
		constexpr auto ForceUpdatePlayerModel = 0x5d1c50;
		constexpr auto UpdatePlayerModel = 0x94b510;
		constexpr auto ProcessPlayerModel = 0x45e1d0;
		constexpr auto SuppressHandsAnimationLayer = 0x5d1c50;
		constexpr auto GetAnimationOverride = 0x52bcf0;
		constexpr auto GetSpineLookAtWeight = 0x526360;
		constexpr auto GetMountedAnimationSpeed = 0x652640;
		constexpr auto get_DisableLegsMeshAtExtremeViewAnglesInFirstPersonWithEyes = 0x5294a0;
		constexpr auto get_FirstPersonWithArmsEyesLerp = 0x5d6cd0;
		constexpr auto ModifyThirdPersonEyeOffset = 0x94a4c0;
		constexpr auto LockThirdPersonOffset = 0x94a290;
		constexpr auto LocalPlayerIsMounted = 0x94a1d0;
		constexpr auto VehicleParent = 0x94ba50;
		constexpr auto get_IsSummerDlcVehicle = 0x5d1c50;
		constexpr auto IsInstrument = 0x5d1c50;
		constexpr auto PostLateUpdatePlayer = 0x45e1d0;
		constexpr auto UpdatePlayerRotation = 0x94b9a0;
		constexpr auto SetNetworkPosition = 0x94b4e0;
		constexpr auto UpdatePlayerPosition = 0x94b830;
		constexpr auto GetMountedRotation = 0x94a030;
		constexpr auto GetMountedPosition = 0x949f70;
		constexpr auto PlayerMounted = 0x94b0b0;
		constexpr auto PlayerDismounted = 0x94ab30;
		constexpr auto ClientOnPlayerDismounted = 0x949010;
		constexpr auto ClientOnPlayerMounted = 0x9490b0;
		constexpr auto OverrideViewAngles = 0x94ab00;
		constexpr auto DoPlayerMovement = 0x949290;
		constexpr auto HoldToDismount = 0x94a140;
		constexpr auto ClientRequestDismount = 0x949180;
		constexpr auto Menu_Mount = 0x94a450;
		constexpr auto Menu_Mount_ShowIf = 0x94a3b0;
		constexpr auto MountMenuVisible = 0x94a4e0;
		constexpr auto NearMountPoint = 0x94a570;
		constexpr auto ConvertVector = 0x9491c0;
		constexpr auto get_BlocksDoors = 0x5294a0;
		constexpr auto ctor = 0x94bc10;
		constexpr auto cctor = 0x94bba0;
		constexpr auto DoPlayerMovementb__80_0 = 0x949180;
	};

	namespace TOD_Sky {
		constexpr auto ColorSpace = 0x18;
		constexpr auto ColorRange = 0x1c;
		constexpr auto ColorOutput = 0x20;
		constexpr auto SkyQuality = 0x24;
		constexpr auto CloudQuality = 0x28;
		constexpr auto MeshQuality = 0x2c;
		constexpr auto StarQuality = 0x30;
		constexpr auto Cycle = 0x38;
		constexpr auto World = 0x40;
		constexpr auto Atmosphere = 0x48;
		constexpr auto Day = 0x50;
		constexpr auto Night = 0x58;
		constexpr auto Sun = 0x60;
		constexpr auto Moon = 0x68;
		constexpr auto Stars = 0x70;
		constexpr auto Clouds = 0x78;
		constexpr auto Light = 0x80;
		constexpr auto Fog = 0x88;
		constexpr auto Ambient = 0x90;
		constexpr auto Reflection = 0x98;
		constexpr auto Initializedk__BackingField = 0xa0;
		constexpr auto Componentsk__BackingField = 0xa8;
		constexpr auto Resourcesk__BackingField = 0xb0;
		constexpr auto IsDayk__BackingField = 0xb8;
		constexpr auto IsNightk__BackingField = 0xb9;
		constexpr auto LerpValuek__BackingField = 0xbc;
		constexpr auto SunZenithk__BackingField = 0xc0;
		constexpr auto SunAltitudek__BackingField = 0xc4;
		constexpr auto SunAzimuthk__BackingField = 0xc8;
		constexpr auto MoonZenithk__BackingField = 0xcc;
		constexpr auto MoonAltitudek__BackingField = 0xd0;
		constexpr auto MoonAzimuthk__BackingField = 0xd4;
		constexpr auto SunsetTimek__BackingField = 0xd8;
		constexpr auto SunriseTimek__BackingField = 0xdc;
		constexpr auto LocalSiderealTimek__BackingField = 0xe0;
		constexpr auto SunVisibilityk__BackingField = 0xe4;
		constexpr auto MoonVisibilityk__BackingField = 0xe8;
		constexpr auto SunDirectionk__BackingField = 0xec;
		constexpr auto MoonDirectionk__BackingField = 0xf8;
		constexpr auto LightDirectionk__BackingField = 0x104;
		constexpr auto LocalSunDirectionk__BackingField = 0x110;
		constexpr auto LocalMoonDirectionk__BackingField = 0x11c;
		constexpr auto LocalLightDirectionk__BackingField = 0x128;
		constexpr auto SunLightColork__BackingField = 0x134;
		constexpr auto MoonLightColork__BackingField = 0x144;
		constexpr auto SunRayColork__BackingField = 0x154;
		constexpr auto MoonRayColork__BackingField = 0x164;
		constexpr auto SunSkyColork__BackingField = 0x174;
		constexpr auto MoonSkyColork__BackingField = 0x184;
		constexpr auto SunMeshColork__BackingField = 0x194;
		constexpr auto MoonMeshColork__BackingField = 0x1a4;
		constexpr auto SunCloudColork__BackingField = 0x1b4;
		constexpr auto MoonCloudColork__BackingField = 0x1c4;
		constexpr auto FogColork__BackingField = 0x1d4;
		constexpr auto GroundColork__BackingField = 0x1e4;
		constexpr auto AmbientColork__BackingField = 0x1f4;
		constexpr auto MoonHaloColork__BackingField = 0x204;
		constexpr auto ReflectionCur = 0x218;
		constexpr auto ReflectionSrc = 0x220;
		constexpr auto ReflectionDst = 0x228;
		constexpr auto ReflectionUpdateSpeed = 0x8;
		constexpr auto ReflectionResolution = 0xc;
		constexpr auto ReflectionUpdateInterval = 0x10;
		constexpr auto ReflectionTimeSlicing = 0x14;
		constexpr auto timeSinceLightUpdate = 0x230;
		constexpr auto timeSinceAmbientUpdate = 0x234;
		constexpr auto timeSinceReflectionUpdate = 0x238;
		constexpr auto kBetaMie = 0x23c;
		constexpr auto kSun = 0x248;
		constexpr auto k4PI = 0x258;
		constexpr auto kRadius = 0x268;
		constexpr auto kScale = 0x278;

		constexpr auto get_Instances = 0x132a7e0;
		constexpr auto get_Instance = 0x132a710;
		constexpr auto get_Initialized = 0xcc2a80;
		constexpr auto set_Initialized = 0xcc2f60;
		constexpr auto get_Headless = 0x132a6f0;
		constexpr auto get_Components = 0xc89f80;
		constexpr auto set_Components = 0xe32c50;
		constexpr auto get_Resources = 0xa96660;
		constexpr auto set_Resources = 0xc8a810;
		constexpr auto get_IsDay = 0x132a840;
		constexpr auto set_IsDay = 0x132ac10;
		constexpr auto get_IsNight = 0x132a850;
		constexpr auto set_IsNight = 0x132ac20;
		constexpr auto get_Radius = 0x132aaf0;
		constexpr auto get_Diameter = 0x132a690;
		constexpr auto get_LerpValue = 0xd7a550;
		constexpr auto set_LerpValue = 0xd7a700;
		constexpr auto get_SunZenith = 0x132abb0;
		constexpr auto set_SunZenith = 0x132ae20;
		constexpr auto get_SunAltitude = 0x132ab30;
		constexpr auto set_SunAltitude = 0x132ad80;
		constexpr auto get_SunAzimuth = 0x132ab40;
		constexpr auto set_SunAzimuth = 0x132ad90;
		constexpr auto get_MoonZenith = 0x132aaa0;
		constexpr auto set_MoonZenith = 0x132ad70;
		constexpr auto get_MoonAltitude = 0x132a9f0;
		constexpr auto set_MoonAltitude = 0x132acc0;
		constexpr auto get_MoonAzimuth = 0x132aa00;
		constexpr auto set_MoonAzimuth = 0x132acd0;
		constexpr auto get_SunsetTime = 0x132abd0;
		constexpr auto set_SunsetTime = 0x132ae40;
		constexpr auto get_SunriseTime = 0x132abc0;
		constexpr auto set_SunriseTime = 0x132ae30;
		constexpr auto get_LocalSiderealTime = 0x132a9c0;
		constexpr auto set_LocalSiderealTime = 0x132ac90;
		constexpr auto get_LightZenith = 0x132a900;
		constexpr auto get_LightIntensity = 0x132a8d0;
		constexpr auto get_SunVisibility = 0x132aba0;
		constexpr auto set_SunVisibility = 0x132ae10;
		constexpr auto get_MoonVisibility = 0x132aa90;
		constexpr auto set_MoonVisibility = 0x132ad60;
		constexpr auto get_SunDirection = 0x132ab50;
		constexpr auto set_SunDirection = 0x132adb0;
		constexpr auto get_MoonDirection = 0x132aa20;
		constexpr auto set_MoonDirection = 0x132acf0;
		constexpr auto get_LightDirection = 0x132a8b0;
		constexpr auto set_LightDirection = 0x132ac30;
		constexpr auto get_LocalSunDirection = 0x132a9d0;
		constexpr auto set_LocalSunDirection = 0x132aca0;
		constexpr auto get_LocalMoonDirection = 0x132a9a0;
		constexpr auto set_LocalMoonDirection = 0x132ac70;
		constexpr auto get_LocalLightDirection = 0x132a980;
		constexpr auto set_LocalLightDirection = 0x132ac50;
		constexpr auto get_SunLightColor = 0x132ab70;
		constexpr auto set_SunLightColor = 0x132add0;
		constexpr auto get_MoonLightColor = 0x132aa50;
		constexpr auto set_MoonLightColor = 0x132ad20;
		constexpr auto get_LightColor = 0x132a860;
		constexpr auto get_SunRayColor = 0x132ab90;
		constexpr auto set_SunRayColor = 0x132adf0;
		constexpr auto get_MoonRayColor = 0x132aa70;
		constexpr auto set_MoonRayColor = 0x132ad40;
		constexpr auto get_SunSkyColor = 0x1049660;
		constexpr auto set_SunSkyColor = 0x132ae00;
		constexpr auto get_MoonSkyColor = 0x132aa80;
		constexpr auto set_MoonSkyColor = 0x132ad50;
		constexpr auto get_SunMeshColor = 0x132ab80;
		constexpr auto set_SunMeshColor = 0x132ade0;
		constexpr auto get_MoonMeshColor = 0x132aa60;
		constexpr auto set_MoonMeshColor = 0x132ad30;
		constexpr auto get_SunCloudColor = 0xe42320;
		constexpr auto set_SunCloudColor = 0x132ada0;
		constexpr auto get_MoonCloudColor = 0x132aa10;
		constexpr auto set_MoonCloudColor = 0x132ace0;
		constexpr auto get_FogColor = 0x132a6d0;
		constexpr auto set_FogColor = 0x132abf0;
		constexpr auto get_GroundColor = 0x132a6e0;
		constexpr auto set_GroundColor = 0x132ac00;
		constexpr auto get_AmbientColor = 0x132a680;
		constexpr auto set_AmbientColor = 0x132abe0;
		constexpr auto get_MoonHaloColor = 0x132aa40;
		constexpr auto set_MoonHaloColor = 0x132ad10;
		constexpr auto get_Probe = 0x132aad0;
		constexpr auto get_ProbeInstance = 0x132aab0;
		constexpr auto OrbitalToUnity = 0x1323120;
		constexpr auto OrbitalToLocal = 0x1323060;
		constexpr auto SampleAtmosphere = 0x1324130;
		constexpr auto RenderToSphericalHarmonics = 0x1323fd0;
		constexpr auto RenderToCubemap = 0x1323230;
		constexpr auto RenderToProbe = 0x1323370;
		constexpr auto ReflectionIsUpdating = 0x13231f0;
		constexpr auto UpdateProbeBlending = 0x1328190;
		constexpr auto UpdateProbeProperties = 0x1328280;
		constexpr auto SampleFogColor = 0x13244b0;
		constexpr auto SampleSkyColor = 0x1324760;
		constexpr auto SampleEquatorColor = 0x13243f0;
		constexpr auto UpdateFog = 0x1328110;
		constexpr auto UpdateAmbient = 0x1325d70;
		constexpr auto UpdateReflection = 0x1328cb0;
		constexpr auto DelayReflectionUpdate = 0x13228f0;
		constexpr auto LoadParameters = 0x1322ce0;
		constexpr auto SaveParameters = 0x1324870;
		constexpr auto UpdateQualitySettings = 0x13286a0;
		constexpr auto UpdateRenderSettings = 0x1328db0;
		constexpr auto UpdateShaderKeywords = 0x1329380;
		constexpr auto UpdateShaderProperties = 0x13295e0;
		constexpr auto ShaderScale = 0x1324ed0;
		constexpr auto ShaderMiePhase = 0x1324bb0;
		constexpr auto ShaderRayleighPhase = 0x1324eb0;
		constexpr auto ShaderNightSkyColor = 0x1324dc0;
		constexpr auto ShaderMoonHaloColor = 0x1324c80;
		constexpr auto TOD_HDR2LDR = 0x1325b20;
		constexpr auto TOD_GAMMA2LINEAR = 0x1325ac0;
		constexpr auto TOD_LINEAR2GAMMA = 0x1325ca0;
		constexpr auto ShaderScatteringColor = 0x1324f80;
		constexpr auto Initialize = 0x1322900;
		constexpr auto Cleanup = 0x13227d0;
		constexpr auto OnEnable = 0x1323010;
		constexpr auto OnDisable = 0x13227d0;
		constexpr auto LateUpdate = 0x1322a00;
		constexpr auto OnValidate = 0x1323020;
		constexpr auto UpdateScattering = 0x13291d0;
		constexpr auto UpdateCelestials = 0x1326210;
		constexpr auto ctor = 0x132a570;
		constexpr auto cctor = 0x132a4b0;
	};

	namespace UnityEngine_Random {

		constexpr auto InitState = 0x1b772e0;
		constexpr auto get_state = 0x1b775b0;
		constexpr auto set_state = 0x1b77660;
		constexpr auto Range = 0x1b77360;
		constexpr auto RandomRangeInt = 0x1b77320;
		constexpr auto get_value = 0x1b775f0;
		constexpr auto get_insideUnitSphere = 0x1b77430;
		constexpr auto GetRandomUnitCircle = 0x1b772a0;
		constexpr auto get_insideUnitCircle = 0x1b773b0;
		constexpr auto get_onUnitSphere = 0x1b774b0;
		constexpr auto get_rotation = 0x1b77530;
		constexpr auto RandomRange = 0x1b77320;
		constexpr auto ColorHSV = 0x1b770e0;
		constexpr auto get_state_Injected = 0x1b77570;
		constexpr auto set_state_Injected = 0x1b77620;
		constexpr auto get_insideUnitSphere_Injected = 0x1b773f0;
		constexpr auto get_onUnitSphere_Injected = 0x1b77470;
		constexpr auto get_rotation_Injected = 0x1b774f0;
	};

	namespace UnityEngine_PhysicsScene {
		constexpr auto m_Handle = 0x10;

		constexpr auto ToString = 0x32d400;
		constexpr auto GetHashCode = 0x14f300;
		constexpr auto Equals = 0x32cec0;
		constexpr auto Raycast = 0x32d190;
		constexpr auto Internal_RaycastTest = 0x2531390;
		constexpr auto Internal_Raycast = 0x2531470;
		constexpr auto Internal_RaycastNonAlloc = 0x25312b0;
		constexpr auto Query_CapsuleCast = 0x2531ba0;
		constexpr auto Internal_CapsuleCast = 0x2531090;
		constexpr auto CapsuleCast = 0x32ce10;
		constexpr auto Internal_CapsuleCastNonAlloc = 0x2530ff0;
		constexpr auto OverlapCapsuleNonAlloc_Internal = 0x25318c0;
		constexpr auto OverlapCapsule = 0x32cff0;
		constexpr auto Query_SphereCast = 0x2531cb0;
		constexpr auto Internal_SphereCast = 0x25315e0;
		constexpr auto SphereCast = 0x32d280;
		constexpr auto Internal_SphereCastNonAlloc = 0x2531550;
		constexpr auto OverlapSphereNonAlloc_Internal = 0x25319b0;
		constexpr auto OverlapSphere = 0x32d090;
		constexpr auto Query_BoxCast = 0x2531a90;
		constexpr auto Internal_BoxCast = 0x2530dc0;
		constexpr auto BoxCast = 0x32cc20;
		constexpr auto OverlapBoxNonAlloc_Internal = 0x25317d0;
		constexpr auto OverlapBox = 0x32cf40;
		constexpr auto Internal_RaycastTest_Injected = 0x2531320;
		constexpr auto Internal_Raycast_Injected = 0x2531400;
		constexpr auto Internal_RaycastNonAlloc_Injected = 0x2531240;
		constexpr auto Query_CapsuleCast_Injected = 0x2531b30;
		constexpr auto Internal_CapsuleCastNonAlloc_Injected = 0x2530f80;
		constexpr auto OverlapCapsuleNonAlloc_Internal_Injected = 0x2531850;
		constexpr auto Query_SphereCast_Injected = 0x2531c40;
		constexpr auto Internal_SphereCastNonAlloc_Injected = 0x25314e0;
		constexpr auto OverlapSphereNonAlloc_Internal_Injected = 0x2531940;
		constexpr auto Query_BoxCast_Injected = 0x2531a20;
		constexpr auto OverlapBoxNonAlloc_Internal_Injected = 0x2531760;
	};

	namespace UnityEngine_GameObjectEx {

		constexpr auto ToBaseEntity = 0x74f040;
		constexpr auto IsOnLayer = 0x74eef0;
		constexpr auto GetEntityFromRegistry = 0x74edc0;
		constexpr auto GetEntityFromComponent = 0x74ecc0;
		constexpr auto SetHierarchyGroup = 0x74ef80;
	};

	namespace BaseHelicopter {
		constexpr auto weakspots = 0x240;
		constexpr auto rotorPivot = 0x248;
		constexpr auto mainRotor = 0x250;
		constexpr auto mainRotor_blades = 0x258;
		constexpr auto mainRotor_blur = 0x260;
		constexpr auto tailRotor = 0x268;
		constexpr auto tailRotor_blades = 0x270;
		constexpr auto tailRotor_blur = 0x278;
		constexpr auto rocket_tube_left = 0x280;
		constexpr auto rocket_tube_right = 0x288;
		constexpr auto left_gun_yaw = 0x290;
		constexpr auto left_gun_pitch = 0x298;
		constexpr auto left_gun_muzzle = 0x2a0;
		constexpr auto right_gun_yaw = 0x2a8;
		constexpr auto right_gun_pitch = 0x2b0;
		constexpr auto right_gun_muzzle = 0x2b8;
		constexpr auto spotlight_rotation = 0x2c0;
		constexpr auto rocket_fire_effect = 0x2c8;
		constexpr auto gun_fire_effect = 0x2d0;
		constexpr auto bulletEffect = 0x2d8;
		constexpr auto explosionEffect = 0x2e0;
		constexpr auto fireBall = 0x2e8;
		constexpr auto crateToDrop = 0x2f0;
		constexpr auto maxCratesToSpawn = 0x2f8;
		constexpr auto bulletSpeed = 0x2fc;
		constexpr auto bulletDamage = 0x300;
		constexpr auto servergibs = 0x308;
		constexpr auto debrisFieldMarker = 0x310;
		constexpr auto rotorWashSoundDef = 0x318;
		constexpr auto _rotorWashSound = 0x320;
		constexpr auto flightEngineSoundDef = 0x328;
		constexpr auto flightThwopsSoundDef = 0x330;
		constexpr auto flightEngineSound = 0x338;
		constexpr auto flightThwopsSound = 0x340;
		constexpr auto flightEngineGainMod = 0x348;
		constexpr auto flightThwopsGainMod = 0x350;
		constexpr auto rotorGainModSmoothing = 0x358;
		constexpr auto engineGainMin = 0x35c;
		constexpr auto engineGainMax = 0x360;
		constexpr auto thwopGainMin = 0x364;
		constexpr auto thwopGainMax = 0x368;
		constexpr auto spotlightJitterAmount = 0x36c;
		constexpr auto spotlightJitterSpeed = 0x370;
		constexpr auto nightLights = 0x378;
		constexpr auto spotlightTarget = 0x380;
		constexpr auto engineSpeed = 0x38c;
		constexpr auto targetEngineSpeed = 0x390;
		constexpr auto blur_rotationScale = 0x394;
		constexpr auto _rotorWashParticles = 0x398;
		constexpr auto myAI = 0x3a0;
		constexpr auto mapMarkerEntityPrefab = 0x3a8;
		constexpr auto client_rotorPivotIdeal = 0x3b0;
		constexpr auto nightLightsOn = 0x3c0;

		constexpr auto OnRpcMessage = 0x93f770;
		constexpr auto InitalizeWeakspots = 0x93f1d0;
		constexpr auto MaxVelocity = 0x5e67c0;
		constexpr auto InitShared = 0x93f140;
		constexpr auto Load = 0x93f4b0;
		constexpr auto ClientInit = 0x93eb60;
		constexpr auto InitializeClientsideEffects = 0x93f250;
		constexpr auto DoClientDestroy = 0x93eb80;
		constexpr auto SetLights = 0x93fbc0;
		constexpr auto Update = 0x940630;
		constexpr auto UpdateEffects = 0x93fce0;
		constexpr auto UpdateRotorWashPosition = 0x9404f0;
		constexpr auto ToggleRotorWash = 0x93fc60;
		constexpr auto UpdateRotorVisibility = 0x940460;
		constexpr auto FireGun = 0x93ec60;
		constexpr auto ctor = 0x940d90;
	};

	namespace HitInfo {
		constexpr auto Initiator = 0x10;
		constexpr auto WeaponPrefab = 0x18;
		constexpr auto Weapon = 0x20;
		constexpr auto DoHitEffects = 0x28;
		constexpr auto DoDecals = 0x29;
		constexpr auto IsPredicting = 0x2a;
		constexpr auto UseProtection = 0x2b;
		constexpr auto Predicted = 0x30;
		constexpr auto DidHit = 0x38;
		constexpr auto HitEntity = 0x40;
		constexpr auto HitBone = 0x48;
		constexpr auto HitPart = 0x4c;
		constexpr auto HitMaterial = 0x50;
		constexpr auto HitPositionWorld = 0x54;
		constexpr auto HitPositionLocal = 0x60;
		constexpr auto HitNormalWorld = 0x6c;
		constexpr auto HitNormalLocal = 0x78;
		constexpr auto PointStart = 0x84;
		constexpr auto PointEnd = 0x90;
		constexpr auto ProjectileID = 0x9c;
		constexpr auto ProjectileHits = 0xa0;
		constexpr auto ProjectileDistance = 0xa4;
		constexpr auto ProjectileIntegrity = 0xa8;
		constexpr auto ProjectileTravelTime = 0xac;
		constexpr auto ProjectileTrajectoryMismatch = 0xb0;
		constexpr auto ProjectileVelocity = 0xb4;
		constexpr auto ProjectilePrefab = 0xc0;
		constexpr auto material = 0xc8;
		constexpr auto damageProperties = 0xd0;
		constexpr auto damageTypes = 0xd8;
		constexpr auto CanGather = 0xe0;
		constexpr auto DidGather = 0xe1;
		constexpr auto gatherScale = 0xe4;

		constexpr auto IsProjectile = 0x8f7060;
		constexpr auto get_InitiatorPlayer = 0x8f78b0;
		constexpr auto get_attackNormal = 0x8f7940;
		constexpr auto get_hasDamage = 0x8f7e40;
		constexpr auto ctor = 0x8f76d0;
		constexpr auto LoadFromAttack = 0x8f7070;
		constexpr auto get_isHeadshot = 0x8f7e70;
		constexpr auto get_bonePhrase = 0x8f7ce0;
		constexpr auto get_boneName = 0x8f7b50;
		constexpr auto get_boneArea = 0x8f7a40;
		constexpr auto PositionOnRay = 0x8f7270;
		constexpr auto HitPositionOnRay = 0x8f6e30;
		constexpr auto IsNaNOrInfinity = 0x8f6e80;
	};

	namespace System_Number {

		constexpr auto NumberBufferToDecimal = 0x1881a70;
		constexpr auto NumberBufferToDouble = 0x1881a80;
		constexpr auto FormatDecimal = 0x1880f90;
		constexpr auto FormatDouble = 0x18810b0;
		constexpr auto FormatInt32 = 0x1881130;
		constexpr auto FormatUInt32 = 0x1881490;
		constexpr auto FormatInt64 = 0x18812a0;
		constexpr auto FormatUInt64 = 0x18815f0;
		constexpr auto FormatSingle = 0x1881410;
		constexpr auto HexNumberToInt32 = 0x1881750;
		constexpr auto HexNumberToInt64 = 0x18817d0;
		constexpr auto HexNumberToUInt32 = 0x1881890;
		constexpr auto HexNumberToUInt64 = 0x1881910;
		constexpr auto IsWhite = 0x18819a0;
		constexpr auto NumberToInt32 = 0x1881a90;
		constexpr auto NumberToInt64 = 0x1881af0;
		constexpr auto NumberToUInt32 = 0x1881b70;
		constexpr auto NumberToUInt64 = 0x1881bd0;
		constexpr auto MatchChars = 0x1881a00;
		constexpr auto ParseDecimal = 0x1881c40;
		constexpr auto ParseDouble = 0x1881db0;
		constexpr auto ParseInt32 = 0x1882060;
		constexpr auto ParseInt64 = 0x18822b0;
		constexpr auto ParseNumber = 0x1882520;
		constexpr auto ParseSingle = 0x1883010;
		constexpr auto ParseUInt32 = 0x1883330;
		constexpr auto ParseUInt64 = 0x1883570;
		constexpr auto StringToNumber = 0x18837d0;
		constexpr auto TrailingZeros = 0x1883910;
		constexpr auto TryParseDecimal = 0x1883970;
		constexpr auto TryParseDouble = 0x1883af0;
		constexpr auto TryParseInt32 = 0x1883c70;
		constexpr auto TryParseInt64 = 0x1883eb0;
		constexpr auto TryParseSingle = 0x1884080;
		constexpr auto TryParseUInt32 = 0x1884230;
		constexpr auto TryParseUInt64 = 0x1884470;
		constexpr auto TryStringToNumber = 0x1884790;
	};

	namespace System_Globalization_NumberFormatInfo {
		constexpr auto numberGroupSizes = 0x10;
		constexpr auto currencyGroupSizes = 0x18;
		constexpr auto percentGroupSizes = 0x20;
		constexpr auto positiveSign = 0x28;
		constexpr auto negativeSign = 0x30;
		constexpr auto numberDecimalSeparator = 0x38;
		constexpr auto numberGroupSeparator = 0x40;
		constexpr auto currencyGroupSeparator = 0x48;
		constexpr auto currencyDecimalSeparator = 0x50;
		constexpr auto currencySymbol = 0x58;
		constexpr auto ansiCurrencySymbol = 0x60;
		constexpr auto nanSymbol = 0x68;
		constexpr auto positiveInfinitySymbol = 0x70;
		constexpr auto negativeInfinitySymbol = 0x78;
		constexpr auto percentDecimalSeparator = 0x80;
		constexpr auto percentGroupSeparator = 0x88;
		constexpr auto percentSymbol = 0x90;
		constexpr auto perMilleSymbol = 0x98;
		constexpr auto nativeDigits = 0xa0;
		constexpr auto m_dataItem = 0xa8;
		constexpr auto numberDecimalDigits = 0xac;
		constexpr auto currencyDecimalDigits = 0xb0;
		constexpr auto currencyPositivePattern = 0xb4;
		constexpr auto currencyNegativePattern = 0xb8;
		constexpr auto numberNegativePattern = 0xbc;
		constexpr auto percentPositivePattern = 0xc0;
		constexpr auto percentNegativePattern = 0xc4;
		constexpr auto percentDecimalDigits = 0xc8;
		constexpr auto digitSubstitution = 0xcc;
		constexpr auto isReadOnly = 0xd0;
		constexpr auto m_useUserOverride = 0xd1;
		constexpr auto m_isInvariant = 0xd2;
		constexpr auto validForParseAsNumber = 0xd3;
		constexpr auto validForParseAsCurrency = 0xd4;

		constexpr auto ctor = 0x1523c20;
		constexpr auto OnSerializing = 0x1523280;
		constexpr auto OnDeserializing = 0x45e1d0;
		constexpr auto OnDeserialized = 0x45e1d0;
		constexpr auto get_InvariantInfo = 0x1523db0;
		constexpr auto GetInstance = 0x1523000;
		constexpr auto Clone = 0x1522f00;
		constexpr auto get_CurrencyDecimalDigits = 0x3ed610;
		constexpr auto get_CurrencyDecimalSeparator = 0x6048d0;
		constexpr auto get_IsReadOnly = 0xc8a7d0;
		constexpr auto get_CurrencyGroupSizes = 0x1523c30;
		constexpr auto get_NumberGroupSizes = 0x1523ec0;
		constexpr auto get_PercentGroupSizes = 0x1523f40;
		constexpr auto get_CurrencyGroupSeparator = 0x888870;
		constexpr auto get_CurrencySymbol = 0x6048c0;
		constexpr auto get_CurrentInfo = 0x1523cb0;
		constexpr auto get_NaNSymbol = 0x656990;
		constexpr auto get_CurrencyNegativePattern = 0x12f9440;
		constexpr auto get_NumberNegativePattern = 0x12f9430;
		constexpr auto get_PercentPositivePattern = 0x1321a70;
		constexpr auto get_PercentNegativePattern = 0xbb5e40;
		constexpr auto get_NegativeInfinitySymbol = 0x64cce0;
		constexpr auto get_NegativeSign = 0x5fd5b0;
		constexpr auto get_NumberDecimalDigits = 0x94c0e0;
		constexpr auto get_NumberDecimalSeparator = 0x61f450;
		constexpr auto get_NumberGroupSeparator = 0x617b50;
		constexpr auto get_CurrencyPositivePattern = 0x94c0d0;
		constexpr auto get_PositiveInfinitySymbol = 0x802a10;
		constexpr auto get_PositiveSign = 0x7518e0;
		constexpr auto get_PercentDecimalDigits = 0xbb5e60;
		constexpr auto get_PercentDecimalSeparator = 0x953ae0;
		constexpr auto get_PercentGroupSeparator = 0x953ab0;
		constexpr auto get_PercentSymbol = 0x648840;
		constexpr auto get_PerMilleSymbol = 0x80f1f0;
		constexpr auto GetFormat = 0x1522f70;
		constexpr auto ReadOnly = 0x1523310;
		constexpr auto ValidateParseStyleInteger = 0x1523490;
		constexpr auto ValidateParseStyleFloatingPoint = 0x15233c0;
	};

	namespace UnityEngine_GL {

		constexpr auto Vertex3 = 0x1a6d150;
		constexpr auto Vertex = 0x1a6d1b0;
		constexpr auto TexCoord3 = 0x1a6d0f0;
		constexpr auto TexCoord2 = 0x1a6d0a0;
		constexpr auto MultiTexCoord3 = 0x1a6cfd0;
		constexpr auto MultiTexCoord2 = 0x1a6cf70;
		constexpr auto ImmediateColor = 0x1a6ccb0;
		constexpr auto Color = 0x1a6c980;
		constexpr auto get_sRGBWrite = 0x1a6d210;
		constexpr auto set_sRGBWrite = 0x1a6d240;
		constexpr auto Flush = 0x1a6ca10;
		constexpr auto MultMatrix = 0x1a6cf30;
		constexpr auto PushMatrix = 0x1a6d070;
		constexpr auto PopMatrix = 0x1a6d040;
		constexpr auto LoadIdentity = 0x1a6cde0;
		constexpr auto LoadOrtho = 0x1a6ce10;
		constexpr auto LoadPixelMatrix = 0x1a6ce40;
		constexpr auto LoadProjectionMatrix = 0x1a6ceb0;
		constexpr auto GetGPUProjectionMatrix = 0x1a6cc40;
		constexpr auto GLLoadPixelMatrixScript = 0x1a6cb60;
		constexpr auto GLIssuePluginEvent = 0x1a6cb20;
		constexpr auto IssuePluginEvent = 0x1a6cd30;
		constexpr auto Begin = 0x1a6c890;
		constexpr auto End = 0x1a6c9e0;
		constexpr auto GLClear = 0x1a6cab0;
		constexpr auto Clear = 0x1a6c920;
		constexpr auto ClearWithSkybox = 0x1a6c8d0;
		constexpr auto MultMatrix_Injected = 0x1a6cef0;
		constexpr auto LoadProjectionMatrix_Injected = 0x1a6ce70;
		constexpr auto GetGPUProjectionMatrix_Injected = 0x1a6cbe0;
		constexpr auto GLClear_Injected = 0x1a6ca40;
	};

	namespace UnityEngine_Material {

		constexpr auto CreateWithShader = 0x1b635d0;
		constexpr auto CreateWithMaterial = 0x1b63580;
		constexpr auto CreateWithString = 0x1b63620;
		constexpr auto ctor = 0x1b64b80;
		constexpr auto get_shader = 0x1b64e40;
		constexpr auto set_shader = 0x1b64fd0;
		constexpr auto get_color = 0x1b64c10;
		constexpr auto set_color = 0x1b64e80;
		constexpr auto get_mainTexture = 0x1b64d20;
		constexpr auto GetFirstPropertyNameIdByAttribute = 0x1b638f0;
		constexpr auto HasProperty = 0x1b63e00;
		constexpr auto get_renderQueue = 0x1b64e00;
		constexpr auto set_renderQueue = 0x1b64f90;
		constexpr auto EnableKeyword = 0x1b636b0;
		constexpr auto DisableKeyword = 0x1b63660;
		constexpr auto IsKeywordEnabled = 0x1b63e40;
		constexpr auto get_enableInstancing = 0x1b64ce0;
		constexpr auto set_enableInstancing = 0x1b64f40;
		constexpr auto get_passCount = 0x1b64dc0;
		constexpr auto GetShaderPassEnabled = 0x1b63a40;
		constexpr auto GetPassName = 0x1b639c0;
		constexpr auto FindPass = 0x1b63700;
		constexpr auto SetOverrideTag = 0x1b645d0;
		constexpr auto GetTagImpl = 0x1b63a90;
		constexpr auto GetTag = 0x1b63b90;
		constexpr auto SetPass = 0x1b64630;
		constexpr auto CopyPropertiesFromMaterial = 0x1b63530;
		constexpr auto GetShaderKeywords = 0x1b63a00;
		constexpr auto SetShaderKeywords = 0x1b64670;
		constexpr auto get_shaderKeywords = 0x1b63a00;
		constexpr auto set_shaderKeywords = 0x1b64670;
		constexpr auto SetFloatImpl = 0x1b64320;
		constexpr auto SetColorImpl = 0x1b63f90;
		constexpr auto SetMatrixImpl = 0x1b64490;
		constexpr auto SetTextureImpl = 0x1b646c0;
		constexpr auto SetBufferImpl = 0x1b63e90;
		constexpr auto GetFloatImpl = 0x1b63930;
		constexpr auto GetColorImpl = 0x1b637a0;
		constexpr auto GetTextureImpl = 0x1b63c00;
		constexpr auto SetFloatArrayImpl = 0x1b64090;
		constexpr auto SetTextureOffsetImpl = 0x1b64760;
		constexpr auto SetTextureScaleImpl = 0x1b64860;
		constexpr auto SetFloatArray = 0x1b641f0;
		constexpr auto SetFloat = 0x1b64370;
		constexpr auto SetInt = 0x1b643d0;
		constexpr auto SetColor = 0x1b64030;
		constexpr auto SetVector = 0x1b64970;
		constexpr auto SetMatrix = 0x1b64550;
		constexpr auto SetTexture = 0x1b64910;
		constexpr auto SetBuffer = 0x1b63ee0;
		constexpr auto GetFloat = 0x1b63970;
		constexpr auto GetColor = 0x1b63870;
		constexpr auto GetVector = 0x1b63c90;
		constexpr auto GetTexture = 0x1b63c40;
		constexpr auto SetTextureOffset = 0x1b647b0;
		constexpr auto SetTextureScale = 0x1b648b0;
		constexpr auto SetColorImpl_Injected = 0x1b63f40;
		constexpr auto SetMatrixImpl_Injected = 0x1b64440;
		constexpr auto GetColorImpl_Injected = 0x1b63750;
		constexpr auto SetTextureOffsetImpl_Injected = 0x1b64710;
		constexpr auto SetTextureScaleImpl_Injected = 0x1b64810;
	};

	namespace UnityEngine_Screen {

		constexpr auto get_width = 0x1c1fec0;
		constexpr auto get_height = 0x1c1fe60;
		constexpr auto get_dpi = 0x1c1fe00;
		constexpr auto get_currentResolution = 0x1c1fdc0;
		constexpr auto get_fullScreen = 0x1c1fe30;
		constexpr auto SetResolution = 0x1c1fcc0;
		constexpr auto get_resolutions = 0x1c1fe90;
		constexpr auto get_currentResolution_Injected = 0x1c1fd80;
	};

	namespace TOD_AtmosphereParameters {
		constexpr auto RayleighMultiplier = 0x10;
		constexpr auto MieMultiplier = 0x14;
		constexpr auto Brightness = 0x18;
		constexpr auto Contrast = 0x1c;
		constexpr auto Directionality = 0x20;
		constexpr auto Fogginess = 0x24;

		constexpr auto ctor = 0x131c570;
	};

	namespace TOD_MoonParameters {
		constexpr auto MeshSize = 0x10;
		constexpr auto MeshBrightness = 0x14;
		constexpr auto MeshContrast = 0x18;
		constexpr auto HaloSize = 0x1c;
		constexpr auto HaloBrightness = 0x20;
		constexpr auto Position = 0x24;

		constexpr auto ctor = 0x13202d0;
	};

	namespace TOD_CloudParameters {
		constexpr auto Size = 0x10;
		constexpr auto Opacity = 0x14;
		constexpr auto Coverage = 0x18;
		constexpr auto Sharpness = 0x1c;
		constexpr auto Coloring = 0x20;
		constexpr auto Attenuation = 0x24;
		constexpr auto Saturation = 0x28;
		constexpr auto Scattering = 0x2c;
		constexpr auto Brightness = 0x30;

		constexpr auto ctor = 0x131da00;
	};

	namespace TOD_NightParameters {
		constexpr auto MoonColor = 0x10;
		constexpr auto LightColor = 0x18;
		constexpr auto RayColor = 0x20;
		constexpr auto SkyColor = 0x28;
		constexpr auto CloudColor = 0x30;
		constexpr auto FogColor = 0x38;
		constexpr auto AmbientColor = 0x40;
		constexpr auto LightIntensity = 0x48;
		constexpr auto ShadowStrength = 0x4c;
		constexpr auto AmbientMultiplier = 0x50;
		constexpr auto ReflectionMultiplier = 0x54;

		constexpr auto ctor = 0x1320310;
	};

}

namespace O {
	namespace BaseNetworkable {
		constexpr auto JustCreatedk__BackingField = 0x18;
		constexpr auto entityDestroy = 0x20;
		constexpr auto postNetworkUpdateComponents = 0x28;
		constexpr auto parentEntity = 0x30;
		constexpr auto children = 0x40;
		constexpr auto canTriggerParent = 0x48;
		constexpr auto prefabID = 0x4c;
		constexpr auto globalBroadcast = 0x50;
		constexpr auto net = 0x58;
		constexpr auto IsDestroyedk__BackingField = 0x60;
		constexpr auto _prefabName = 0x68;
		constexpr auto _prefabNameWithoutExtension = 0x70;

		constexpr auto get_JustCreated = 0x8f6b90;
		constexpr auto set_JustCreated = 0x8f6d80;
		constexpr auto ClientSpawn = 0x8f53f0;
		constexpr auto ClientOnEnable = 0x8f5370;
		constexpr auto ClientInit = 0x8f5210;
		constexpr auto OnNetworkUpdate = 0x8f66b0;
		constexpr auto PreNetworkUpdate = 0x477ed0;
		constexpr auto PostNetworkUpdate = 0x477ed0;
		constexpr auto ShouldDestroyWithGroup = 0x58eed0;
		constexpr auto ShouldDestroyImmediately = 0x59bd20;
		constexpr auto NetworkDestroy = 0x8f6270;
		constexpr auto DoClientDestroy = 0x8f57c0;
		constexpr auto DoNetworkDestroy = 0x477ed0;
		constexpr auto BroadcastOnPostNetworkUpdate = 0x8f4ff0;
		constexpr auto PostProcess = 0x8f6830;
		constexpr auto GetParentEntity = 0x8f5ba0;
		constexpr auto HasParent = 0x8f5bb0;
		constexpr auto AddChild = 0x8f4f60;
		constexpr auto OnChildAdded = 0x477ed0;
		constexpr auto RemoveChild = 0x8f68b0;
		constexpr auto OnChildRemoved = 0x477ed0;
		constexpr auto get_gameManager = 0x8f6cb0;
		constexpr auto get_prefabAttribute = 0x8f6d10;
		constexpr auto get_IsDestroyed = 0x8f6b80;
		constexpr auto set_IsDestroyed = 0x8f6d70;
		constexpr auto get_PrefabName = 0x8f6ba0;
		constexpr auto get_ShortPrefabName = 0x8f6c20;
		constexpr auto GetNetworkPosition = 0x8f5b10;
		constexpr auto GetNetworkRotation = 0x8f5b60;
		constexpr auto InvokeString = 0x8f5bc0;
		constexpr auto LookupPrefab = 0x8f61d0;
		constexpr auto EqualNetID = 0x8f5a90;
		constexpr auto ResetState = 0x8f6920;
		constexpr auto InitShared = 0x477ed0;
		constexpr auto PreInitShared = 0x477ed0;
		constexpr auto PostInitShared = 0x477ed0;
		constexpr auto DestroyShared = 0x477ed0;
		constexpr auto OnNetworkGroupEnter = 0x477ed0;
		constexpr auto OnNetworkGroupLeave = 0x477ed0;
		constexpr auto OnNetworkGroupChange = 0x8f6570;
		constexpr auto OnNetworkSubscribersEnter = 0x477ed0;
		constexpr auto OnNetworkSubscribersLeave = 0x477ed0;
		constexpr auto EntityDestroy = 0x8f59a0;
		constexpr auto DoEntityDestroy = 0x8f5840;
		constexpr auto SpawnShared = 0x8f6970;
		constexpr auto Load = 0x8f5e10;
		constexpr auto get_isServer = 0x59bd20;
		constexpr auto get_isClient = 0x58eed0;
		constexpr auto OnRpcMessage = 0x59bd20;
		constexpr auto ctor = 0x8f6ae0;
		constexpr auto cctor = 0x8f6a80;
	};

	namespace BasePlayer {
		constexpr auto __menuOption_Climb = 0x240;
		constexpr auto __menuOption_Drink = 0x298;
		constexpr auto __menuOption_InviteToTeam = 0x2f0;
		constexpr auto __menuOption_Menu_AssistPlayer = 0x348;
		constexpr auto __menuOption_Menu_LootPlayer = 0x3a0;
		constexpr auto __menuOption_Promote = 0x3f8;
		constexpr auto __menuOption_SaltWater = 0x450;
		constexpr auto lastOpenSoundPlay = 0x4a8;
		constexpr auto currentViewMode = 0x4ac;
		constexpr auto selectedViewMode = 0x4b0;
		constexpr auto lastRevivePoint = 0x4b4;
		constexpr auto lastReviveDirection = 0x4c0;
		constexpr auto playerModel = 0x4d0;
		constexpr auto Frozen = 0x4d8;
		constexpr auto voiceRecorder = 0x4e0;
		constexpr auto voiceSpeaker = 0x4e8;
		constexpr auto input = 0x4f0;
		constexpr auto movement = 0x4f8;
		constexpr auto collision = 0x500;
		constexpr auto emptyState = 0x8;
		constexpr auto _lookingAt = 0x508;
		constexpr auto _lookingAtEntity = 0x510;
		constexpr auto _lookingAtCollider = 0x518;
		constexpr auto lookingAtPointk__BackingField = 0x520;
		constexpr auto wakeTime = 0x52c;
		constexpr auto needsClothesRebuild = 0x530;
		constexpr auto wasSleeping = 0x531;
		constexpr auto wokeUpBefore = 0x532;
		constexpr auto wasDead = 0x533;
		constexpr auto lastClothesHash = 0x534;
		constexpr auto visiblePlayerList = 0x10;
		constexpr auto craftMode = 0x18;
		constexpr auto IsWearingDiveGogglesk__BackingField = 0x538;
		constexpr auto GestureViewModel = 0x540;
		constexpr auto timeSinceUpdatedLookingAt = 0x548;
		constexpr auto nextTopologyTestTime = 0x54c;
		constexpr auto usePressTime = 0x550;
		constexpr auto useHeldTime = 0x554;
		constexpr auto lookingAtTest = 0x558;
		constexpr auto lastDeathTimeClient = 0x1c;
		constexpr auto cachedWaterDrinkingPoint = 0x560;
		constexpr auto gestureList = 0x570;
		constexpr auto gestureFinishedTime = 0x578;
		constexpr auto blockHeldInputTimer = 0x57c;
		constexpr auto currentGesture = 0x580;
		constexpr auto disabledHeldEntity = 0x588;
		constexpr auto nextGestureMenuOpenTime = 0x590;
		constexpr auto lastGestureCancel = 0x594;
		constexpr auto client_lastHelloTime = 0x598;
		constexpr auto currentTeam = 0x5a0;
		constexpr auto MaxTeamSizeToast = 0x20;
		constexpr auto clientTeam = 0x5a8;
		constexpr auto lastReceivedTeamTime = 0x5b0;
		constexpr auto lastPresenceTeamId = 0x5b8;
		constexpr auto lastPresenceTeamSize = 0x5c0;
		constexpr auto playerGroupKey = 0x5c8;
		constexpr auto playerGroupSizeKey = 0x5d0;
		constexpr auto clActiveItem = 0x5d8;
		constexpr auto ClientCurrentMapNote = 0x5e0;
		constexpr auto ClientCurrentDeathNote = 0x5e8;
		constexpr auto missions = 0x5f0;
		constexpr auto _activeMission = 0x5f8;
		constexpr auto modelState = 0x600;
		constexpr auto mounted = 0x608;
		constexpr auto nextSeatSwapTime = 0x618;
		constexpr auto PetEntity = 0x620;
		constexpr auto lastPetCommandIssuedTime = 0x628;
		constexpr auto PetPrefabID = 0x62c;
		constexpr auto PetID = 0x630;
		constexpr auto PetWheelHasBeenOpened = 0x28;
		constexpr auto cachedBuildingPrivilegeTime = 0x634;
		constexpr auto cachedBuildingPrivilege = 0x638;
		constexpr auto maxProjectileID = 0x640;
		constexpr auto lastUpdateTime = 0x644;
		constexpr auto cachedThreatLevel = 0x648;
		constexpr auto serverTickRate = 0x64c;
		constexpr auto clientTickRate = 0x650;
		constexpr auto serverTickInterval = 0x654;
		constexpr auto clientTickInterval = 0x658;
		constexpr auto lastSentTickTime = 0x65c;
		constexpr auto lastTickStopwatch = 0x660;
		constexpr auto lastSentTick = 0x668;
		constexpr auto nextVisThink = 0x670;
		constexpr auto lastTimeSeen = 0x674;
		constexpr auto debugPrevVisible = 0x678;
		constexpr auto fallDamageEffect = 0x680;
		constexpr auto drownEffect = 0x688;
		constexpr auto playerFlags = 0x690;
		constexpr auto eyes = 0x698;
		constexpr auto inventory = 0x6a0;
		constexpr auto blueprints = 0x6a8;
		constexpr auto metabolism = 0x6b0;
		constexpr auto modifiers = 0x6b8;
		constexpr auto playerCollider = 0x6c0;
		constexpr auto Belt = 0x6c8;
		constexpr auto playerRigidbody = 0x6d0;
		constexpr auto userID = 0x6d8;
		constexpr auto UserIDString = 0x6e0;
		constexpr auto gamemodeteam = 0x6e8;
		constexpr auto reputation = 0x6ec;
		constexpr auto _displayName = 0x6f0;
		constexpr auto _lastSetName = 0x6f8;
		constexpr auto playerColliderStanding = 0x700;
		constexpr auto playerColliderDucked = 0x714;
		constexpr auto playerColliderCrawling = 0x728;
		constexpr auto playerColliderLyingDown = 0x73c;
		constexpr auto cachedProtection = 0x750;
		constexpr auto oldCameraFix = 0x29;
		constexpr auto lastHeadshotSoundTime = 0x758;
		constexpr auto nextColliderRefreshTime = 0x75c;
		constexpr auto clothingBlocksAiming = 0x760;
		constexpr auto clothingMoveSpeedReduction = 0x764;
		constexpr auto clothingWaterSpeedBonus = 0x768;
		constexpr auto clothingAccuracyBonus = 0x76c;
		constexpr auto equippingBlocked = 0x770;
		constexpr auto eggVision = 0x774;
		constexpr auto activeTelephone = 0x778;
		constexpr auto designingAIEntity = 0x780;

		constexpr auto GetMenuOptions = 0x59ef70;
		constexpr auto get_HasMenuOptions = 0x5ba740;
		constexpr auto OnRpcMessage = 0x5a7330;
		constexpr auto CanBeLooted = 0x594ad0;
		constexpr auto get_LootPanelTitle = 0x5bac80;
		constexpr auto Menu_LootPlayer = 0x5a6190;
		constexpr auto Menu_LootPlayer_ShowIf = 0x5a6170;
		constexpr auto RPC_OpenLootPanel = 0x5b2610;
		constexpr auto PlayOpenSound = 0x5b0900;
		constexpr auto InFirstPersonMode = 0x5a1ee0;
		constexpr auto UpdateViewMode = 0x5b89e0;
		constexpr auto get_idealViewMode = 0x5bae90;
		constexpr auto get_shouldDrawBody = 0x5bb3b0;
		constexpr auto OnViewModeChanged = 0x5b03c0;
		constexpr auto ModifyCamera = 0x5a6200;
		constexpr auto Menu_AssistPlayer = 0x5a6130;
		constexpr auto Menu_AssistPlayer_TimeStart = 0x5a60f0;
		constexpr auto Menu_AssistPlayer_ShowIf = 0x5a5e80;
		constexpr auto get_lookingAt = 0x5bb320;
		constexpr auto get_lookingAtEntity = 0x5bb270;
		constexpr auto get_lookingAtCollider = 0x5bb1e0;
		constexpr auto get_lookingAtPoint = 0x5bb300;
		constexpr auto set_lookingAtPoint = 0x5bb7a0;
		constexpr auto GetExtrapolationTime = 0x59e2b0;
		constexpr auto GetLocalVelocityClient = 0x59ed70;
		constexpr auto ClientInit = 0x5965d0;
		constexpr auto CreatePlayerModel = 0x59b340;
		constexpr auto CreatePlayerCollision = 0x59b190;
		constexpr auto CreatePlayerMovement = 0x59b860;
		constexpr auto InitLocalPlayer = 0x5a2020;
		constexpr auto InitRemotePlayer = 0x5a2300;
		constexpr auto HasLocalControls = 0x5a1590;
		constexpr auto SetNetworkPosition = 0x5b5350;
		constexpr auto SetNetworkRotation = 0x5b5400;
		constexpr auto DoClientDestroy = 0x59bd30;
		constexpr auto PostNetworkUpdate = 0x5b1130;
		constexpr auto OnFirstWakeUp = 0x5a6c50;
		constexpr auto get_TimeAwake = 0x5bad00;
		constexpr auto CL_ClothingChanged = 0x5940d0;
		constexpr auto ForceRebuild = 0x59d560;
		constexpr auto RebuildWorldModel = 0x5b2ab0;
		constexpr auto SetDefaultFootstepEffects = 0x5b4b10;
		constexpr auto OnSignal = 0x5afe40;
		constexpr auto FindBone = 0x59ca30;
		constexpr auto GetBones = 0x59d7b0;
		constexpr auto ShouldLerp = 0x5b5c10;
		constexpr auto get_VisiblePlayerList = 0x5bad60;
		constexpr auto ClearVisibility = 0x596100;
		constexpr auto RegisterForVisibility = 0x5b3290;
		constexpr auto UnregisterFromVisibility = 0x5b6760;
		constexpr auto FindByID_Clientside = 0x59cb30;
		constexpr auto Find_Clientside = 0x59cd00;
		constexpr auto GetRandomFloatBasedOnUserID = 0x5a0db0;
		constexpr auto DisplayHealthInfo = 0x59bd20;
		constexpr auto ShouldDestroyWithGroup = 0x5b5be0;
		constexpr auto SetInheritedVelocity = 0x5b4fd0;
		constexpr auto TogglePlayerMovement = 0x5b6530;
		constexpr auto GetPerformanceReport = 0x5a0af0;
		constexpr auto GetPerformanceReport_Frametime = 0x5a0670;
		constexpr auto OnBecameRagdoll = 0x5a6680;
		constexpr auto OnVoiceData = 0x5b08c0;
		constexpr auto RecieveAchievement = 0x5b2e20;
		constexpr auto CraftMode = 0x59af20;
		constexpr auto StartDesigningAI = 0x5b5f60;
		constexpr auto OnDebugAIEventTriggeredStateChange = 0x5a6a00;
		constexpr auto ClientOnEnable = 0x597580;
		constexpr auto Client_OnRepairFailedResources = 0x599a00;
		constexpr auto TakeDamageHit = 0x5b6300;
		constexpr auto AdminReceivedUGC = 0x592520;
		constexpr auto AdminReceivedPatternFirework = 0x592460;
		constexpr auto get_IsWearingDiveGoggles = 0x5bac70;
		constexpr auto set_IsWearingDiveGoggles = 0x5bb590;
		constexpr auto UpdateClothesIfNeeded = 0x5b68b0;
		constexpr auto MakeVisible = 0x5a5b80;
		constexpr auto ClientUpdate_Sleeping = 0x598a40;
		constexpr auto ClientUpdate = 0x598e70;
		constexpr auto RebuildClothingItems = 0x5b2890;
		constexpr auto UpdateClothingItems = 0x5b6da0;
		constexpr auto UpdateHolsterOffsets = 0x5b74d0;
		constexpr auto PostLateClientCycle = 0x5b0fb0;
		constexpr auto IsLocalPlayer = 0x5a3d10;
		constexpr auto ClientUpdateLocalPlayer = 0x5976e0;
		constexpr auto UpdateTopologyStats = 0x5b8880;
		constexpr auto ClientTick = 0x597630;
		constexpr auto DoMovement = 0x59c020;
		constexpr auto MountableOverrideViewAngles = 0x5a62f0;
		constexpr auto BlockSprint = 0x5934d0;
		constexpr auto BlockJump = 0x593430;
		constexpr auto ClientInput = 0x596ad0;
		constexpr auto UseAction = 0x5b8d40;
		constexpr auto GetInteractionEntity = 0x59e8d0;
		constexpr auto QuickUse = 0x5b2470;
		constexpr auto LongUse = 0x5a5ac0;
		constexpr auto UseStop = 0x5b9010;
		constexpr auto UpdateLookingAt = 0x5b7660;
		constexpr auto ResetLookingAt = 0x5b36e0;
		constexpr auto SetLookingAt = 0x5b5160;
		constexpr auto CheckLookingAtVisible = 0x595900;
		constexpr auto FindVehicleParentFor = 0x59cbc0;
		constexpr auto OnDied = 0x5a6b70;
		constexpr auto OnRespawnInformation = 0x5a6f90;
		constexpr auto RequestRespawnUpdates = 0x5b3590;
		constexpr auto OnLand = 0x5a6da0;
		constexpr auto StartLoading = 0x5b61e0;
		constexpr auto StartLoading_Quick = 0x5b60f0;
		constexpr auto FinishLoading = 0x59d000;
		constexpr auto FullBlack_FadeIn = 0x59d640;
		constexpr auto FullBlack_FadeOut = 0x477ed0;
		constexpr auto FinishedLoadingRoutine = 0x59d230;
		constexpr auto DirectionalDamage = 0x59bb00;
		constexpr auto UnlockedBlueprint = 0x5b66f0;
		constexpr auto CheckForRespawnInfo = 0x595890;
		constexpr auto UpdateRichPresenceState = 0x5b85e0;
		constexpr auto HandleCompanionPairingResult = 0x5a1090;
		constexpr auto UpdateWaterDrinkingPoint = 0x5b8a20;
		constexpr auto GetWaterDrinkingPoint = 0x5a1070;
		constexpr auto Drink = 0x59c2c0;
		constexpr auto Drink_ShowIf = 0x59c0e0;
		constexpr auto SaltWater = 0x477ed0;
		constexpr auto SaltWater_ShowIf = 0x5b3860;
		constexpr auto Climb = 0x59a6d0;
		constexpr auto Climb_ShowIf = 0x59a430;
		constexpr auto HasPlayerFlag = 0x5a1600;
		constexpr auto get_IsReceivingSnapshot = 0x5bac60;
		constexpr auto get_IsAdmin = 0x5bab80;
		constexpr auto get_IsDeveloper = 0x5bac30;
		constexpr auto get_IsAiming = 0x5bab90;
		constexpr auto get_IsFlying = 0x5bac40;
		constexpr auto get_IsConnected = 0x5baba0;
		constexpr auto get_InGesture = 0x5baad0;
		constexpr auto get_CurrentGestureBlocksMovement = 0x5ba620;
		constexpr auto get_CurrentGestureIsDance = 0x5ba660;
		constexpr auto get_CurrentGestureIsFullBody = 0x5ba6a0;
		constexpr auto get_InGestureCancelCooldown = 0x5baaa0;
		constexpr auto SetGestureMenuOpen = 0x5b4bd0;
		constexpr auto RequestStartGesture = 0x5b3630;
		constexpr auto Client_StartGesture = 0x599f60;
		constexpr auto ProcessDanceAction = 0x5b1820;
		constexpr auto SayingHello = 0x5b3bb0;
		constexpr auto ProcessGestureStart = 0x5b1d30;
		constexpr auto EndGesture = 0x59c5e0;
		constexpr auto EndLocalGesture = 0x59c680;
		constexpr auto EndGestureShared = 0x59c470;
		constexpr auto HideHeldEntity = 0x5a1d70;
		constexpr auto CancelGesture = 0x5955b0;
		constexpr auto RemoteGestureCancel = 0x5b3380;
		constexpr auto CancelGestureInput = 0x595190;
		constexpr auto ClearGestureCooldown = 0x595fb0;
		constexpr auto ConVarRequestStartGesture = 0x59acb0;
		constexpr auto Client_RemoteCancelledGesture = 0x599f10;
		constexpr auto IsGestureBlocked = 0x5a3550;
		constexpr auto get_clientTeamLifetime = 0x5badd0;
		constexpr auto CLIENT_ReceiveTeamInfo = 0x593ae0;
		constexpr auto UpdateSteamGroup = 0x5b8630;
		constexpr auto ClearSteamGroup = 0x595fe0;
		constexpr auto CLIENT_ClearTeam = 0x593570;
		constexpr auto CLIENT_PendingInvite = 0x593710;
		constexpr auto InviteToTeam = 0x5a2370;
		constexpr auto Promote = 0x5b2300;
		constexpr auto Menu_Promote_Start = 0x477ed0;
		constexpr auto Promote_ShowIf = 0x5b1f50;
		constexpr auto LocalPlayerIsLeader = 0x5a55d0;
		constexpr auto Invite_ShowIf = 0x5a2890;
		constexpr auto GetHeldEntity = 0x59e3a0;
		constexpr auto GetHeldItem = 0x59e5e0;
		constexpr auto GetHeldItemID = 0x59e590;
		constexpr auto HeldEntityViewAngles = 0x5a1b50;
		constexpr auto HeldEntityFrame = 0x5a16e0;
		constexpr auto HeldEntityInput = 0x5a18b0;
		constexpr auto HeldItemUse = 0x5a1c70;
		constexpr auto HeldEntityStart = 0x5a1a80;
		constexpr auto HeldEntityEnd = 0x5a1610;
		constexpr auto IsHostileItem = 0x5a3920;
		constexpr auto IsItemHoldRestricted = 0x5a3a80;
		constexpr auto MapInfoOnEnable = 0x5a5c30;
		constexpr auto Client_ReceiveMarkers = 0x599bd0;
		constexpr auto Client_UpdateDeathMarker = 0x59a300;
		constexpr auto Client_AddNewDeathMarker = 0x5998c0;
		constexpr auto AddPointOfInterest = 0x592380;
		constexpr auto ClearAllPointsOfInterest = 0x595e60;
		constexpr auto ClearAllMapMarkers = 0x595d00;
		constexpr auto HasAttemptedMission = 0x5a1140;
		constexpr auto CanAcceptMission = 0x594410;
		constexpr auto IsMissionActive = 0x5a3df0;
		constexpr auto HasCompletedMission = 0x5a12b0;
		constexpr auto HasFailedMission = 0x5a1420;
		constexpr auto SetActiveMission = 0x5b4af0;
		constexpr auto GetActiveMission = 0x59d7a0;
		constexpr auto HasActiveMission = 0x5a1130;
		constexpr auto LoadMissions = 0x5a4bb0;
		constexpr auto OnModelState = 0x5a6f00;
		constexpr auto OnModelStateChanged = 0x5a6e60;
		constexpr auto get_isMounted = 0x5bb0e0;
		constexpr auto get_isMountingHidingWeapon = 0x5bb110;
		constexpr auto GetMounted = 0x5a0120;
		constexpr auto GetMountedVehicle = 0x5a0090;
		constexpr auto MarkSwapSeat = 0x5a5c80;
		constexpr auto SwapSeatCooldown = 0x5b62d0;
		constexpr auto ClientUpdateMounted = 0x5984c0;
		constexpr auto CLIENT_SetPetPrefabID = 0x594000;
		constexpr auto CLIENT_SetPetPetLoadedStateIndex = 0x593e50;
		constexpr auto LinkPet = 0x5a4a60;
		constexpr auto SetPetMenuOpen = 0x5b5510;
		constexpr auto ClientIssuePetCommand = 0x597490;
		constexpr auto IsSleeping = 0x5a40d0;
		constexpr auto IsSpectating = 0x5a40e0;
		constexpr auto IsRelaxed = 0x5a4000;
		constexpr auto IsServerFalling = 0x5a40c0;
		constexpr auto GetBuildingPrivilege = 0x59dbc0;
		constexpr auto CanBuild = 0x594da0;
		constexpr auto IsBuildingBlocked = 0x5a32e0;
		constexpr auto IsBuildingAuthed = 0x5a2ea0;
		constexpr auto CanPlaceBuildingPrivilege = 0x594f30;
		constexpr auto NewProjectileID = 0x5a6380;
		constexpr auto NewProjectileSeed = 0x5a6390;
		constexpr auto SendProjectileAttack = 0x5b4840;
		constexpr auto SendProjectileRicochet = 0x5b4890;
		constexpr auto SendProjectileUpdate = 0x5b48e0;
		constexpr auto Load = 0x5a5170;
		constexpr auto SpectatedPlayerHeadshot = 0x5b5ed0;
		constexpr auto GetThreatLevel = 0x5a1050;
		constexpr auto EnsureUpdated = 0x59c7a0;
		constexpr auto SetHostileLength = 0x5b4f20;
		constexpr auto SetWeaponDrawnDuration = 0x5b5b40;
		constexpr auto ModifyInputState = 0x477ed0;
		constexpr auto ForcePositionToParentOffset = 0x59d2a0;
		constexpr auto UpdateClientTickRate = 0x5b6850;
		constexpr auto ForcePositionTo = 0x59d3d0;
		constexpr auto ForceViewAnglesTo = 0x59d570;
		constexpr auto SendVoiceData = 0x5b4930;
		constexpr auto SendClientTick = 0x5b4150;
		constexpr auto NotifyUnderwearChange = 0x5a63f0;
		constexpr auto UpdatePlayerVisibilities = 0x5b82e0;
		constexpr auto TimeSinceSeen = 0x5b6430;
		constexpr auto SetNextVisThink = 0x5b54e0;
		constexpr auto WantsVisUpdate = 0x5b9b50;
		constexpr auto IsAimingAt = 0x5a2ad0;
		constexpr auto UpdateCullingSpheres = 0x5b7200;
		constexpr auto VisUpdateUsingCulling = 0x5b9190;
		constexpr auto VisUpdateUsingRays = 0x5b92a0;
		constexpr auto LogDebugCull = 0x5a5780;
		constexpr auto OnVisibilityChanged = 0x5b05c0;
		constexpr auto VisUpdate = 0x5b96c0;
		constexpr auto VisPlayerArmed = 0x5b90d0;
		constexpr auto AnyPartVisible = 0x592830;
		constexpr auto CalcVisUpdateRate = 0x5942d0;
		constexpr auto PointSeePoint = 0x5b0ce0;
		constexpr auto IsWounded = 0x5a43c0;
		constexpr auto IsCrawling = 0x5a3390;
		constexpr auto IsIncapacitated = 0x5a3a70;
		constexpr auto ToPlayer = 0x5b6450;
		constexpr auto get_Connection = 0x5ba610;
		constexpr auto get_displayName = 0x5bae20;
		constexpr auto set_displayName = 0x5bb5a0;
		constexpr auto SanitizePlayerNameString = 0x5b3a30;
		constexpr auto IsGod = 0x5a3850;
		constexpr auto GetNetworkRotation = 0x5a01c0;
		constexpr auto CanInteract = 0x594ed0;
		constexpr auto StartHealth = 0x5b60d0;
		constexpr auto StartMaxHealth = 0x5b08f0;
		constexpr auto MaxHealth = 0x5a5cc0;
		constexpr auto MaxVelocity = 0x5a5d70;
		constexpr auto WorldSpaceBounds = 0x5ba080;
		constexpr auto GetMountVelocity = 0x59ffc0;
		constexpr auto GetInheritedProjectileVelocity = 0x59e6d0;
		constexpr auto GetInheritedThrowVelocity = 0x59e7d0;
		constexpr auto GetInheritedDropVelocity = 0x59e610;
		constexpr auto PreInitShared = 0x5b13b0;
		constexpr auto DestroyShared = 0x59ba80;
		constexpr auto InSafeZone = 0x5a1f00;
		constexpr auto LateClientCycle = 0x5a43d0;
		constexpr auto ClientCycle = 0x5962c0;
		constexpr auto GetBounds = 0x59d840;
		constexpr auto GetCenter = 0x59dc90;
		constexpr auto GetOffset = 0x5a02e0;
		constexpr auto GetSize = 0x5a0eb0;
		constexpr auto GetHeight = 0x59e380;
		constexpr auto GetRadius = 0x5a0da0;
		constexpr auto GetJumpHeight = 0x59ed60;
		constexpr auto TriggerPoint = 0x5b65f0;
		constexpr auto NoClipOffset = 0x5a63a0;
		constexpr auto NoClipRadius = 0x5a63e0;
		constexpr auto MaxDeployDistance = 0x5a5cb0;
		constexpr auto ClientUpdatePersistantData = 0x598a10;
		constexpr auto GetMinSpeed = 0x59ff90;
		constexpr auto GetMaxSpeed = 0x59ef40;
		constexpr auto GetSpeed = 0x5a0f10;
		constexpr auto OnAttacked = 0x5a6430;
		constexpr auto EnablePlayerCollider = 0x59c410;
		constexpr auto DisablePlayerCollider = 0x59bcc0;
		constexpr auto RefreshColliderSize = 0x5b2f40;
		constexpr auto SetPlayerRigidbodyState = 0x5b5b20;
		constexpr auto AddPlayerRigidbody = 0x592200;
		constexpr auto RemovePlayerRigidbody = 0x5b3460;
		constexpr auto IsEnsnared = 0x5a3460;
		constexpr auto IsAttacking = 0x5a2ca0;
		constexpr auto CanAttack = 0x594880;
		constexpr auto OnLadder = 0x5a6d00;
		constexpr auto IsSwimming = 0x5a4370;
		constexpr auto IsHeadUnderwater = 0x5a38d0;
		constexpr auto IsOnGround = 0x5a3f60;
		constexpr auto IsRunning = 0x5a4010;
		constexpr auto IsDucked = 0x5a33b0;
		constexpr auto RecentlyTeleported = 0x5b2d90;
		constexpr auto ShowToast = 0x5b5c70;
		constexpr auto ChatMessage = 0x595680;
		constexpr auto ConsoleMessage = 0x59ae60;
		constexpr auto PenetrationResistance = 0x5b08f0;
		constexpr auto ScaleDamage = 0x5b3ec0;
		constexpr auto UpdateMoveSpeedFromClothing = 0x5b7f10;
		constexpr auto UpdateProtectionFromClothing = 0x5b84c0;
		constexpr auto Categorize = 0x595650;
		constexpr auto ToString = 0x5b6460;
		constexpr auto GetDebugStatus = 0x59df20;
		constexpr auto GetItem = 0x59ecb0;
		constexpr auto get_Traits = 0x5bad40;
		constexpr auto WaterFactor = 0x5b9b70;
		constexpr auto AirFactor = 0x592740;
		constexpr auto GetOxygenTime = 0x5a0330;
		constexpr auto ShouldInheritNetworkGroup = 0x5a40e0;
		constexpr auto AnyPlayersVisibleToEntity = 0x592e70;
		constexpr auto IsStandingOnEntity = 0x5a40f0;
		constexpr auto SetActiveTelephone = 0x5b4b00;
		constexpr auto get_HasActiveTelephone = 0x5ba6e0;
		constexpr auto get_IsDesigningAI = 0x5babd0;
		constexpr auto ClearDesigningAIEntity = 0x595f90;
		constexpr auto ctor = 0x5ba460;
		constexpr auto cctor = 0x5ba310;
	};

	namespace BaseMovement {
		constexpr auto adminCheat = 0x18;
		constexpr auto adminSpeed = 0x1c;
		constexpr auto Ownerk__BackingField = 0x20;
		constexpr auto InheritedVelocityk__BackingField = 0x28;
		constexpr auto TargetMovementk__BackingField = 0x34;
		constexpr auto Runningk__BackingField = 0x40;
		constexpr auto Duckingk__BackingField = 0x44;
		constexpr auto Crawlingk__BackingField = 0x48;
		constexpr auto Groundedk__BackingField = 0x4c;
		constexpr auto lastTeleportedTime = 0x50;

		constexpr auto get_Owner = 0x5bc450;
		constexpr auto set_Owner = 0x5bc480;
		constexpr auto get_InheritedVelocity = 0x8f4bb0;
		constexpr auto set_InheritedVelocity = 0x67c3f0;
		constexpr auto get_TargetMovement = 0x8f4c40;
		constexpr auto set_TargetMovement = 0x67c3e0;
		constexpr auto get_Running = 0x5db6d0;
		constexpr auto set_Running = 0x5db6e0;
		constexpr auto get_Ducking = 0x881820;
		constexpr auto set_Ducking = 0x8f4c70;
		constexpr auto get_Crawling = 0x8f4ba0;
		constexpr auto set_Crawling = 0x8f4c60;
		constexpr auto get_Grounded = 0x67c3c0;
		constexpr auto set_Grounded = 0x67c400;
		constexpr auto get_IsRunning = 0x8f4c00;
		constexpr auto get_IsDucked = 0x8f4be0;
		constexpr auto get_IsCrawling = 0x8f4bd0;
		constexpr auto get_IsGrounded = 0x8f4bf0;
		constexpr auto CurrentVelocity = 0x8f4910;
		constexpr auto CurrentMoveSpeed = 0x6630b0;
		constexpr auto GetCollider = 0x5907f0;
		constexpr auto Init = 0x5bc480;
		constexpr auto BlockJump = 0x477ed0;
		constexpr auto BlockSprint = 0x477ed0;
		constexpr auto get_RecentlyTeleported = 0x8f4c10;
		constexpr auto ClientInput = 0x477ed0;
		constexpr auto DoFixedUpdate = 0x477ed0;
		constexpr auto FrameUpdate = 0x8f4a00;
		constexpr auto TeleportTo = 0x8f4af0;
		constexpr auto Push = 0x477ed0;
		constexpr auto SetParent = 0x477ed0;
		constexpr auto FixedUpdate = 0x8f4980;
		constexpr auto PlayerAttemptedMount = 0x477ed0;
		constexpr auto PlayerCompletedMount = 0x477ed0;
		constexpr auto ctor = 0x8f4b90;
	};

	namespace BaseProjectile {
		constexpr auto NoiseRadius = 0x280;
		constexpr auto damageScale = 0x284;
		constexpr auto distanceScale = 0x288;
		constexpr auto projectileVelocityScale = 0x28c;
		constexpr auto automatic = 0x290;
		constexpr auto usableByTurret = 0x291;
		constexpr auto turretDamageScale = 0x294;
		constexpr auto attackFX = 0x298;
		constexpr auto silencedAttack = 0x2a0;
		constexpr auto muzzleBrakeAttack = 0x2a8;
		constexpr auto MuzzlePoint = 0x2b0;
		constexpr auto reloadTime = 0x2b8;
		constexpr auto canUnloadAmmo = 0x2bc;
		constexpr auto primaryMagazine = 0x2c0;
		constexpr auto fractionalReload = 0x2c8;
		constexpr auto reloadStartDuration = 0x2cc;
		constexpr auto reloadFractionDuration = 0x2d0;
		constexpr auto reloadEndDuration = 0x2d4;
		constexpr auto aimSway = 0x2d8;
		constexpr auto aimSwaySpeed = 0x2dc;
		constexpr auto recoil = 0x2e0;
		constexpr auto aimconeCurve = 0x2e8;
		constexpr auto aimCone = 0x2f0;
		constexpr auto hipAimCone = 0x2f4;
		constexpr auto aimconePenaltyPerShot = 0x2f8;
		constexpr auto aimConePenaltyMax = 0x2fc;
		constexpr auto aimconePenaltyRecoverTime = 0x300;
		constexpr auto aimconePenaltyRecoverDelay = 0x304;
		constexpr auto stancePenaltyScale = 0x308;
		constexpr auto hasADS = 0x30c;
		constexpr auto noAimingWhileCycling = 0x30d;
		constexpr auto manualCycle = 0x30e;
		constexpr auto needsCycle = 0x30f;
		constexpr auto isCycling = 0x310;
		constexpr auto aiming = 0x311;
		constexpr auto isBurstWeapon = 0x312;
		constexpr auto canChangeFireModes = 0x313;
		constexpr auto defaultOn = 0x314;
		constexpr auto internalBurstRecoilScale = 0x318;
		constexpr auto internalBurstFireRateScale = 0x31c;
		constexpr auto internalBurstAimConeScale = 0x320;
		constexpr auto Toast_BurstDisabled = 0x328;
		constexpr auto Toast_BurstEnabled = 0x330;
		constexpr auto resetDuration = 0x338;
		constexpr auto numShotsFired = 0x33c;
		constexpr auto nextReloadTime = 0x340;
		constexpr auto startReloadTime = 0x344;
		constexpr auto stancePenalty = 0x348;
		constexpr auto aimconePenalty = 0x34c;
		constexpr auto cachedModHash = 0x350;
		constexpr auto sightAimConeScale = 0x354;
		constexpr auto sightAimConeOffset = 0x358;
		constexpr auto hipAimConeScale = 0x35c;
		constexpr auto hipAimConeOffset = 0x360;
		constexpr auto isReloading = 0x364;
		constexpr auto swaySampleTime = 0x368;
		constexpr auto lastShotTime = 0x36c;
		constexpr auto reloadPressTime = 0x370;
		constexpr auto ammoTypePreReload = 0x378;
		constexpr auto fractionalReloadDesiredCount = 0x380;
		constexpr auto fractionalReloadNumAdded = 0x384;
		constexpr auto currentBurst = 0x388;
		constexpr auto triggerReady = 0x38c;
		constexpr auto nextHeightCheckTime = 0x390;
		constexpr auto cachedUnderground = 0x394;
		constexpr auto createdProjectiles = 0x398;

		constexpr auto OnRpcMessage = 0x8fda10;
		constexpr auto get_recoilProperties = 0x8ff860;
		constexpr auto GetInheritedVelocity = 0x8fadb0;
		constexpr auto GetDamageScale = 0x8fad90;
		constexpr auto GetDistanceScale = 0x8fada0;
		constexpr auto GetProjectileVelocityScale = 0x58d3d0;
		constexpr auto StartReloadCooldown = 0x8ff250;
		constexpr auto ResetReloadCooldown = 0x8fe610;
		constexpr auto HasReloadCooldown = 0x8fbcb0;
		constexpr auto GetReloadCooldown = 0x8fb5b0;
		constexpr auto GetReloadIdle = 0x8fb710;
		constexpr auto OnDrawGizmos = 0x8fd1b0;
		constexpr auto GetRecoil = 0x8fb5a0;
		constexpr auto get_isSemiAuto = 0x8ff850;
		constexpr auto GetAimCone = 0x8fa0d0;
		constexpr auto ScaleRepeatDelay = 0x8fe620;
		constexpr auto GetProjectileModifier = 0x8faf60;
		constexpr auto UsingBurstMode = 0x8ff370;
		constexpr auto UsingInternalBurstMode = 0x8ff500;
		constexpr auto IsBurstEligable = 0x8fbd70;
		constexpr auto TimeBetweenBursts = 0x8ff2a0;
		constexpr auto DidAttackClientside = 0x8f8450;
		constexpr auto GetItemOptions = 0x8fae10;
		constexpr auto ClientIsReloading = 0x8f8170;
		constexpr auto NotifySpectatorReloading = 0x8fd160;
		constexpr auto EditViewAngles = 0x8f96d0;
		constexpr auto OnFrame = 0x8fd580;
		constexpr auto ShotFired = 0x8fe9b0;
		constexpr auto SimulateAimcone = 0x8fea10;
		constexpr auto CanAttack = 0x8f7f70;
		constexpr auto CanAim = 0x8f7f40;
		constexpr auto OnInput = 0x8fd590;
		constexpr auto ReadyToAim = 0x8fe560;
		constexpr auto ReadyToFire = 0x8fe5b0;
		constexpr auto AmmoTypeClicked = 0x8f7e20;
		constexpr auto AddAmmoOption = 0x8f7c70;
		constexpr auto GetReloadMenu = 0x8fb790;
		constexpr auto PredictAmmoType = 0x8fe1c0;
		constexpr auto HasMoreThanOneAmmoType = 0x8fba00;
		constexpr auto OnDeploy = 0x8fd170;
		constexpr auto DoReload = 0x8f9140;
		constexpr auto InsertAmmoFraction = 0x8fbce0;
		constexpr auto CancelFractionalReloading = 0x8f7f90;
		constexpr auto ClientFinishFractionalReload = 0x8f8030;
		constexpr auto ClientSingleReload = 0x8f8180;
		constexpr auto IsBursting = 0x8fbee0;
		constexpr auto GetBurstModeCount = 0x8fac10;
		constexpr auto DoAttack = 0x8f8520;
		constexpr auto BeginCycle = 0x8f7eb0;
		constexpr auto LaunchProjectile = 0x8fcf70;
		constexpr auto DryFire = 0x8f9610;
		constexpr auto ProcessSpectatorViewmodel = 0x8fe500;
		constexpr auto ProcessSpectatorViewmodelEvent = 0x8fe3f0;
		constexpr auto GetReloadDuration = 0x8fb630;
		constexpr auto GetAvailableAmmo = 0x8faa00;
		constexpr auto IsBurstDisabled = 0x8fbd40;
		constexpr auto IsSilenced = 0x8fbef0;
		constexpr auto FiredUnderground = 0x8fa040;
		constexpr auto OnSignal = 0x8fdb00;
		constexpr auto LaunchProjectileClientside = 0x8fc0d0;
		constexpr auto CreateProjectile = 0x8f82c0;
		constexpr auto UpdateAmmoDisplay = 0x8ff2c0;
		constexpr auto get_UsingInfiniteAmmoCheat = 0x59bd20;
		constexpr auto Load = 0x8fd0c0;
		constexpr auto ctor = 0x8ff540;
	};

	namespace PlayerWalkMovement {
		constexpr auto zeroFrictionMaterial = 0x58;
		constexpr auto highFrictionMaterial = 0x60;
		constexpr auto capsuleHeight = 0x68;
		constexpr auto capsuleCenter = 0x6c;
		constexpr auto capsuleHeightDucked = 0x70;
		constexpr auto capsuleCenterDucked = 0x74;
		constexpr auto capsuleHeightCrawling = 0x78;
		constexpr auto capsuleCenterCrawling = 0x7c;
		constexpr auto gravityTestRadius = 0x80;
		constexpr auto gravityMultiplier = 0x84;
		constexpr auto gravityMultiplierSwimming = 0x88;
		constexpr auto maxAngleWalking = 0x8c;
		constexpr auto maxAngleClimbing = 0x90;
		constexpr auto maxAngleSliding = 0x94;
		constexpr auto maxStepHeight = 0x98;
		constexpr auto body = 0xa0;
		constexpr auto initialColDetectionMode = 0xa8;
		constexpr auto capsule = 0xb0;
		constexpr auto ladder = 0xb8;
		constexpr auto maxVelocity = 0xc0;
		constexpr auto groundAngle = 0xc4;
		constexpr auto groundAngleNew = 0xc8;
		constexpr auto groundTime = 0xcc;
		constexpr auto jumpTime = 0xd0;
		constexpr auto landTime = 0xd4;
		constexpr auto previousPosition = 0xd8;
		constexpr auto previousVelocity = 0xe4;
		constexpr auto previousInheritedVelocity = 0xf0;
		constexpr auto groundNormal = 0xfc;
		constexpr auto groundNormalNew = 0x108;
		constexpr auto groundVelocity = 0x114;
		constexpr auto groundVelocityNew = 0x120;
		constexpr auto nextSprintTime = 0x12c;
		constexpr auto lastSprintTime = 0x130;
		constexpr auto sprintForced = 0x134;
		constexpr auto attemptedMountTime = 0x138;
		constexpr auto modify = 0x13c;
		constexpr auto grounded = 0x140;
		constexpr auto climbing = 0x141;
		constexpr auto sliding = 0x142;
		constexpr auto swimming = 0x143;
		constexpr auto wasSwimming = 0x144;
		constexpr auto jumping = 0x145;
		constexpr auto wasJumping = 0x146;
		constexpr auto falling = 0x147;
		constexpr auto wasFalling = 0x148;
		constexpr auto flying = 0x149;
		constexpr auto wasFlying = 0x14a;
		constexpr auto forcedDuckDelta = 0x14c;

		constexpr auto Awake = 0xaee0f0;
		constexpr auto GetCollider = 0xa7a720;
		constexpr auto OnDisable = 0xaf2ff0;
		constexpr auto Init = 0xaf0820;
		constexpr auto OnCollisionEnter = 0xaf2e30;
		constexpr auto OnCollisionStay = 0xaf2f10;
		constexpr auto GroundCheck = 0xaeffe0;
		constexpr auto TeleportTo = 0xaf36a0;
		constexpr auto UpdateCurrentLadder = 0xaf39d0;
		constexpr auto WantsSprint = 0xaf4a40;
		constexpr auto ClientInput = 0xaee3e0;
		constexpr auto Movement_Water = 0xaf2280;
		constexpr auto Movement_Mounted = 0xaf1360;
		constexpr auto Movement_Ladder = 0xaf0d10;
		constexpr auto Movement_Noclip = 0xaf1470;
		constexpr auto Movement_Walking = 0xaf1a00;
		constexpr auto GetHeldEntityMovementMultiplier = 0xaeff30;
		constexpr auto HandleGrounded = 0xaf02b0;
		constexpr auto HandleRunDuckCrawl = 0xaf0430;
		constexpr auto GetForcedDuck = 0xaefe40;
		constexpr auto HandleJumping = 0xaf0300;
		constexpr auto CanJump = 0xaee260;
		constexpr auto BlockJump = 0xaee1d0;
		constexpr auto BlockSprint = 0xaee210;
		constexpr auto SetKinematic = 0xaf3470;
		constexpr auto ApplyForce = 0xaee0b0;
		constexpr auto CanSprint = 0xaee370;
		constexpr auto Jump = 0xaf09f0;
		constexpr auto DoFixedUpdate = 0xaee790;
		constexpr auto DoStepUp = 0xaeefc0;
		constexpr auto UpdateVelocity = 0xaf3ef0;
		constexpr auto UpdateGravity = 0xaf3ba0;
		constexpr auto FrameUpdate = 0xaef990;
		constexpr auto TransformState = 0xaf37c0;
		constexpr auto SetParent = 0xaf34a0;
		constexpr auto FallVelocity = 0xaef8e0;
		constexpr auto CurrentVelocity = 0xaee750;
		constexpr auto CurrentMoveSpeed = 0xaee700;
		constexpr auto PlayerAttemptedMount = 0xaf3410;
		constexpr auto PlayerCompletedMount = 0xaf3440;
		constexpr auto ctor = 0xaf4ad0;
	};

	namespace UnityEngine_GUI {
		constexpr auto s_BoxHash = 0x4;
		constexpr auto s_ButonHash = 0x8;
		constexpr auto s_RepeatButtonHash = 0xc;
		constexpr auto s_ToggleHash = 0x10;
		constexpr auto s_ButtonGridHash = 0x14;
		constexpr auto s_SliderHash = 0x18;
		constexpr auto s_BeginGroupHash = 0x1c;
		constexpr auto s_ScrollviewHash = 0x20;
		constexpr auto scrollTroughSidek__BackingField = 0x24;
		constexpr auto nextScrollStepTimek__BackingField = 0x28;
		constexpr auto s_Skin = 0x30;
		constexpr auto scrollViewStatesk__BackingField = 0x38;

		constexpr auto get_color = 0x1cede60;
		constexpr auto set_color = 0x1cee400;
		constexpr auto get_backgroundColor = 0x1cedd10;
		constexpr auto set_backgroundColor = 0x1cee310;
		constexpr auto get_contentColor = 0x1cedf20;
		constexpr auto set_contentColor = 0x1cee4b0;
		constexpr auto get_changed = 0x1ceddf0;
		constexpr auto set_changed = 0x1cee380;
		constexpr auto get_enabled = 0x1cedfa0;
		constexpr auto set_enabled = 0x1cee520;
		constexpr auto get_usePageScrollbars = 0x1cee2a0;
		constexpr auto get_blendMaterial = 0x1cedd90;
		constexpr auto get_blitMaterial = 0x1ceddc0;
		constexpr auto get_roundedRectMaterial = 0x1cee0c0;
		constexpr auto get_roundedRectWithColorPerBorderMaterial = 0x1cee0f0;
		constexpr auto GrabMouseControl = 0x1cebe60;
		constexpr auto HasMouseControl = 0x1cecc50;
		constexpr auto ReleaseMouseControl = 0x1ced360;
		constexpr auto SetNextControlName = 0x1ced5f0;
		constexpr auto InternalRepaintEditorWindow = 0x1cecf70;
		constexpr auto cctor = 0x1ceda50;
		constexpr auto get_scrollTroughSide = 0x1cee120;
		constexpr auto set_scrollTroughSide = 0x1cee680;
		constexpr auto get_nextScrollStepTime = 0x1cee060;
		constexpr auto set_nextScrollStepTime = 0x1cee5c0;
		constexpr auto set_skin = 0x1cee740;
		constexpr auto get_skin = 0x1cee240;
		constexpr auto DoSetSkin = 0x1cea2e0;
		constexpr auto get_matrix = 0x1cedfd0;
		constexpr auto set_matrix = 0x1cee560;
		constexpr auto Label = 0x1ced090;
		constexpr auto DrawTexture = 0x1ceb470;
		constexpr auto CalculateScaledTextureRects = 0x1ce8630;
		constexpr auto Box = 0x1ce7a20;
		constexpr auto Button = 0x1ce7ae0;
		constexpr auto PasswordFieldGetStrToShow = 0x1ced230;
		constexpr auto DoTextField = 0x1cea760;
		constexpr auto HandleTextFieldEventForTouchscreen = 0x1cec690;
		constexpr auto HandleTextFieldEventForDesktop = 0x1cebea0;
		constexpr auto Toggle = 0x1ced890;
		constexpr auto SelectionGrid = 0x1ced490;
		constexpr auto CalcTotalHorizSpacing = 0x1ce8420;
		constexpr auto DoControl = 0x1ce9c10;
		constexpr auto DoLabel = 0x1cea050;
		constexpr auto DoToggle = 0x1cea920;
		constexpr auto DoButton = 0x1ce9ae0;
		constexpr auto DoButtonGrid = 0x1ce8df0;
		constexpr auto CalcMouseRects = 0x1ce7f00;
		constexpr auto HorizontalSlider = 0x1cecd60;
		constexpr auto Slider = 0x1ced630;
		constexpr auto BeginGroup = 0x1ce7400;
		constexpr auto EndGroup = 0x1cebe20;
		constexpr auto get_scrollViewStates = 0x1cee1e0;
		constexpr auto CallWindowDelegate = 0x1ce8960;
		constexpr auto get_color_Injected = 0x1cede20;
		constexpr auto set_color_Injected = 0x1cee3c0;
		constexpr auto get_backgroundColor_Injected = 0x1cedcd0;
		constexpr auto set_backgroundColor_Injected = 0x1cee2d0;
		constexpr auto get_contentColor_Injected = 0x1cedee0;
		constexpr auto set_contentColor_Injected = 0x1cee470;
	};

	namespace UnityEngine_GUIStyle {
		constexpr auto m_Ptr = 0x10;
		constexpr auto m_Normal = 0x18;
		constexpr auto m_Hover = 0x20;
		constexpr auto m_Active = 0x28;
		constexpr auto m_Focused = 0x30;
		constexpr auto m_OnNormal = 0x38;
		constexpr auto m_OnHover = 0x40;
		constexpr auto m_OnActive = 0x48;
		constexpr auto m_OnFocused = 0x50;
		constexpr auto m_Border = 0x58;
		constexpr auto m_Padding = 0x60;
		constexpr auto m_Margin = 0x68;
		constexpr auto m_Overflow = 0x70;
		constexpr auto m_Name = 0x78;
		constexpr auto s_None = 0x8;

		constexpr auto get_rawName = 0x1ce4f60;
		constexpr auto set_rawName = 0x1ce5330;
		constexpr auto get_font = 0x1ce4a50;
		constexpr auto get_imagePosition = 0x1ce4a90;
		constexpr auto set_alignment = 0x1ce51d0;
		constexpr auto get_wordWrap = 0x1ce5020;
		constexpr auto get_contentOffset = 0x1ce4980;
		constexpr auto set_contentOffset = 0x1ce5260;
		constexpr auto get_fixedWidth = 0x1ce4a10;
		constexpr auto get_fixedHeight = 0x1ce49d0;
		constexpr auto get_stretchWidth = 0x1ce4fe0;
		constexpr auto set_stretchWidth = 0x1ce53d0;
		constexpr auto get_stretchHeight = 0x1ce4fa0;
		constexpr auto set_stretchHeight = 0x1ce5380;
		constexpr auto set_fontSize = 0x1ce52a0;
		constexpr auto set_Internal_clipOffset = 0x1ce5190;
		constexpr auto Internal_Create = 0x1ce3d90;
		constexpr auto Internal_Copy = 0x1ce3d40;
		constexpr auto Internal_Destroy = 0x1ce3dd0;
		constexpr auto GetStyleStatePtr = 0x1ce3b70;
		constexpr auto GetRectOffsetPtr = 0x1ce3b30;
		constexpr auto Internal_GetLineHeight = 0x1ce4460;
		constexpr auto Internal_Draw = 0x1ce41e0;
		constexpr auto Internal_Draw2 = 0x1ce3e80;
		constexpr auto Internal_DrawCursor = 0x1ce3f60;
		constexpr auto Internal_DrawWithTextSelection = 0x1ce4080;
		constexpr auto Internal_GetCursorPixelPosition = 0x1ce4310;
		constexpr auto Internal_GetCursorStringIndex = 0x1ce4400;
		constexpr auto Internal_GetSelectedRenderedText = 0x1ce4510;
		constexpr auto Internal_CalcSize = 0x1ce2a80;
		constexpr auto Internal_CalcSizeWithConstraints = 0x1ce2a20;
		constexpr auto Internal_CalcHeight = 0x1ce2940;
		constexpr auto Internal_CalcMinMaxWidth = 0x1ce3c10;
		constexpr auto SetMouseTooltip = 0x1ce4610;
		constexpr auto Internal_GetCursorFlashOffset = 0x1ce4270;
		constexpr auto SetDefaultFont = 0x1ce4580;
		constexpr auto ctor = 0x1ce48b0;
		constexpr auto Finalize = 0x1ce3950;
		constexpr auto get_name = 0x1ce4cd0;
		constexpr auto set_name = 0x1ce52e0;
		constexpr auto get_normal = 0x1ce4df0;
		constexpr auto get_margin = 0x1ce4c20;
		constexpr auto get_padding = 0x1ce4eb0;
		constexpr auto get_lineHeight = 0x1ce4b70;
		constexpr auto Draw = 0x1ce3720;
		constexpr auto DrawCursor = 0x1ce2ae0;
		constexpr auto DrawWithTextSelection = 0x1ce2fa0;
		constexpr auto op_Implicit = 0x1ce5060;
		constexpr auto get_none = 0x1ce4d30;
		constexpr auto GetCursorPixelPosition = 0x1ce3a50;
		constexpr auto GetCursorStringIndex = 0x1ce3ad0;
		constexpr auto CalcSize = 0x1ce2a80;
		constexpr auto CalcSizeWithConstraints = 0x1ce2a20;
		constexpr auto CalcHeight = 0x1ce2940;
		constexpr auto get_isHeightDependantOnWidth = 0x1ce4ad0;
		constexpr auto CalcMinMaxWidth = 0x1ce29a0;
		constexpr auto ToString = 0x1ce4690;
		constexpr auto cctor = 0x1ce47a0;
		constexpr auto get_contentOffset_Injected = 0x1ce4930;
		constexpr auto set_contentOffset_Injected = 0x1ce5210;
		constexpr auto set_Internal_clipOffset_Injected = 0x1ce5140;
		constexpr auto Internal_Draw_Injected = 0x1ce4150;
		constexpr auto Internal_Draw2_Injected = 0x1ce3e10;
		constexpr auto Internal_DrawCursor_Injected = 0x1ce3ef0;
		constexpr auto Internal_DrawWithTextSelection_Injected = 0x1ce3fd0;
		constexpr auto Internal_GetCursorPixelPosition_Injected = 0x1ce42a0;
		constexpr auto Internal_GetCursorStringIndex_Injected = 0x1ce4390;
		constexpr auto Internal_GetSelectedRenderedText_Injected = 0x1ce44a0;
		constexpr auto Internal_CalcSize_Injected = 0x1ce3ce0;
		constexpr auto Internal_CalcSizeWithConstraints_Injected = 0x1ce3c70;
		constexpr auto Internal_CalcMinMaxWidth_Injected = 0x1ce3bb0;
		constexpr auto SetMouseTooltip_Injected = 0x1ce45c0;
	};

	namespace UnityEngine_Event {
		constexpr auto m_Ptr = 0x10;
		constexpr auto s_MasterEvent = 0x8;

		constexpr auto get_rawType = 0x1cd4680;
		constexpr auto get_mousePosition = 0x1cd45b0;
		constexpr auto set_mousePosition = 0x1cd4990;
		constexpr auto get_delta = 0x1cd4330;
		constexpr auto get_pointerType = 0x1cd4600;
		constexpr auto get_button = 0x1cd4120;
		constexpr auto get_modifiers = 0x1cd4520;
		constexpr auto set_modifiers = 0x1cd4900;
		constexpr auto get_pressure = 0x1cd4640;
		constexpr auto get_clickCount = 0x1cd41a0;
		constexpr auto get_character = 0x1cd4160;
		constexpr auto set_character = 0x1cd4740;
		constexpr auto get_keyCode = 0x1cd44e0;
		constexpr auto set_keyCode = 0x1cd48c0;
		constexpr auto get_displayIndex = 0x1cd4380;
		constexpr auto set_displayIndex = 0x1cd4880;
		constexpr auto get_type = 0x1cd4700;
		constexpr auto set_type = 0x1cd49d0;
		constexpr auto get_commandName = 0x1cd41e0;
		constexpr auto set_commandName = 0x1cd4790;
		constexpr auto Internal_Use = 0x1cd2000;
		constexpr auto Internal_Create = 0x1cd1e00;
		constexpr auto Internal_Destroy = 0x1cd1e40;
		constexpr auto Internal_Copy = 0x1cd1dc0;
		constexpr auto GetTypeForControl = 0x1cd1d80;
		constexpr auto CopyFromPtr = 0x1cd1860;
		constexpr auto PopEvent = 0x1cd32d0;
		constexpr auto Internal_SetNativeEvent = 0x1cd1fc0;
		constexpr auto Internal_MakeMasterEventCurrent = 0x1cd1e80;
		constexpr auto ctor = 0x1cd4050;
		constexpr auto Finalize = 0x1cd1b70;
		constexpr auto CopyFrom = 0x1cd18b0;
		constexpr auto get_shift = 0x1cd46c0;
		constexpr auto get_control = 0x1cd4260;
		constexpr auto get_alt = 0x1cd40e0;
		constexpr auto get_command = 0x1cd4220;
		constexpr auto get_current = 0x1cd42a0;
		constexpr auto set_current = 0x1cd47e0;
		constexpr auto get_isKey = 0x1cd4430;
		constexpr auto get_isMouse = 0x1cd4480;
		constexpr auto get_isDirectManipulationDevice = 0x1cd43c0;
		constexpr auto KeyboardEvent = 0x1cd2040;
		constexpr auto GetHashCode = 0x1cd1c50;
		constexpr auto Equals = 0x1cd1920;
		constexpr auto ToString = 0x1cd3310;
		constexpr auto Use = 0x1cd3df0;
		constexpr auto get_mousePosition_Injected = 0x1cd4560;
		constexpr auto set_mousePosition_Injected = 0x1cd4940;
		constexpr auto get_delta_Injected = 0x1cd42e0;
	};

	namespace UnityEngine_Input {

		constexpr auto GetKeyInt = 0x25b7820;
		constexpr auto GetKeyUpInt = 0x25b7860;
		constexpr auto GetKeyDownInt = 0x25b77e0;
		constexpr auto GetAxis = 0x25b7760;
		constexpr auto GetAxisRaw = 0x25b7720;
		constexpr auto GetButtonDown = 0x25b77a0;
		constexpr auto GetMouseButton = 0x25b7920;
		constexpr auto GetMouseButtonDown = 0x25b78a0;
		constexpr auto GetMouseButtonUp = 0x25b78e0;
		constexpr auto GetTouch = 0x25b79a0;
		constexpr auto GetKey = 0x25b7820;
		constexpr auto GetKeyUp = 0x25b7860;
		constexpr auto GetKeyDown = 0x25b77e0;
		constexpr auto get_anyKey = 0x25b7a30;
		constexpr auto get_anyKeyDown = 0x25b7a00;
		constexpr auto get_mousePosition = 0x25b7b80;
		constexpr auto get_mouseScrollDelta = 0x25b7c30;
		constexpr auto get_imeCompositionMode = 0x25b7b10;
		constexpr auto set_imeCompositionMode = 0x25b7e80;
		constexpr auto get_compositionString = 0x25b7ae0;
		constexpr auto get_compositionCursorPos = 0x25b7aa0;
		constexpr auto set_compositionCursorPos = 0x25b7e40;
		constexpr auto get_mousePresent = 0x25b7bc0;
		constexpr auto get_touchCount = 0x25b7c70;
		constexpr auto get_touchSupported = 0x25b7ca0;
		constexpr auto get_touches = 0x25b7cd0;
		constexpr auto GetTouch_Injected = 0x25b7960;
		constexpr auto get_mousePosition_Injected = 0x25b7b40;
		constexpr auto get_mouseScrollDelta_Injected = 0x25b7bf0;
		constexpr auto get_compositionCursorPos_Injected = 0x25b7a60;
		constexpr auto set_compositionCursorPos_Injected = 0x25b7e00;
	};

	namespace UnityEngine_DDraw {
		constexpr auto singleton = 0x8;
		constexpr auto list = 0x18;
		constexpr auto AutoYPosition = 0x10;
		constexpr auto LastAutoY = 0x14;
		constexpr auto lineMaterial = 0x18;
		constexpr auto _skin = 0x20;

		constexpr auto Get = 0x713ba0;
		constexpr auto Capsule = 0x7137c0;
		constexpr auto Sphere = 0x715040;
		constexpr auto SphereGizmo = 0x714d50;
		constexpr auto Line = 0x713e70;
		constexpr auto Arrow = 0x712890;
		constexpr auto ArrowPadded = 0x712190;
		constexpr auto Bounds = 0x712ac0;
		constexpr auto Box = 0x713080;
		constexpr auto Text = 0x715320;
		constexpr auto ScreenText = 0x714bb0;
		constexpr auto Awake = 0x712a50;
		constexpr auto OnPreRender = 0x7147d0;
		constexpr auto OnPostRender = 0x714490;
		constexpr auto OnGUI = 0x7142c0;
		constexpr auto CreateLineMaterial = 0x713a40;
		constexpr auto get_skin = 0x715530;
		constexpr auto ctor = 0x7154c0;
		constexpr auto cctor = 0x477ed0;
	};

	namespace UnityEngine_Texture2D {

		constexpr auto get_format = 0x242eb10;
		constexpr auto get_whiteTexture = 0x242eb90;
		constexpr auto get_blackTexture = 0x242eae0;
		constexpr auto Compress = 0x242d300;
		constexpr auto Internal_CreateImpl = 0x242d990;
		constexpr auto Internal_Create = 0x242d9f0;
		constexpr auto get_isReadable = 0x242eb50;
		constexpr auto ApplyImpl = 0x242d150;
		constexpr auto ResizeImpl = 0x242dec0;
		constexpr auto SetPixelImpl = 0x242e200;
		constexpr auto GetPixelImpl = 0x242d570;
		constexpr auto GetPixelBilinearImpl = 0x242d3b0;
		constexpr auto ResizeWithFormatImpl = 0x242df10;
		constexpr auto ReadPixelsImpl = 0x242dcb0;
		constexpr auto SetPixelsImpl = 0x242e400;
		constexpr auto LoadRawTextureDataImpl = 0x242dac0;
		constexpr auto GetWritableImageData = 0x242d950;
		constexpr auto GetRawImageDataSize = 0x242d910;
		constexpr auto set_requestedMipmapLevel = 0x242ec00;
		constexpr auto set_minimumMipmapLevel = 0x242ebc0;
		constexpr auto ClearRequestedMipmapLevel = 0x242d2c0;
		constexpr auto ClearMinimumMipmapLevel = 0x242d280;
		constexpr auto SetAllPixels32 = 0x242e0e0;
		constexpr auto SetBlockOfPixels32 = 0x242e140;
		constexpr auto GetPixels = 0x242d810;
		constexpr auto GetPixels32 = 0x242d710;
		constexpr auto ctor = 0x242e920;
		constexpr auto SetPixel = 0x242e270;
		constexpr auto SetPixels = 0x242e460;
		constexpr auto GetPixel = 0x242d5f0;
		constexpr auto GetPixelBilinear = 0x242d430;
		constexpr auto LoadRawTextureData = 0x242db20;
		constexpr auto Apply = 0x242d1d0;
		constexpr auto Resize = 0x242e040;
		constexpr auto ReadPixels = 0x242ddf0;
		constexpr auto SetPixels32 = 0x242e0e0;
		constexpr auto SetPixelImpl_Injected = 0x242e1a0;
		constexpr auto GetPixelImpl_Injected = 0x242d510;
		constexpr auto GetPixelBilinearImpl_Injected = 0x242d350;
		constexpr auto ReadPixelsImpl_Injected = 0x242dc40;
	};

	namespace ModelState {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto waterLevel = 0x14;
		constexpr auto lookDir = 0x18;
		constexpr auto flags = 0x24;
		constexpr auto poseType = 0x28;
		constexpr auto inheritedVelocity = 0x2c;

		constexpr auto ctor = 0x22ecad0;
		constexpr auto HasFlag = 0x22ebfb0;
		constexpr auto SetFlag = 0x22eca60;
		constexpr auto get_ducked = 0x22ecb20;
		constexpr auto set_ducked = 0x22ecc20;
		constexpr auto get_jumped = 0x22ecb50;
		constexpr auto set_jumped = 0x22ecc80;
		constexpr auto get_onground = 0x22ecb90;
		constexpr auto set_onground = 0x22ecd00;
		constexpr auto get_sleeping = 0x22ecbc0;
		constexpr auto set_sleeping = 0x22ecd60;
		constexpr auto get_sprinting = 0x22ecbd0;
		constexpr auto set_sprinting = 0x22ecd80;
		constexpr auto get_onLadder = 0x22ecb70;
		constexpr auto set_onLadder = 0x22eccc0;
		constexpr auto get_flying = 0x22ecb30;
		constexpr auto set_flying = 0x22ecc40;
		constexpr auto get_aiming = 0x22ecb00;
		constexpr auto set_aiming = 0x22ecbe0;
		constexpr auto get_prone = 0x22ecba0;
		constexpr auto set_prone = 0x22ecd20;
		constexpr auto get_mounted = 0x22ecb60;
		constexpr auto set_mounted = 0x22ecca0;
		constexpr auto get_relaxed = 0x22ecbb0;
		constexpr auto set_relaxed = 0x22ecd40;
		constexpr auto get_crawling = 0x22ecb10;
		constexpr auto set_crawling = 0x22ecc00;
		constexpr auto get_onPhone = 0x22ecb80;
		constexpr auto set_onPhone = 0x22ecce0;
		constexpr auto get_headLook = 0x22ecb40;
		constexpr auto set_headLook = 0x22ecc60;
		constexpr auto Equal = 0x22ebc50;
		constexpr auto ResetToPool = 0x22ec090;
		constexpr auto Dispose = 0x22ebbd0;
		constexpr auto EnterPool = 0xf04670;
		constexpr auto LeavePool = 0xf046a0;
		constexpr auto CopyTo = 0x22ea8b0;
		constexpr auto Copy = 0x22ea900;
		constexpr auto Deserialize = 0x22eb950;
		constexpr auto DeserializeLengthDelimited = 0x22ea9a0;
		constexpr auto DeserializeLength = 0x22eb030;
		constexpr auto FromProto = 0x22ebd60;
		constexpr auto WriteToStream = 0x22eca90;
		constexpr auto WriteToStreamDelta = 0x22ecab0;
		constexpr auto ReadFromStream = 0x22ebfc0;
		constexpr auto SerializeDelta = 0x22ec140;
		constexpr auto Serialize = 0x22ec7a0;
		constexpr auto ToProtoBytes = 0x22eca80;
		constexpr auto ToProto = 0x22eca90;
		constexpr auto SerializeToBytes = 0x22ec690;
		constexpr auto SerializeLengthDelimited = 0x22ec5e0;
	};

	namespace ProtoBuf_PlayerProjectileUpdate {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto projectileID = 0x14;
		constexpr auto curPosition = 0x18;
		constexpr auto curVelocity = 0x24;
		constexpr auto travelTime = 0x30;

		constexpr auto ResetToPool = 0x20a7ae0;
		constexpr auto Dispose = 0x20a7780;
		constexpr auto EnterPool = 0xf04670;
		constexpr auto LeavePool = 0xf046a0;
		constexpr auto CopyTo = 0x20a6610;
		constexpr auto Copy = 0x20a6650;
		constexpr auto Deserialize = 0x20a6d80;
		constexpr auto DeserializeLengthDelimited = 0x20a66f0;
		constexpr auto DeserializeLength = 0x20a6cf0;
		constexpr auto FromProto = 0x20a78b0;
		constexpr auto WriteToStream = 0x20a84f0;
		constexpr auto WriteToStreamDelta = 0x20a8510;
		constexpr auto ReadFromStream = 0x20a7ac0;
		constexpr auto SerializeDelta = 0x20a7c40;
		constexpr auto Serialize = 0x20a8250;
		constexpr auto ToProtoBytes = 0x20a84e0;
		constexpr auto ToProto = 0x20a84f0;
		constexpr auto SerializeToBytes = 0x20a8140;
		constexpr auto SerializeLengthDelimited = 0x20a8090;
		constexpr auto ctor = 0xf05000;
	};

	namespace Projectile {
		constexpr auto initialVelocity = 0x18;
		constexpr auto drag = 0x24;
		constexpr auto gravityModifier = 0x28;
		constexpr auto thickness = 0x2c;
		constexpr auto initialDistance = 0x30;
		constexpr auto remainInWorld = 0x34;
		constexpr auto stickProbability = 0x38;
		constexpr auto breakProbability = 0x3c;
		constexpr auto conditionLoss = 0x40;
		constexpr auto ricochetChance = 0x44;
		constexpr auto penetrationPower = 0x48;
		constexpr auto damageProperties = 0x50;
		constexpr auto damageDistances = 0x58;
		constexpr auto damageMultipliers = 0x60;
		constexpr auto damageTypes = 0x68;
		constexpr auto rendererToScale = 0x70;
		constexpr auto firstPersonRenderer = 0x78;
		constexpr auto createDecals = 0x80;
		constexpr auto doDefaultHitEffects = 0x81;
		constexpr auto flybySound = 0x88;
		constexpr auto flybySoundDistance = 0x90;
		constexpr auto closeFlybySound = 0x98;
		constexpr auto closeFlybyDistance = 0xa0;
		constexpr auto tumbleSpeed = 0xa4;
		constexpr auto tumbleAxis = 0xa8;
		constexpr auto swimScale = 0xb4;
		constexpr auto swimSpeed = 0xc0;
		constexpr auto owner = 0xd0;
		constexpr auto sourceWeaponPrefab = 0xd8;
		constexpr auto sourceProjectilePrefab = 0xe0;
		constexpr auto mod = 0xe8;
		constexpr auto projectileID = 0xf0;
		constexpr auto seed = 0xf4;
		constexpr auto clientsideEffect = 0xf8;
		constexpr auto clientsideAttack = 0xf9;
		constexpr auto integrity = 0xfc;
		constexpr auto maxDistance = 0x100;
		constexpr auto modifier = 0x104;
		constexpr auto invisible = 0x114;
		constexpr auto currentVelocity = 0x118;
		constexpr auto currentPosition = 0x124;
		constexpr auto traveledDistance = 0x130;
		constexpr auto traveledTime = 0x134;
		constexpr auto launchTime = 0x138;
		constexpr auto sentPosition = 0x13c;
		constexpr auto previousPosition = 0x148;
		constexpr auto previousVelocity = 0x154;
		constexpr auto previousTraveledTime = 0x160;
		constexpr auto isRicochet = 0x164;
		constexpr auto isRetiring = 0x165;
		constexpr auto flybyPlayed = 0x166;
		constexpr auto wasFacingPlayer = 0x167;
		constexpr auto flybyPlane = 0x168;
		constexpr auto flybyRay = 0x178;
		constexpr auto cleanupAction = 0x190;
		constexpr auto hitTest = 0x198;
		constexpr auto swimRandom = 0x1a0;
		constexpr auto _waterMaterialID = 0x4;
		constexpr auto cachedWaterString = 0x8;

		constexpr auto CalculateDamage = 0x7e5060;
		constexpr auto get_isAuthoritative = 0x7e9ea0;
		constexpr auto get_isAlive = 0x7e9e60;
		constexpr auto Retire = 0x7e8c50;
		constexpr auto Cleanup = 0x7e55b0;
		constexpr auto AdjustVelocity = 0x7e4df0;
		constexpr auto InitializeVelocity = 0x7e7e90;
		constexpr auto OnDisable = 0x7e8100;
		constexpr auto Update = 0x7e9ac0;
		constexpr auto SetEffectScale = 0x7e9220;
		constexpr auto DoFlybySound = 0x7e57b0;
		constexpr auto CalculateEffectScale = 0x7e5510;
		constexpr auto UpdateVelocity = 0x7e97e0;
		constexpr auto DoVelocityUpdate = 0x7e76a0;
		constexpr auto DoMovement = 0x7e64d0;
		constexpr auto DoWaterHit = 0x7e7a80;
		constexpr auto DoRicochet = 0x7e7280;
		constexpr auto DoHit = 0x7e5dc0;
		constexpr auto AdditiveImpactEffect = 0x477ed0;
		constexpr auto Reflect = 0x7e83d0;
		constexpr auto Refract = 0x7e8720;
		constexpr auto RandomRotation = 0x7e82d0;
		constexpr auto Launch = 0x7e8070;
		constexpr auto FleshMaterialID = 0x7e7d90;
		constexpr auto WaterMaterialID = 0x7e9bc0;
		constexpr auto IsWaterMaterial = 0x7e7f40;
		constexpr auto ShouldStopProjectile = 0x7e9720;
		constexpr auto ctor = 0x7e9cc0;
		constexpr auto cctor = 0x477ed0;
	};

	namespace PlayerEyes {
		constexpr auto DuckOffset = 0xc;
		constexpr auto CrawlOffset = 0x18;
		constexpr auto thirdPersonSleepingOffset = 0x20;
		constexpr auto defaultLazyAim = 0x30;
		constexpr auto viewOffset = 0x38;
		constexpr auto bodyRotationk__BackingField = 0x44;
		constexpr auto headAnglesk__BackingField = 0x54;
		constexpr auto rotationLookk__BackingField = 0x60;
		constexpr auto IsAltLookingLegsThresholdk__BackingField = 0x70;

		constexpr auto get_worldMountedPosition = 0x625980;
		constexpr auto get_worldStandingPosition = 0x625b70;
		constexpr auto get_worldCrouchedPosition = 0x625880;
		constexpr auto get_worldCrawlingPosition = 0x625780;
		constexpr auto get_position = 0x625240;
		constexpr auto get_BodyLeanOffset = 0x624900;
		constexpr auto get_center = 0x624c60;
		constexpr auto get_offset = 0x624f80;
		constexpr auto get_rotation = 0x6256d0;
		constexpr auto set_rotation = 0x625cd0;
		constexpr auto get_bodyRotation = 0x624b80;
		constexpr auto set_bodyRotation = 0x625ca0;
		constexpr auto get_headAngles = 0x624f60;
		constexpr auto set_headAngles = 0x625cb0;
		constexpr auto get_rotationLook = 0x6256c0;
		constexpr auto set_rotationLook = 0x625cc0;
		constexpr auto get_parentRotation = 0x6250b0;
		constexpr auto get_canUpdateViewAngles = 0x624b90;
		constexpr auto get_IsAltLookingLegsThreshold = 0x624b70;
		constexpr auto set_IsAltLookingLegsThreshold = 0x625c90;
		constexpr auto FrameUpdate = 0x623490;
		constexpr auto UpdateAltLegsThreshold = 0x624520;
		constexpr auto UpdateCamera = 0x624590;
		constexpr auto DoFirstPersonCamera = 0x6214d0;
		constexpr auto DoInEyeCamera = 0x621b20;
		constexpr auto DoThirdPersonCamera = 0x621e70;
		constexpr auto DoDeathCamera = 0x620ef0;
		constexpr auto ApplyCameraMoves = 0x6208c0;
		constexpr auto MovementForward = 0x6241a0;
		constexpr auto MovementRight = 0x624360;
		constexpr auto BodyRay = 0x620aa0;
		constexpr auto BodyForward = 0x620950;
		constexpr auto BodyRight = 0x620c50;
		constexpr auto BodyUp = 0x620da0;
		constexpr auto HeadRay = 0x623de0;
		constexpr auto HeadForward = 0x623cf0;
		constexpr auto HeadRight = 0x623fc0;
		constexpr auto HeadUp = 0x6240b0;
		constexpr auto GetLookRotation = 0x623b70;
		constexpr auto GetAimRotation = 0x623ab0;
		constexpr auto ctor = 0x624840;
		constexpr auto cctor = 0x624740;
	};

	namespace ViewModel {
		constexpr auto viewModelPrefab = 0x18;
		constexpr auto targetEntity = 0x20;
		constexpr auto instance = 0x28;

		constexpr auto Deploy = 0x870ec0;
		constexpr auto OnDisable = 0x871230;
		constexpr auto Holster = 0x8711c0;
		constexpr auto Clear = 0x870d50;
		constexpr auto OnFrame = 0x8712a0;
		constexpr auto Play = 0x871400;
		constexpr auto ResetTrigger = 0x871530;
		constexpr auto Trigger = 0x871840;
		constexpr auto CrossFade = 0x870e20;
		constexpr auto SetBool = 0x871660;
		constexpr auto SetFloat = 0x8717a0;
		constexpr auto set_ironSights = 0x871960;
		constexpr auto ctor = 0x49e630;
	};

	namespace BowWeapon {
		constexpr auto attackReady = 0x3a0;
		constexpr auto arrowBack = 0x3a4;
		constexpr auto swapArrows = 0x3a8;
		constexpr auto wasAiming = 0x3b0;

		constexpr auto OnRpcMessage = 0x915280;
		constexpr auto ClientInit = 0x9149e0;
		constexpr auto OnSignal = 0x915370;
		constexpr auto UpdatePullbackThink = 0x9157c0;
		constexpr auto CancelPullbackThink = 0x914970;
		constexpr auto PullbackThink = 0x915680;
		constexpr auto OnInput = 0x914f00;
		constexpr auto OnHolstered = 0x914ec0;
		constexpr auto DoAttack = 0x914a50;
		constexpr auto IsAiming = 0x914cf0;
		constexpr auto OnViewmodelEvent = 0x9154e0;
		constexpr auto OnFrame = 0x914d90;
		constexpr auto PostNetworkUpdate = 0x915550;
		constexpr auto TryReload = 0x915750;
		constexpr auto ProcessSpectatorViewmodel = 0x9155f0;
		constexpr auto ctor = 0x80b810;
	};

	namespace AttackEntity {
		constexpr auto deployDelay = 0x1f8;
		constexpr auto repeatDelay = 0x1fc;
		constexpr auto animationDelay = 0x200;
		constexpr auto effectiveRange = 0x204;
		constexpr auto npcDamageScale = 0x208;
		constexpr auto attackLengthMin = 0x20c;
		constexpr auto attackLengthMax = 0x210;
		constexpr auto attackSpacing = 0x214;
		constexpr auto aiAimSwayOffset = 0x218;
		constexpr auto aiAimCone = 0x21c;
		constexpr auto aiOnlyInRange = 0x220;
		constexpr auto CloseRangeAddition = 0x224;
		constexpr auto MediumRangeAddition = 0x228;
		constexpr auto LongRangeAddition = 0x22c;
		constexpr auto CanUseAtMediumRange = 0x230;
		constexpr auto CanUseAtLongRange = 0x231;
		constexpr auto reloadSounds = 0x238;
		constexpr auto thirdPersonMeleeSound = 0x240;
		constexpr auto recoilCompDelayOverride = 0x248;
		constexpr auto wantsRecoilComp = 0x24c;
		constexpr auto nextAttackTime = 0x250;
		constexpr auto lastTickTime = 0x254;
		constexpr auto nextTickTime = 0x258;
		constexpr auto timeSinceDeploy = 0x25c;
		constexpr auto lastRecoilCompTime = 0x260;
		constexpr auto startAimingDirection = 0x264;
		constexpr auto wasDoingRecoilComp = 0x270;
		constexpr auto reductionSpeed = 0x274;

		constexpr auto GetInheritedVelocity = 0x9f6ca0;
		constexpr auto get_NextAttackTime = 0x9f71d0;
		constexpr auto GetAttackStats = 0x477ed0;
		constexpr auto StartAttackCooldownRaw = 0x9f6f10;
		constexpr auto StartAttackCooldown = 0x9f6f40;
		constexpr auto ResetAttackCooldown = 0x9f6eb0;
		constexpr auto HasAttackCooldown = 0x9f6d10;
		constexpr auto GetAttackCooldown = 0x9f6ba0;
		constexpr auto GetAttackIdle = 0x9f6c20;
		constexpr auto CalculateCooldownTime = 0x9f5fd0;
		constexpr auto IsFullyDeployed = 0x9f6d40;
		constexpr auto ProcessInputTime = 0x9f6de0;
		constexpr auto OnInput = 0x9f6d80;
		constexpr auto OnDeploy = 0x9f6d60;
		constexpr auto SpectatorNotifyDeploy = 0x9f6ec0;
		constexpr auto SpectatorNotifyTick = 0x9f6ed0;
		constexpr auto RecoilCompReady = 0x9f6e30;
		constexpr auto AddPunch = 0x9f5e20;
		constexpr auto DoRecoilCompensation = 0x9f6110;
		constexpr auto ctor = 0x9f70e0;
		constexpr auto cctor = 0x9f7070;
	};

	namespace BaseEntity {
		constexpr auto ragdoll = 0x78;
		constexpr auto positionLerp = 0x80;
		constexpr auto menuOptions = 0x88;
		constexpr auto globalBroadcastProtocol = 0x8;
		constexpr auto broadcastProtocol = 0x90;
		constexpr auto links = 0x98;
		constexpr auto linkedToNeighbours = 0xa0;
		constexpr auto QueuedFileRequests = 0x10;
		constexpr auto _fileRequestCounter = 0x18;
		constexpr auto _flushQueuedFileRequests = 0x30;
		constexpr auto _pendingFileRequests = 0xa8;
		constexpr auto updateParentingAction = 0xb0;
		constexpr auto addedToParentEntity = 0xb8;
		constexpr auto itemSkin = 0xc0;
		constexpr auto entitySlots = 0xc8;
		constexpr auto triggers = 0xd0;
		constexpr auto isVisible = 0xd8;
		constexpr auto isAnimatorVisible = 0xd9;
		constexpr auto isShadowVisible = 0xda;
		constexpr auto localOccludee = 0xe0;
		constexpr auto Weightk__BackingField = 0x100;
		constexpr auto bounds = 0x104;
		constexpr auto impactEffect = 0x120;
		constexpr auto enableSaving = 0x128;
		constexpr auto syncPosition = 0x129;
		constexpr auto model = 0x130;
		constexpr auto flags = 0x138;
		constexpr auto parentBone = 0x13c;
		constexpr auto skinID = 0x140;
		constexpr auto _components = 0x148;
		constexpr auto HasBrain = 0x150;
		constexpr auto _name = 0x158;
		constexpr auto OwnerIDk__BackingField = 0x160;

		constexpr auto OnRpcMessage = 0xca2ee0;
		constexpr auto GetEntityMenu = 0xc9e160;
		constexpr auto GetMenuOptions = 0x477ed0;
		constexpr auto get_HasMenuOptions = 0x59bd20;
		constexpr auto GetItemOptions = 0xc9e910;
		constexpr auto GetMovementModify = 0xc9f360;
		constexpr auto GetExtrapolationTime = 0xc9e2a0;
		constexpr auto GetInterpolationDelay = 0xc9e760;
		constexpr auto GetInterpolationInertia = 0xc9e7f0;
		constexpr auto GetInterpolationSmoothing = 0xc9e880;
		constexpr auto GetAngularVelocityClient = 0xc9dc00;
		constexpr auto GetLocalVelocityClient = 0xc9eb60;
		constexpr auto DrawInterpolationState = 0xc9bc70;
		constexpr auto LerpIdleDisable = 0xca1690;
		constexpr auto ClientInit = 0xc9aec0;
		constexpr auto ClientOnEnable = 0xc9af70;
		constexpr auto OnPositionalFromNetwork = 0xca2b70;
		constexpr auto StartLerping = 0xca6110;
		constexpr auto StopLerping = 0xca6290;
		constexpr auto ShouldLerp = 0xca5d00;
		constexpr auto SetNetworkPosition = 0xca57f0;
		constexpr auto SetNetworkRotation = 0xca5960;
		constexpr auto DoDestroyEffects = 0xc9bc50;
		constexpr auto SpawnGibs = 0xca5e00;
		constexpr auto DoNetworkDestroy = 0x4a0520;
		constexpr auto PostNetworkUpdate = 0xca42a0;
		constexpr auto OnBecameRagdoll = 0xca28b0;
		constexpr auto GetMenuInformation = 0xc9ece0;
		constexpr auto HideMenuItems = 0xca00b0;
		constexpr auto GetMenuItems = 0xc9efd0;
		constexpr auto OnUse = 0xca4090;
		constexpr auto OnUseHeld = 0xca3e70;
		constexpr auto OnUseStopped = 0x477ed0;
		constexpr auto OnRendered = 0x477ed0;
		constexpr auto DoClientDestroy = 0xc9b9a0;
		constexpr auto GetEyeTransform = 0xc9e330;
		constexpr auto NeedsCrosshair = 0xca27a0;
		constexpr auto AlwaysShowCrosshair = 0x59bd20;
		constexpr auto ShouldDestroyWithGroup = 0xca5c50;
		constexpr auto DetachEffects = 0xc9b590;
		constexpr auto OnVoiceData = 0x477ed0;
		constexpr auto LookingAtTick = 0x477ed0;
		constexpr auto get_RealisticMass = 0x5b08f0;
		constexpr auto OnCollision = 0xca2960;
		constexpr auto ReceiveCollisionMessages = 0xca4390;
		constexpr auto DebugClient = 0x477ed0;
		constexpr auto OnDebugStart = 0xca29b0;
		constexpr auto DebugText = 0xc9b4d0;
		constexpr auto HasFlag = 0xca0070;
		constexpr auto ParentHasFlag = 0xca4200;
		constexpr auto SetFlag = 0xca5620;
		constexpr auto IsOn = 0xca06c0;
		constexpr auto IsOpen = 0xca06d0;
		constexpr auto IsOnFire = 0xca06b0;
		constexpr auto IsLocked = 0xca0400;
		constexpr auto IsDebugging = 0xca0210;
		constexpr auto IsDisabled = 0xca0220;
		constexpr auto IsBroken = 0xca0200;
		constexpr auto IsBusy = 0xca00b0;
		constexpr auto GetLogColor = 0xc9ec90;
		constexpr auto OnFlagsChanged = 0xca2a70;
		constexpr auto IsOccupied = 0xca0500;
		constexpr auto FindLink = 0xc9cbd0;
		constexpr auto EntityLinkBroadcast = 0xc9c6b0;
		constexpr auto ReceivedEntityLinkBroadcast = 0xca4420;
		constexpr auto GetEntityLinks = 0xc9e120;
		constexpr auto LinkToEntity = 0xca16c0;
		constexpr auto LinkToNeighbours = 0xca1920;
		constexpr auto InitEntityLinks = 0xca00c0;
		constexpr auto FreeEntityLinks = 0xc9db20;
		constexpr auto RefreshEntityLinks = 0xca4490;
		constexpr auto RequestFileFromServer = 0xca4d40;
		constexpr auto EnqueueFileRequest = 0xc9c360;
		constexpr auto RequestFileImpl = 0xca4e40;
		constexpr auto FlushQueuedFileRequests = 0xc9ceb0;
		constexpr auto CL_ReceiveFileRequest = 0xc9abd0;
		constexpr auto CompletePendingFileRequests = 0xc9b170;
		constexpr auto UpdateChildren = 0xca6450;
		constexpr auto UpdateParenting = 0xca7220;
		constexpr auto SetParentTransform = 0xca5a30;
		constexpr auto UpdateDisableState = 0xca67c0;
		constexpr auto HasClientTransformOffset = 0xc9fed0;
		constexpr auto RemoveClientTransformOffset = 0xca47a0;
		constexpr auto AddClientTransformOffset = 0xc9a590;
		constexpr auto OnParentChangingClient = 0x477ed0;
		constexpr auto GetBuildingPrivilege = 0xc9e0b0;
		constexpr auto ServerRPC = 0xca52e0;
		constexpr auto ServerRPCStart = 0xca5130;
		constexpr auto ServerRPCSend = 0xca50c0;
		constexpr auto CL_RPCMessage = 0xc9a8e0;
		constexpr auto SendSignalBroadcast = 0xca5010;
		constexpr auto SignalFromServerEx = 0xca5d20;
		constexpr auto SignalFromServer = 0xca5db0;
		constexpr auto OnSignal = 0x477ed0;
		constexpr auto OnSkinChanged = 0xca3ae0;
		constexpr auto OnSkinRefreshStart = 0xca3e50;
		constexpr auto OnSkinRefreshEnd = 0xca3e30;
		constexpr auto PreProcess = 0xca42c0;
		constexpr auto HasAnySlot = 0xc9fdf0;
		constexpr auto GetSlot = 0xc9f970;
		constexpr auto GetSlotAnchorName = 0xc9f830;
		constexpr auto GetSlotAnchor = 0xc9f8c0;
		constexpr auto HasSlot = 0x59bd20;
		constexpr auto get_Traits = 0x5907f0;
		constexpr auto HasTrait = 0xca0080;
		constexpr auto HasAnyTrait = 0xc9fea0;
		constexpr auto EnterTrigger = 0xc9c600;
		constexpr auto LeaveTrigger = 0xca15f0;
		constexpr auto RemoveFromTriggers = 0xca4800;
		constexpr auto ForceUpdateTriggersAction = 0xc9d0a0;
		constexpr auto ForceUpdateTriggers = 0xc9d0d0;
		constexpr auto MakeVisible = 0xca2780;
		constexpr auto UpdateCullingSpheres = 0xca6640;
		constexpr auto RegisterForCulling = 0xca4570;
		constexpr auto OnVisibilityChanged = 0x477ed0;
		constexpr auto UnregisterFromCulling = 0xca63d0;
		constexpr auto UpdateCullingBounds = 0xca6570;
		constexpr auto CheckVisibility = 0xc9aea0;
		constexpr auto CalcEntityVisUpdateRate = 0xc9ad80;
		constexpr auto DebugDrawCullingBounds = 0xc9b400;
		constexpr auto get_Weight = 0xca7a40;
		constexpr auto set_Weight = 0xca7a60;
		constexpr auto get_Components = 0xca79c0;
		constexpr auto ToPlayer = 0x5907f0;
		constexpr auto get_IsNpc = 0x59bd20;
		constexpr auto InitShared = 0xc91d00;
		constexpr auto DestroyShared = 0xc97520;
		constexpr auto ResetState = 0xca4fa0;
		constexpr auto InheritedVelocityScale = 0x6630b0;
		constexpr auto InheritedVelocityDirection = 0x58eed0;
		constexpr auto GetInheritedProjectileVelocity = 0xc9e4a0;
		constexpr auto GetInheritedThrowVelocity = 0xc9e730;
		constexpr auto GetInheritedDropVelocity = 0xc9e3c0;
		constexpr auto GetParentVelocity = 0xc9f570;
		constexpr auto GetWorldVelocity = 0xc9f9d0;
		constexpr auto GetLocalVelocity = 0xc9ebf0;
		constexpr auto GetAngularVelocity = 0xc9dc90;
		constexpr auto WorldSpaceBounds = 0xca76c0;
		constexpr auto PivotPoint = 0x49ee20;
		constexpr auto CenterPoint = 0xc9ae60;
		constexpr auto ClosestPoint = 0xc9b0c0;
		constexpr auto TriggerPoint = 0xc9ae60;
		constexpr auto Distance = 0xc9b860;
		constexpr auto SqrDistance = 0xca5fd0;
		constexpr auto Distance2D = 0xc9b6c0;
		constexpr auto SqrDistance2D = 0xca5e30;
		constexpr auto IsVisible = 0xca1230;
		constexpr auto IsVisibleSpecificLayers = 0xca0be0;
		constexpr auto IsVisibleAndCanSee = 0xca09d0;
		constexpr auto IsOlderThan = 0xca0610;
		constexpr auto IsOutside = 0xca06e0;
		constexpr auto WaterFactor = 0xca7230;
		constexpr auto AirFactor = 0xc9a630;
		constexpr auto WaterTestFromVolumes = 0xca7400;
		constexpr auto IsInWaterVolume = 0xca02c0;
		constexpr auto BlocksWaterFor = 0x59bd20;
		constexpr auto Health = 0x6630b0;
		constexpr auto MaxHealth = 0x6630b0;
		constexpr auto MaxVelocity = 0x6630b0;
		constexpr auto BoundsPadding = 0xc9a670;
		constexpr auto PenetrationResistance = 0x5b08f0;
		constexpr auto GetImpactEffect = 0xa71310;
		constexpr auto OnAttacked = 0x477ed0;
		constexpr auto GetItem = 0x5907f0;
		constexpr auto GiveItem = 0xc9fdc0;
		constexpr auto CanBeLooted = 0x58eed0;
		constexpr auto GetEntity = 0x5b6450;
		constexpr auto ToString = 0xca62e0;
		constexpr auto Categorize = 0xc9ae30;
		constexpr auto Log = 0xca22d0;
		constexpr auto SetModel = 0xca5740;
		constexpr auto GetModel = 0x9d1730;
		constexpr auto GetBones = 0xc9dd30;
		constexpr auto FindBone = 0xc9ca60;
		constexpr auto FindBoneID = 0xc9c980;
		constexpr auto FindClosestBone = 0xc9cb10;
		constexpr auto get_OwnerID = 0xca7a30;
		constexpr auto set_OwnerID = 0xca7a50;
		constexpr auto ShouldBlockProjectiles = 0x58eed0;
		constexpr auto ShouldInheritNetworkGroup = 0x58eed0;
		constexpr auto SupportsChildDeployables = 0x59bd20;
		constexpr auto BroadcastEntityMessage = 0xc9a680;
		constexpr auto OnEntityMessage = 0x477ed0;
		constexpr auto Load = 0xca1c10;
		constexpr auto ctor = 0xca78b0;
		constexpr auto cctor = 0xca7800;
	};

	namespace UnityEngine_Time {

		constexpr auto get_time = 0x242f730;
		constexpr auto get_deltaTime = 0x242f580;
		constexpr auto get_fixedTime = 0x242f5e0;
		constexpr auto get_unscaledTime = 0x242f790;
		constexpr auto get_unscaledDeltaTime = 0x242f760;
		constexpr auto get_fixedDeltaTime = 0x242f5b0;
		constexpr auto set_fixedDeltaTime = 0x242f7c0;
		constexpr auto get_maximumDeltaTime = 0x242f640;
		constexpr auto set_maximumDeltaTime = 0x242f800;
		constexpr auto get_smoothDeltaTime = 0x242f6d0;
		constexpr auto get_timeScale = 0x242f700;
		constexpr auto set_timeScale = 0x242f840;
		constexpr auto get_frameCount = 0x242f610;
		constexpr auto get_renderedFrameCount = 0x242f6a0;
		constexpr auto get_realtimeSinceStartup = 0x242f670;
	};

	namespace UnityEngine_Physics {

		constexpr auto get_gravity = 0x253e390;
		constexpr auto get_queriesHitBackfaces = 0x253e3d0;
		constexpr auto set_queriesHitBackfaces = 0x253e440;
		constexpr auto get_defaultPhysicsScene = 0x253e310;
		constexpr auto IgnoreCollision = 0x253abc0;
		constexpr auto Raycast = 0x253cb30;
		constexpr auto Linecast = 0x253ad00;
		constexpr auto CapsuleCast = 0x253a400;
		constexpr auto SphereCast = 0x253dda0;
		constexpr auto BoxCast = 0x2539e40;
		constexpr auto Internal_RaycastAll = 0x253ac90;
		constexpr auto RaycastAll = 0x253b870;
		constexpr auto RaycastNonAlloc = 0x253bf90;
		constexpr auto Query_SphereCastAll = 0x253b710;
		constexpr auto SphereCastAll = 0x253d810;
		constexpr auto SyncTransforms = 0x253e270;
		constexpr auto get_autoSyncTransforms = 0x253e2a0;
		constexpr auto set_autoSyncTransforms = 0x253e400;
		constexpr auto OverlapSphereNonAlloc = 0x253b5e0;
		constexpr auto CheckSphere_Internal = 0x253a9e0;
		constexpr auto CheckSphere = 0x253aa50;
		constexpr auto CapsuleCastNonAlloc = 0x253a1a0;
		constexpr auto SphereCastNonAlloc = 0x253d9a0;
		constexpr auto CheckCapsule_Internal = 0x253a740;
		constexpr auto CheckCapsule = 0x253a7b0;
		constexpr auto CheckBox_Internal = 0x253a580;
		constexpr auto CheckBox = 0x253a5f0;
		constexpr auto OverlapBox_Internal = 0x253b2c0;
		constexpr auto OverlapBox = 0x253b330;
		constexpr auto OverlapBoxNonAlloc = 0x253b160;
		constexpr auto OverlapCapsuleNonAlloc = 0x253b4f0;
		constexpr auto get_gravity_Injected = 0x253e350;
		constexpr auto get_defaultPhysicsScene_Injected = 0x253e2d0;
		constexpr auto Internal_RaycastAll_Injected = 0x253ac20;
		constexpr auto Query_SphereCastAll_Injected = 0x253b6a0;
		constexpr auto CheckSphere_Internal_Injected = 0x253a970;
		constexpr auto CheckCapsule_Internal_Injected = 0x253a6d0;
		constexpr auto CheckBox_Internal_Injected = 0x253a510;
		constexpr auto OverlapBox_Internal_Injected = 0x253b250;
	};

	namespace AssetNameCache {
		constexpr auto lower = 0x8;
		constexpr auto upper = 0x10;

		constexpr auto LookupName = 0x9f25b0;
		constexpr auto LookupNameLower = 0x9f22f0;
		constexpr auto LookupNameUpper = 0x9f2450;
		constexpr auto GetName = 0x9f2230;
		constexpr auto GetNameLower = 0x9f20b0;
		constexpr auto GetNameUpper = 0x9f2170;
		constexpr auto cctor = 0x9f26f0;
	};

	namespace UnityEngine_Component {

		constexpr auto get_transform = 0x1a6f9d0;
		constexpr auto get_gameObject = 0x1a6f990;
		constexpr auto GetComponent = 0x1a6f570;
		constexpr auto GetComponentFastPath = 0x1a6f400;
		constexpr auto GetComponentInChildren = 0x1a6f460;
		constexpr auto GetComponentsInChildren = 0x1a6f650;
		constexpr auto GetComponentInParent = 0x1a6f4f0;
		constexpr auto GetComponents = 0x1a6f6b0;
		constexpr auto GetComponentsForListInternal = 0x1a6f5f0;
		constexpr auto CompareTag = 0x1a6f380;
		constexpr auto SendMessageUpwards = 0x1a6f7a0;
		constexpr auto SendMessage = 0x1a6f8e0;
		constexpr auto BroadcastMessage = 0x1a6f310;
		constexpr auto ctor = 0x1a69d60;
	};

	namespace UnityEngine_Transform {

		constexpr auto ctor = 0x1b76a00;
		constexpr auto get_position = 0x24325d0;
		constexpr auto set_position = 0x2432f50;
		constexpr auto get_localPosition = 0x24322a0;
		constexpr auto set_localPosition = 0x2432cc0;
		constexpr auto get_eulerAngles = 0x2431fa0;
		constexpr auto set_eulerAngles = 0x2432a10;
		constexpr auto get_localEulerAngles = 0x24321c0;
		constexpr auto set_localEulerAngles = 0x2432bc0;
		constexpr auto get_right = 0x2432620;
		constexpr auto set_right = 0x2432fa0;
		constexpr auto get_up = 0x2432810;
		constexpr auto set_up = 0x2433190;
		constexpr auto get_forward = 0x2432030;
		constexpr auto set_forward = 0x2432ac0;
		constexpr auto get_rotation = 0x24327c0;
		constexpr auto set_rotation = 0x2433140;
		constexpr auto get_localRotation = 0x2432340;
		constexpr auto set_localRotation = 0x2432d60;
		constexpr auto get_localScale = 0x24323e0;
		constexpr auto set_localScale = 0x2432e00;
		constexpr auto get_parent = 0x24309c0;
		constexpr auto set_parent = 0x2432e50;
		constexpr auto get_parentInternal = 0x24309c0;
		constexpr auto set_parentInternal = 0x24319a0;
		constexpr auto GetParent = 0x24309c0;
		constexpr auto SetParent = 0x24319a0;
		constexpr auto get_worldToLocalMatrix = 0x24329b0;
		constexpr auto get_localToWorldMatrix = 0x2432480;
		constexpr auto SetPositionAndRotation = 0x2431a50;
		constexpr auto Translate = 0x2431d90;
		constexpr auto Rotate = 0x24313b0;
		constexpr auto RotateAroundInternal = 0x2431110;
		constexpr auto RotateAround = 0x2431170;
		constexpr auto LookAt = 0x2430f40;
		constexpr auto Internal_LookAt = 0x2430ae0;
		constexpr auto TransformDirection = 0x2431b50;
		constexpr auto InverseTransformDirection = 0x2430ba0;
		constexpr auto TransformVector = 0x2431cd0;
		constexpr auto InverseTransformVector = 0x2430d20;
		constexpr auto TransformPoint = 0x2431c10;
		constexpr auto InverseTransformPoint = 0x2430c60;
		constexpr auto get_root = 0x2430a00;
		constexpr auto GetRoot = 0x2430a00;
		constexpr auto get_childCount = 0x2431f60;
		constexpr auto DetachChildren = 0x24307d0;
		constexpr auto SetAsFirstSibling = 0x24318c0;
		constexpr auto SetAsLastSibling = 0x2431900;
		constexpr auto SetSiblingIndex = 0x2431ab0;
		constexpr auto GetSiblingIndex = 0x2430a40;
		constexpr auto FindRelativeTransformWithPath = 0x2430810;
		constexpr auto Find = 0x2430870;
		constexpr auto get_lossyScale = 0x2432530;
		constexpr auto IsChildOf = 0x2430d80;
		constexpr auto get_hasChanged = 0x2432180;
		constexpr auto set_hasChanged = 0x2432b70;
		constexpr auto GetEnumerator = 0x2430950;
		constexpr auto GetChild = 0x2430910;
		constexpr auto get_position_Injected = 0x2432580;
		constexpr auto set_position_Injected = 0x2432f00;
		constexpr auto get_localPosition_Injected = 0x2432250;
		constexpr auto set_localPosition_Injected = 0x2432c70;
		constexpr auto get_rotation_Injected = 0x2432770;
		constexpr auto set_rotation_Injected = 0x24330f0;
		constexpr auto get_localRotation_Injected = 0x24322f0;
		constexpr auto set_localRotation_Injected = 0x2432d10;
		constexpr auto get_localScale_Injected = 0x2432390;
		constexpr auto set_localScale_Injected = 0x2432db0;
		constexpr auto get_worldToLocalMatrix_Injected = 0x2432960;
		constexpr auto get_localToWorldMatrix_Injected = 0x2432430;
		constexpr auto SetPositionAndRotation_Injected = 0x24319f0;
		constexpr auto RotateAroundInternal_Injected = 0x24310b0;
		constexpr auto Internal_LookAt_Injected = 0x2430a80;
		constexpr auto TransformDirection_Injected = 0x2431af0;
		constexpr auto InverseTransformDirection_Injected = 0x2430b40;
		constexpr auto TransformVector_Injected = 0x2431c70;
		constexpr auto InverseTransformVector_Injected = 0x2430cc0;
		constexpr auto TransformPoint_Injected = 0x2431bb0;
		constexpr auto InverseTransformPoint_Injected = 0x2430c00;
		constexpr auto get_lossyScale_Injected = 0x24324e0;
	};

	namespace GameTrace {

		constexpr auto TraceAll = 0xacf270;
		constexpr auto Trace = 0xacfb70;
	};

	namespace HitTest {
		constexpr auto type = 0x10;
		constexpr auto AttackRay = 0x14;
		constexpr auto Radius = 0x2c;
		constexpr auto Forgiveness = 0x30;
		constexpr auto MaxDistance = 0x34;
		constexpr auto RayHit = 0x38;
		constexpr auto MultiHit = 0x64;
		constexpr auto BestHit = 0x65;
		constexpr auto DidHit = 0x66;
		constexpr auto damageProperties = 0x68;
		constexpr auto gameObject = 0x70;
		constexpr auto collider = 0x78;
		constexpr auto ignoreEntity = 0x80;
		constexpr auto HitEntity = 0x88;
		constexpr auto HitPoint = 0x90;
		constexpr auto HitNormal = 0x9c;
		constexpr auto HitDistance = 0xa8;
		constexpr auto HitTransform = 0xb0;
		constexpr auto HitPart = 0xb8;
		constexpr auto HitMaterial = 0xc0;

		constexpr auto HitPointWorld = 0x8ad8a0;
		constexpr auto HitNormalWorld = 0x8ad780;
		constexpr auto BuildAttackMessage = 0x8acef0;
		constexpr auto Clear = 0x8ad6a0;
		constexpr auto ctor = 0x4a0520;
	};

	namespace UnityEngine_Quaternion {
		constexpr auto x = 0x10;
		constexpr auto y = 0x14;
		constexpr auto z = 0x18;
		constexpr auto w = 0x1c;

		constexpr auto FromToRotation = 0x1b7d510;
		constexpr auto Inverse = 0x1b7d900;
		constexpr auto Slerp = 0x1b7e380;
		constexpr auto SlerpUnclamped = 0x1b7e260;
		constexpr auto Lerp = 0x1b7db30;
		constexpr auto LerpUnclamped = 0x1b7da10;
		constexpr auto Internal_FromEulerRad = 0x1b7d670;
		constexpr auto Internal_ToEulerRad = 0x1b7d820;
		constexpr auto AngleAxis = 0x1b7cef0;
		constexpr auto LookRotation = 0x1b7dd90;
		constexpr auto ctor = 0xfc340;
		constexpr auto get_identity = 0x1b7e880;
		constexpr auto op_Multiply = 0x1b7eca0;
		constexpr auto IsEqualUsingDot = 0x1b7d990;
		constexpr auto op_Equality = 0x1b7e8f0;
		constexpr auto op_Inequality = 0x1b7e9b0;
		constexpr auto Dot = 0x1b7d0b0;
		constexpr auto SetLookRotation = 0x30f110;
		constexpr auto Angle = 0x1b7cf90;
		constexpr auto Internal_MakePositive = 0x1b7d700;
		constexpr auto get_eulerAngles = 0x30f230;
		constexpr auto Euler = 0x1b7d1e0;
		constexpr auto RotateTowards = 0x1b7de30;
		constexpr auto GetHashCode = 0x30f0a0;
		constexpr auto Equals = 0x30efc0;
		constexpr auto ToString = 0x30f220;
		constexpr auto cctor = 0x1b7e670;
		constexpr auto FromToRotation_Injected = 0x1b7d4b0;
		constexpr auto Inverse_Injected = 0x1b7d8b0;
		constexpr auto Slerp_Injected = 0x1b7e310;
		constexpr auto SlerpUnclamped_Injected = 0x1b7e1f0;
		constexpr auto Lerp_Injected = 0x1b7dac0;
		constexpr auto LerpUnclamped_Injected = 0x1b7d9a0;
		constexpr auto Internal_FromEulerRad_Injected = 0x1b7d620;
		constexpr auto Internal_ToEulerRad_Injected = 0x1b7d7d0;
		constexpr auto AngleAxis_Injected = 0x1b7ce90;
		constexpr auto LookRotation_Injected = 0x1b7dbe0;
	};

	namespace GamePhysics {
		constexpr auto hitBufferB = 0x8;
		constexpr auto colBuffer = 0x10;

		constexpr auto CheckSphere = 0x8c8d30;
		constexpr auto CheckCapsule = 0x8c82c0;
		constexpr auto CheckOBB = 0x8c8c00;
		constexpr auto CheckOBBAndEntity = 0x8c8980;
		constexpr auto CheckBounds = 0x8c8160;
		constexpr auto CheckInsideNonConvexMesh = 0x8c85d0;
		constexpr auto CheckInsideAnyCollider = 0x8c8440;
		constexpr auto OverlapSphere = 0x8ca160;
		constexpr auto CapsuleSweep = 0x8c7ec0;
		constexpr auto OverlapCapsule = 0x8c9ee0;
		constexpr auto OverlapOBB = 0x8ca010;
		constexpr auto OverlapBounds = 0x8c9d40;
		constexpr auto BufferToList = 0x8c7d20;
		constexpr auto HitBufferToList = 0x8c8f90;
		constexpr auto Trace = 0x8ca810;
		constexpr auto TraceAll = 0x8ca730;
		constexpr auto TraceAllUnordered = 0x8ca440;
		constexpr auto LineOfSightRadius = 0x8c9920;
		constexpr auto LineOfSight = 0x8c9b10;
		constexpr auto LineOfSightInternal = 0x8c9100;
		constexpr auto Verify = 0x8caa20;
		constexpr auto CompareEntity = 0x8c8df0;
		constexpr auto HandleTerrainCollision = 0x8c8e80;
		constexpr auto Sort = 0x8ca340;
		constexpr auto cctor = 0x8cacd0;
	};

	namespace WaterLevel {

		constexpr auto Factor = 0xcafec0;
		constexpr auto Test = 0xcb2070;
		constexpr auto GetWaterDepth = 0xcb0790;
		constexpr auto GetOverallWaterDepth = 0xcb0640;
		constexpr auto GetBuoyancyWaterInfo = 0xcb00a0;
		constexpr auto GetWaterInfo = 0xcb0b20;
		constexpr auto GetWaterInfoFromVolumes = 0xcb08d0;
	};

	namespace System_Math {
		constexpr auto roundPower10Double = 0x8;

		constexpr auto Acos = 0x185acd0;
		constexpr auto Asin = 0x185ace0;
		constexpr auto Atan = 0x185ad00;
		constexpr auto Atan2 = 0x185acf0;
		constexpr auto Ceiling = 0x185ad10;
		constexpr auto Cos = 0x185ad20;
		constexpr auto Cosh = 0x185ad30;
		constexpr auto Floor = 0x185ad60;
		constexpr auto InternalRound = 0x185ad70;
		constexpr auto InternalTruncate = 0x185afd0;
		constexpr auto Sin = 0x185bb20;
		constexpr auto Tan = 0x185bb60;
		constexpr auto Sinh = 0x185bb30;
		constexpr auto Round = 0x185b800;
		constexpr auto SplitFractionDouble = 0x185bb40;
		constexpr auto Truncate = 0x185bb70;
		constexpr auto Sqrt = 0x185bb50;
		constexpr auto Log = 0x185b1a0;
		constexpr auto Log10 = 0x185b030;
		constexpr auto Exp = 0x185ad50;
		constexpr auto Pow = 0x185b5b0;
		constexpr auto Abs = 0x185ac00;
		constexpr auto AbsHelper = 0x185aaa0;
		constexpr auto Max = 0x185b250;
		constexpr auto Min = 0x185b5a0;
		constexpr auto Sign = 0x185bae0;
		constexpr auto DivRem = 0x185ad40;
		constexpr auto cctor = 0x185bc20;
	};

	namespace UnityEngine_Mathf {

		constexpr auto ClosestPowerOfTwo = 0x1b6d1b0;
		constexpr auto IsPowerOfTwo = 0x1b6d5d0;
		constexpr auto NextPowerOfTwo = 0x1b6dda0;
		constexpr auto GammaToLinearSpace = 0x1b6d4a0;
		constexpr auto LinearToGammaSpace = 0x1b6d830;
		constexpr auto FloatToHalf = 0x1b6d3a0;
		constexpr auto HalfToFloat = 0x1b6d4e0;
		constexpr auto PerlinNoise = 0x1b6dde0;
		constexpr auto Sin = 0x1b6e030;
		constexpr auto Cos = 0x1b6d1f0;
		constexpr auto Tan = 0x1b6e510;
		constexpr auto Asin = 0x1b6cf50;
		constexpr auto Acos = 0x1b6ce40;
		constexpr auto Atan = 0x1b6d030;
		constexpr auto Atan2 = 0x1b6cfb0;
		constexpr auto Sqrt = 0x1b6e4b0;
		constexpr auto Abs = 0x1b6cde0;
		constexpr auto Min = 0x1b6da40;
		constexpr auto Max = 0x1b6d9b0;
		constexpr auto Pow = 0x1b6de30;
		constexpr auto Exp = 0x1b6d340;
		constexpr auto Log = 0x1b6d930;
		constexpr auto Log10 = 0x1b6d870;
		constexpr auto Ceil = 0x1b6d0f0;
		constexpr auto Floor = 0x1b6d440;
		constexpr auto Round = 0x1b6dfb0;
		constexpr auto CeilToInt = 0x1b6d090;
		constexpr auto FloorToInt = 0x1b6d3e0;
		constexpr auto RoundToInt = 0x1b6df50;
		constexpr auto Sign = 0x1b6e010;
		constexpr auto Clamp = 0x1b6d170;
		constexpr auto Clamp01 = 0x1b6d150;
		constexpr auto Lerp = 0x1b6d790;
		constexpr auto LerpUnclamped = 0x1b6d770;
		constexpr auto LerpAngle = 0x1b6d610;
		constexpr auto MoveTowards = 0x1b6dcb0;
		constexpr auto MoveTowardsAngle = 0x1b6da50;
		constexpr auto SmoothStep = 0x1b6e3f0;
		constexpr auto Approximately = 0x1b6cea0;
		constexpr auto SmoothDamp = 0x1b6e220;
		constexpr auto Repeat = 0x1b6deb0;
		constexpr auto InverseLerp = 0x1b6d520;
		constexpr auto DeltaAngle = 0x1b6d250;
		constexpr auto cctor = 0x1b6e570;
	};

	namespace Door {
		constexpr auto __menuOption_Menu_CloseDoor = 0x270;
		constexpr auto __menuOption_Menu_KnockDoor = 0x2c8;
		constexpr auto __menuOption_Menu_OpenDoor = 0x320;
		constexpr auto __menuOption_Menu_ToggleHatch = 0x378;
		constexpr auto knockEffect = 0x3d0;
		constexpr auto canTakeLock = 0x3d8;
		constexpr auto hasHatch = 0x3d9;
		constexpr auto canTakeCloser = 0x3da;
		constexpr auto canTakeKnocker = 0x3db;
		constexpr auto canNpcOpen = 0x3dc;
		constexpr auto canHandOpen = 0x3dd;
		constexpr auto isSecurityDoor = 0x3de;
		constexpr auto vehiclePhysBoxes = 0x3e0;
		constexpr auto checkPhysBoxesOnOpen = 0x3e8;
		constexpr auto vehicleCollisionSfx = 0x3f0;
		constexpr auto ClosedColliderRoots = 0x3f8;
		constexpr auto closeHash = 0x4;

		constexpr auto GetMenuOptions = 0xb3f500;
		constexpr auto get_HasMenuOptions = 0xb40fe0;
		constexpr auto OnRpcMessage = 0xb40930;
		constexpr auto ResetState = 0xb40d80;
		constexpr auto HasSlot = 0xb400f0;
		constexpr auto CanPickup = 0xb3f390;
		constexpr auto Menu_OpenDoor = 0xb404e0;
		constexpr auto Menu_OpenDoor_Proxy = 0xb403c0;
		constexpr auto Menu_OpenDoorStart = 0xb40380;
		constexpr auto Menu_OpenDoor_ShowIf = 0xb404a0;
		constexpr auto Menu_CloseDoor = 0xb40290;
		constexpr auto Menu_CloseDoor_Proxy = 0xb40170;
		constexpr auto Menu_CloseDoorStart = 0xb40130;
		constexpr auto Menu_CloseDoor_ShowIf = 0xb40250;
		constexpr auto Menu_KnockDoor = 0xb40340;
		constexpr auto Menu_KnockDoor_ShowIf = 0xb402d0;
		constexpr auto Menu_ToggleHatch = 0xb40530;
		constexpr auto Menu_ToggleHatch_ShowIf = 0xb40520;
		constexpr auto NeedsCrosshair = 0x58eed0;
		constexpr auto OnDoorInterrupted = 0xb40570;
		constexpr auto ReverseDoorAnimation = 0xb40d90;
		constexpr auto BoundsPadding = 0x670960;
		constexpr auto OnObjects = 0x477ed0;
		constexpr auto OnEmpty = 0x477ed0;
		constexpr auto OnFlagsChanged = 0xb40800;
		constexpr auto ctor = 0xb40fc0;
		constexpr auto cctor = 0xb40f50;
	};

	namespace UnityEngine_Object {
		constexpr auto m_CachedPtr = 0x10;

		constexpr auto GetInstanceID = 0x1b772f0;
		constexpr auto GetHashCode = 0x1b772e0;
		constexpr auto Equals = 0x1b76f00;
		constexpr auto op_Implicit = 0x1b78780;
		constexpr auto CompareBaseObjects = 0x1b76c10;
		constexpr auto IsNativeObjectAlive = 0x1b783d0;
		constexpr auto GetCachedPtr = 0x1a674c0;
		constexpr auto get_name = 0x1b785a0;
		constexpr auto set_name = 0x1b78a00;
		constexpr auto Instantiate = 0x1b77e50;
		constexpr auto Destroy = 0x1b76e00;
		constexpr auto DestroyImmediate = 0x1b76db0;
		constexpr auto FindObjectsOfType = 0x1b772a0;
		constexpr auto DontDestroyOnLoad = 0x1b76ec0;
		constexpr auto get_hideFlags = 0x1b78560;
		constexpr auto set_hideFlags = 0x1b789c0;
		constexpr auto CheckNullArgument = 0x1b76ba0;
		constexpr auto FindObjectOfType = 0x1b77210;
		constexpr auto ToString = 0x1b78470;
		constexpr auto op_Equality = 0x1b78610;
		constexpr auto op_Inequality = 0x1b78850;
		constexpr auto GetOffsetOfInstanceIDInCPlusPlusObject = 0x1b77460;
		constexpr auto Internal_CloneSingle = 0x1b78190;
		constexpr auto Internal_CloneSingleWithParent = 0x1b78130;
		constexpr auto Internal_InstantiateSingle = 0x1b78340;
		constexpr auto Internal_InstantiateSingleWithParent = 0x1b78240;
		constexpr auto GetName = 0x1b77420;
		constexpr auto SetName = 0x1b78420;
		constexpr auto FindObjectFromInstanceID = 0x1b771d0;
		constexpr auto ctor = 0x4a0520;
		constexpr auto cctor = 0x1b78520;
		constexpr auto Internal_InstantiateSingle_Injected = 0x1b782e0;
		constexpr auto Internal_InstantiateSingleWithParent_Injected = 0x1b781d0;
	};

	namespace BaseMelee {
		constexpr auto canThrowAsProjectile = 0x280;
		constexpr auto canAiHearIt = 0x281;
		constexpr auto onlyThrowAsProjectile = 0x282;
		constexpr auto damageProperties = 0x288;
		constexpr auto damageTypes = 0x290;
		constexpr auto maxDistance = 0x298;
		constexpr auto attackRadius = 0x29c;
		constexpr auto isAutomatic = 0x2a0;
		constexpr auto blockSprintOnAttack = 0x2a1;
		constexpr auto strikeFX = 0x2a8;
		constexpr auto useStandardHitEffects = 0x2b0;
		constexpr auto aiStrikeDelay = 0x2b4;
		constexpr auto swingEffect = 0x2b8;
		constexpr auto materialStrikeFX = 0x2c0;
		constexpr auto heartStress = 0x2c8;
		constexpr auto gathering = 0x2d0;
		constexpr auto throwReady = 0x2d8;

		constexpr auto OnRpcMessage = 0x8edbb0;
		constexpr auto GetInheritedVelocity = 0x8ed5f0;
		constexpr auto DoThrow = 0x8ece40;
		constexpr auto CreateProjectile = 0x8ec800;
		constexpr auto GetAttackStats = 0x8ed560;
		constexpr auto DoAttackShared = 0x8ec9b0;
		constexpr auto OnInput = 0x8ed7d0;
		constexpr auto get_CanAttack = 0x58eed0;
		constexpr auto get_CanThrow = 0x58eed0;
		constexpr auto ClientAttack = 0x477ed0;
		constexpr auto OnHolstered = 0x8ed7b0;
		constexpr auto ProcessAttack = 0x8edd60;
		constexpr auto DoAttack = 0x8ecc00;
		constexpr auto DoViewmodelImpact = 0x8ed4d0;
		constexpr auto OnViewmodelEvent = 0x8edca0;
		constexpr auto ProcessSpectatorViewmodel = 0x8ee0a0;
		constexpr auto ProcessSpectatorViewmodelEvent = 0x8edff0;
		constexpr auto GetGatherInfoFromIndex = 0x8ed5c0;
		constexpr auto CanHit = 0x58eed0;
		constexpr auto TotalDamage = 0x8ee150;
		constexpr auto CanBeUsedInWater = 0x58eed0;
		constexpr auto GetStrikeEffectPath = 0x8ed650;
		constexpr auto ctor = 0x8ee2b0;
	};

	namespace ItemModProjectile {
		constexpr auto projectileObject = 0x18;
		constexpr auto mods = 0x20;
		constexpr auto ammoType = 0x28;
		constexpr auto numProjectiles = 0x2c;
		constexpr auto projectileSpread = 0x30;
		constexpr auto projectileVelocity = 0x34;
		constexpr auto projectileVelocitySpread = 0x38;
		constexpr auto useCurve = 0x3c;
		constexpr auto spreadScalar = 0x40;
		constexpr auto attackEffectOverride = 0x48;
		constexpr auto barrelConditionLoss = 0x50;
		constexpr auto category = 0x58;

		constexpr auto GetRandomVelocity = 0xa59f10;
		constexpr auto GetSpreadScalar = 0xa59f50;
		constexpr auto GetIndexedSpreadScalar = 0xa59e80;
		constexpr auto GetAverageVelocity = 0xa59e70;
		constexpr auto GetMinVelocity = 0xa59f00;
		constexpr auto GetMaxVelocity = 0xa59ef0;
		constexpr auto IsAmmo = 0xa59fb0;
		constexpr auto ServerProjectileHit = 0xa59fc0;
		constexpr auto ctor = 0xa5a090;
	};

	namespace RecoilProperties {
		constexpr auto recoilYawMin = 0x18;
		constexpr auto recoilYawMax = 0x1c;
		constexpr auto recoilPitchMin = 0x20;
		constexpr auto recoilPitchMax = 0x24;
		constexpr auto timeToTakeMin = 0x28;
		constexpr auto timeToTakeMax = 0x2c;
		constexpr auto ADSScale = 0x30;
		constexpr auto movementPenalty = 0x34;
		constexpr auto clampPitch = 0x38;
		constexpr auto pitchCurve = 0x40;
		constexpr auto yawCurve = 0x48;
		constexpr auto useCurves = 0x50;
		constexpr auto curvesAsScalar = 0x51;
		constexpr auto shotsUntilMax = 0x54;
		constexpr auto maxRecoilRadius = 0x58;
		constexpr auto overrideAimconeWithCurve = 0x5c;
		constexpr auto aimconeCurveScale = 0x60;
		constexpr auto aimconeCurve = 0x68;
		constexpr auto aimconeProbabilityCurve = 0x70;
		constexpr auto newRecoilOverride = 0x78;

		constexpr auto GetRecoil = 0xa63490;
		constexpr auto ctor = 0xa63510;
	};

	namespace ItemDefinition {
		constexpr auto itemid = 0x18;
		constexpr auto shortname = 0x20;
		constexpr auto displayName = 0x28;
		constexpr auto displayDescription = 0x30;
		constexpr auto iconSprite = 0x38;
		constexpr auto category = 0x40;
		constexpr auto selectionPanel = 0x44;
		constexpr auto maxDraggable = 0x48;
		constexpr auto itemType = 0x4c;
		constexpr auto amountType = 0x50;
		constexpr auto occupySlots = 0x54;
		constexpr auto stackable = 0x58;
		constexpr auto quickDespawn = 0x5c;
		constexpr auto rarity = 0x60;
		constexpr auto despawnRarity = 0x64;
		constexpr auto spawnAsBlueprint = 0x68;
		constexpr auto inventoryGrabSound = 0x70;
		constexpr auto inventoryDropSound = 0x78;
		constexpr auto physImpactSoundDef = 0x80;
		constexpr auto condition = 0x88;
		constexpr auto hidden = 0xa0;
		constexpr auto flags = 0xa4;
		constexpr auto steamItem = 0xa8;
		constexpr auto steamDlc = 0xb0;
		constexpr auto Parent = 0xb8;
		constexpr auto worldModelPrefab = 0xc0;
		constexpr auto isRedirectOf = 0xc8;
		constexpr auto redirectVendingBehaviour = 0xd0;
		constexpr auto itemMods = 0xd8;
		constexpr auto Traits = 0xe0;
		constexpr auto skins = 0xe8;
		constexpr auto _skins2 = 0xf0;
		constexpr auto panel = 0xf8;
		constexpr auto ItemModWearablek__BackingField = 0x100;
		constexpr auto isHoldablek__BackingField = 0x108;
		constexpr auto isUsablek__BackingField = 0x109;
		constexpr auto CraftableWithSkink__BackingField = 0x10a;
		constexpr auto Children = 0x110;

		constexpr auto get_skins2 = 0xa505b0;
		constexpr auto InvalidateWorkshopSkinCache = 0xa50300;
		constexpr auto get_Blueprint = 0xa50410;
		constexpr auto get_craftingStackable = 0xa504d0;
		constexpr auto HasFlag = 0xa50080;
		constexpr auto Initialize = 0xa50090;
		constexpr auto GetDisplayName = 0xa4ff80;
		constexpr auto GetDescriptionText = 0xa4feb0;
		constexpr auto FindIconSprite = 0xa4fb50;
		constexpr auto get_isWearable = 0xa50550;
		constexpr auto get_ItemModWearable = 0xa504c0;
		constexpr auto set_ItemModWearable = 0xa507c0;
		constexpr auto get_isHoldable = 0xa50530;
		constexpr auto set_isHoldable = 0xa507d0;
		constexpr auto get_isUsable = 0xa50540;
		constexpr auto set_isUsable = 0xa507e0;
		constexpr auto get_HasSkins = 0xa50460;
		constexpr auto get_CraftableWithSkin = 0xa50450;
		constexpr auto set_CraftableWithSkin = 0xa507b0;
		constexpr auto ctor = 0xa503a0;
		constexpr auto Initializeb__45_0 = 0xa50320;
	};

	namespace PlayerInput {
		constexpr auto state = 0x20;
		constexpr auto hadInputBuffer = 0x28;
		constexpr auto bodyRotation = 0x2c;
		constexpr auto bodyAngles = 0x3c;
		constexpr auto headRotation = 0x48;
		constexpr auto headAngles = 0x58;
		constexpr auto recoilAngles = 0x64;
		constexpr auto viewDelta = 0x70;
		constexpr auto headLerp = 0x78;
		constexpr auto mouseWheelUp = 0x7c;
		constexpr auto mouseWheelDn = 0x80;
		constexpr auto autorun = 0x84;
		constexpr auto toggleDuck = 0x85;
		constexpr auto toggleAds = 0x86;
		constexpr auto lastAdsEntity = 0x88;
		constexpr auto pendingMouseDelta = 0x8c;
		constexpr auto offsetAngles = 0x98;
		constexpr auto ignoredButtons = 0xa4;
		constexpr auto hasKeyFocus = 0xa8;

		constexpr auto OnDisable = 0x628bb0;
		constexpr auto FrameUpdate = 0x627d50;
		constexpr auto CanToggleAds = 0x627770;
		constexpr auto Flip = 0x627be0;
		constexpr auto ResetMouseDelta = 0x628c30;
		constexpr auto AddMouseDelta = 0x625fd0;
		constexpr auto AdjustMouseMovement = 0x6262a0;
		constexpr auto UpdateViewAngles = 0x628e30;
		constexpr auto ApplyViewAngles = 0x6264e0;
		constexpr auto SetViewVars = 0x628d10;
		constexpr auto FinalizeRecoil = 0x627a00;
		constexpr auto ResetOffsetAngles = 0x628ca0;
		constexpr auto ClientAngles = 0x6279d0;
		constexpr auto ClientLookVars = 0x6279e0;
		constexpr auto HeadAngles = 0x6281a0;
		constexpr auto HeadLookVars = 0x6281b0;
		constexpr auto ModifyInputState = 0x628b20;
		constexpr auto IsButtonDownNative = 0x628620;
		constexpr auto BuildInputState = 0x627080;
		constexpr auto IsAiming = 0x6284d0;
		constexpr auto UpdateButton = 0x628da0;
		constexpr auto IgnoreCurrentButtons = 0x6281d0;
		constexpr auto get_hasOnlyPartialKeyInput = 0x629140;
		constexpr auto get_hasNoKeyInput = 0x628fb0;
		constexpr auto UpdateKeyFocus = 0x628e10;
		constexpr auto IgnoreCurrentKeys = 0x6282e0;
		constexpr auto ctor = 0x628f40;
	};

	namespace PlayerModel {
		constexpr auto pm_downlimit = 0x4;
		constexpr auto pm_upspine = 0x8;
		constexpr auto pm_downspine = 0xc;
		constexpr auto pm_lookoffset = 0x10;
		constexpr auto pm_anglesmoothspeed = 0x1c;
		constexpr auto pm_nohold = 0x20;
		constexpr auto pm_ladder = 0x24;
		constexpr auto pm_minweight = 0x28;
		constexpr auto _smoothAimWeight = 0x18;
		constexpr auto _smoothVelocity = 0x1c;
		constexpr auto _smoothlookAngle = 0x20;
		constexpr auto allowMountedHeadLook = 0x2c;
		constexpr auto smoothLookDir = 0x30;
		constexpr auto lastSafeLookDir = 0x3c;
		constexpr auto Shoulders = 0x48;
		constexpr auto AdditionalSpineBones = 0x50;
		constexpr auto FinishedLegWearables = 0x30;
		constexpr auto LegParts = 0x58;
		constexpr auto fakeSpineBones = 0x60;
		constexpr auto extraLeanBack = 0x68;
		constexpr auto drawState = 0x6c;
		constexpr auto timeInArmsMode = 0x70;
		constexpr auto speed = 0x38;
		constexpr auto acceleration = 0x3c;
		constexpr auto rotationYaw = 0x40;
		constexpr auto forward = 0x44;
		constexpr auto right = 0x48;
		constexpr auto up = 0x4c;
		constexpr auto ducked = 0x50;
		constexpr auto grounded = 0x54;
		constexpr auto crawling = 0x58;
		constexpr auto waterlevel = 0x5c;
		constexpr auto attack = 0x60;
		constexpr auto attack_alt = 0x64;
		constexpr auto deploy = 0x68;
		constexpr auto reload = 0x6c;
		constexpr auto throwWeapon = 0x70;
		constexpr auto holster = 0x74;
		constexpr auto aiming = 0x78;
		constexpr auto onLadder = 0x7c;
		constexpr auto posing = 0x80;
		constexpr auto poseType = 0x84;
		constexpr auto relaxGunPose = 0x88;
		constexpr auto vehicle_aim_yaw = 0x8c;
		constexpr auto vehicle_aim_speed = 0x90;
		constexpr auto onPhone = 0x94;
		constexpr auto usePoseTransition = 0x98;
		constexpr auto leftFootIK = 0x9c;
		constexpr auto rightFootIK = 0xa0;
		constexpr auto vehicleSteering = 0xa4;
		constexpr auto sitReaction = 0xa8;
		constexpr auto forwardReaction = 0xac;
		constexpr auto rightReaction = 0xb0;
		constexpr auto collision = 0x78;
		constexpr auto censorshipCube = 0x80;
		constexpr auto censorshipCubeBreasts = 0x88;
		constexpr auto jawBone = 0x90;
		constexpr auto neckBone = 0x98;
		constexpr auto headBone = 0xa0;
		constexpr auto eyeController = 0xa8;
		constexpr auto blinkController = 0xb0;
		constexpr auto SpineBones = 0xb8;
		constexpr auto leftFootBone = 0xc0;
		constexpr auto rightFootBone = 0xc8;
		constexpr auto leftHandPropBone = 0xd0;
		constexpr auto rightHandPropBone = 0xd8;
		constexpr auto rightHandTarget = 0xe0;
		constexpr auto leftHandTargetPosition = 0xec;
		constexpr auto leftHandTargetRotation = 0xf8;
		constexpr auto rightHandTargetPosition = 0x108;
		constexpr auto rightHandTargetRotation = 0x114;
		constexpr auto steeringTargetDegrees = 0x124;
		constexpr auto rightFootTargetPosition = 0x128;
		constexpr auto rightFootTargetRotation = 0x134;
		constexpr auto leftFootTargetPosition = 0x144;
		constexpr auto leftFootTargetRotation = 0x150;
		constexpr auto CinematicAnimationController = 0x160;
		constexpr auto DefaultAvatar = 0x168;
		constexpr auto CinematicAvatar = 0x170;
		constexpr auto DefaultHoldType = 0x178;
		constexpr auto SleepGesture = 0x180;
		constexpr auto CrawlToIncapacitatedGesture = 0x188;
		constexpr auto StandToIncapacitatedGesture = 0x190;
		constexpr auto CurrentGesture = 0x198;
		constexpr auto MaleSkin = 0x1a0;
		constexpr auto FemaleSkin = 0x1a8;
		constexpr auto subsurfaceProfile = 0x1b0;
		constexpr auto voiceVolume = 0x1b8;
		constexpr auto skinColor = 0x1bc;
		constexpr auto skinNumber = 0x1c0;
		constexpr auto meshNumber = 0x1c4;
		constexpr auto hairNumber = 0x1c8;
		constexpr auto skinType = 0x1cc;
		constexpr auto movementSounds = 0x1d0;
		constexpr auto showSash = 0x1d8;
		constexpr auto tempPoseType = 0x1dc;
		constexpr auto underwearSkin = 0x1e0;
		constexpr auto overrideSkinSeedk__BackingField = 0x1e8;
		constexpr auto AimAnglesk__BackingField = 0x1f0;
		constexpr auto LookAnglesk__BackingField = 0x200;
		constexpr auto modelState = 0x210;
		constexpr auto position = 0x218;
		constexpr auto velocity = 0x224;
		constexpr auto speedOverride = 0x230;
		constexpr auto newVelocity = 0x23c;
		constexpr auto rotation = 0x248;
		constexpr auto mountedRotation = 0x258;
		constexpr auto smoothLeftFootIK = 0x268;
		constexpr auto smoothRightFootIK = 0x274;
		constexpr auto drawShadowOnly = 0x280;
		constexpr auto isIncapacitated = 0x281;
		constexpr auto flinchLocation = 0x284;
		constexpr auto visible = 0x288;
		constexpr auto nameTag = 0x290;
		constexpr auto animatorNeedsWarmup = 0x298;
		constexpr auto isLocalPlayer = 0x299;
		constexpr auto aimSoundDef = 0x2a0;
		constexpr auto aimEndSoundDef = 0x2a8;
		constexpr auto InGesture = 0x2b0;
		constexpr auto CurrentGestureConfig = 0x2b8;
		constexpr auto InCinematic = 0x2c0;
		constexpr auto defaultAnimatorController = 0x2c8;
		constexpr auto _multiMesh = 0x2d0;
		constexpr auto _animator = 0x2d8;
		constexpr auto _lodGroup = 0x2e0;
		constexpr auto _currentGesture = 0x2e8;
		constexpr auto holdTypeLock = 0x2f0;
		constexpr auto hasHeldEntity = 0x2f4;
		constexpr auto wasMountedRightAim = 0x2f5;
		constexpr auto cachedMask = 0x2f8;
		constexpr auto cachedConstructionMask = 0x2fc;
		constexpr auto WorkshopHeldEntity = 0x300;
		constexpr auto wasCrawling = 0x308;
		constexpr auto mountedSpineLookWeight = 0x30c;
		constexpr auto mountedAnimSpeed = 0x310;
		constexpr auto preserveBones = 0x314;
		constexpr auto downLimitOverride = 0x318;
		constexpr auto blendShapeControllers = 0x320;
		constexpr auto IsNpck__BackingField = 0x328;
		constexpr auto timeSinceReactionStart = 0x32c;
		constexpr auto timeSinceLeftFootTest = 0x330;
		constexpr auto cachedLeftFootPos = 0x334;
		constexpr auto cachedLeftFootNormal = 0x340;
		constexpr auto timeSinceRightFootTest = 0x34c;
		constexpr auto cachedRightFootPos = 0x350;
		constexpr auto cachedRightFootNormal = 0x35c;

		constexpr auto SetMountedLookAtOverride = 0x635860;
		constexpr auto SpineIk = 0x635c80;
		constexpr auto ParentArmsToCamera = 0x633a80;
		constexpr auto OnAnimatorIK = 0x6330f0;
		constexpr auto HandIK = 0x631750;
		constexpr auto FootIK = 0x62ddc0;
		constexpr auto HeadIK = 0x631bb0;
		constexpr auto get_ShouldDoLegs = 0x63b5c0;
		constexpr auto get_ShouldShowHands = 0x63b640;
		constexpr auto ClearLegs = 0x62cc30;
		constexpr auto RebuildLegs = 0x634430;
		constexpr auto InitializeLegSpineBones = 0x632290;
		constexpr auto UpdateLegsBeforeRender = 0x637490;
		constexpr auto UpdateLegsDisable = 0x638380;
		constexpr auto AddLegRenderer = 0x62c160;
		constexpr auto SwapLegBone = 0x636670;
		constexpr auto GetFlat = 0x630bc0;
		constexpr auto RebuildAll = 0x634030;
		constexpr auto get_overrideSkinSeed = 0x63b920;
		constexpr auto set_overrideSkinSeed = 0x63b960;
		constexpr auto get_IsFemale = 0x63b570;
		constexpr auto get_SkinSet = 0x63b720;
		constexpr auto get_AimAngles = 0x63b420;
		constexpr auto set_AimAngles = 0x63b930;
		constexpr auto get_LookAngles = 0x63b5b0;
		constexpr auto set_LookAngles = 0x63b950;
		constexpr auto get_GestureAllowsSpineMovement = 0x63b4d0;
		constexpr auto get_GestureAllowsRootMotion = 0x63b430;
		constexpr auto get_IsFirstPerson = 0x63b580;
		constexpr auto get_IsNpc = 0x63b5a0;
		constexpr auto set_IsNpc = 0x63b940;
		constexpr auto get_multiMesh = 0x63b880;
		constexpr auto get_animator = 0x63b740;
		constexpr auto get_lodGroup = 0x63b7e0;
		constexpr auto GetTargetVelocity = 0x6315f0;
		constexpr auto Awake = 0x62cb90;
		constexpr auto OnEnable = 0x633510;
		constexpr auto OnDisable = 0x633220;
		constexpr auto SetDefaultAnimatorWeights = 0x635140;
		constexpr auto UpdateMultiMesh = 0x638a20;
		constexpr auto UpdateCensorship = 0x636bb0;
		constexpr auto UpdateCollider = 0x637030;
		constexpr auto UpdateModelState = 0x6389d0;
		constexpr auto UpdatePosition = 0x6394b0;
		constexpr auto UpdateRotation = 0x6395d0;
		constexpr auto UpdateLocalVelocity = 0x638900;
		constexpr auto UpdateVelocity = 0x639f50;
		constexpr auto UpdateParameters = 0x638bd0;
		constexpr auto UpdateFrom = 0x6372a0;
		constexpr auto UpdateGlobalShaderConstants = 0x637300;
		constexpr auto SetBlendShapesMode = 0x635000;
		constexpr auto GetCurrentBlendShapeMode = 0x630b30;
		constexpr auto LateCycle = 0x632a70;
		constexpr auto FrameUpdate = 0x630030;
		constexpr auto FrameUpdate_Default = 0x62f650;
		constexpr auto FrameUpdate_Sleeping = 0x62fd60;
		constexpr auto FrameUpdate_Incapacitated = 0x62f7c0;
		constexpr auto FrameUpdate_OnLadder = 0x62fa90;
		constexpr auto GetAim360 = 0x6308c0;
		constexpr auto UpdateVehicleAim360 = 0x639a60;
		constexpr auto ResetCurrentState = 0x634eb0;
		constexpr auto DoAimingSounds = 0x62d560;
		constexpr auto SetAimSounds = 0x634fc0;
		constexpr auto SetMountedLookAtWeight = 0x635870;
		constexpr auto SetMountedAnimationSpeed = 0x635850;
		constexpr auto UpdateLocalPlayerPosition = 0x6385b0;
		constexpr auto Attack = 0x62cb10;
		constexpr auto AltAttack = 0x62c7d0;
		constexpr auto Deploy = 0x62d4b0;
		constexpr auto Reload = 0x634c30;
		constexpr auto Holster = 0x632210;
		constexpr auto Flinch = 0x62dd60;
		constexpr auto SetReactionAnim = 0x635880;
		constexpr auto OnReactionEnded = 0x633a50;
		constexpr auto Throw = 0x6369a0;
		constexpr auto Gesture = 0x630530;
		constexpr auto FadeInGestureUpperBodyLayer = 0x62d7c0;
		constexpr auto FadeOutGestureUpperBodyLayer = 0x62dab0;
		constexpr auto FadeInGestureFullBodyLayer = 0x62d6a0;
		constexpr auto FadeOutGestureFullBodyLayer = 0x62d8e0;
		constexpr auto AnimatorWarmup = 0x62c880;
		constexpr auto AlwaysAnimate = 0x62c850;
		constexpr auto SetHoldType = 0x6354d0;
		constexpr auto SetHasHeldEntity = 0x6354c0;
		constexpr auto FadeOutGestureLayer = 0x62da40;
		constexpr auto SetGesture = 0x635270;
		constexpr auto FadeOutPlayerGestureLayers = 0x62dc10;
		constexpr auto StopGesture = 0x636570;
		constexpr auto PlayCinematic = 0x633ea0;
		constexpr auto StopCinematic = 0x636510;
		constexpr auto SetSpeedOverride = 0x635c60;
		constexpr auto GetReplacementUnderwear = 0x631530;
		constexpr auto RemoveUnderwearParts = 0x634d80;
		constexpr auto Clear = 0x62cd90;
		constexpr auto Rebuild = 0x6347f0;
		constexpr auto AddPart = 0x62c4f0;
		constexpr auto RemovePart = 0x634cb0;
		constexpr auto HasPart = 0x631af0;
		constexpr auto IsBarefoot = 0x6329e0;
		constexpr auto GetSkinColor = 0x631570;
		constexpr auto SetSkinProperties = 0x635b40;
		constexpr auto RefreshUnderwear = 0x6348a0;
		constexpr auto ForceModelSeed = 0x62f420;
		constexpr auto FindBone = 0x62dd30;
		constexpr auto GetBones = 0x630b00;
		constexpr auto GetFootPlacement = 0x630c00;
		constexpr auto ApplyVisibility = 0x62c8e0;
		constexpr auto ToggleUpdateOffscreen = 0x636a40;
		constexpr auto OnParentDestroying = 0x633950;
		constexpr auto WorkshopPreviewSetup = 0x63a360;
		constexpr auto ctor = 0x63b240;
		constexpr auto cctor = 0x63ad00;
	};

	namespace ProtoBuf_PlayerTeam {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto teamID = 0x18;
		constexpr auto teamName = 0x20;
		constexpr auto teamLeader = 0x28;
		constexpr auto members = 0x30;
		constexpr auto teamLifetime = 0x38;
		constexpr auto mapNote = 0x40;

		constexpr auto ResetToPool = 0x20ac7f0;
		constexpr auto Dispose = 0x20ac3f0;
		constexpr auto EnterPool = 0xf04670;
		constexpr auto LeavePool = 0xf046a0;
		constexpr auto CopyTo = 0x20aa900;
		constexpr auto Copy = 0x20aab40;
		constexpr auto Deserialize = 0x20ab8f0;
		constexpr auto DeserializeLengthDelimited = 0x20aabc0;
		constexpr auto DeserializeLength = 0x20ab070;
		constexpr auto FromProto = 0x20ac470;
		constexpr auto WriteToStream = 0x20ad6b0;
		constexpr auto WriteToStreamDelta = 0x20ad6d0;
		constexpr auto ReadFromStream = 0x20ac7d0;
		constexpr auto SerializeDelta = 0x20acca0;
		constexpr auto Serialize = 0x20ad2c0;
		constexpr auto ToProtoBytes = 0x20ad6a0;
		constexpr auto ToProto = 0x20ad6b0;
		constexpr auto SerializeToBytes = 0x20ad1b0;
		constexpr auto SerializeLengthDelimited = 0x20ad100;
		constexpr auto ctor = 0xf05000;
	};

	namespace PlayerInventory {
		constexpr auto containerMain = 0x20;
		constexpr auto containerBelt = 0x28;
		constexpr auto containerWear = 0x30;
		constexpr auto crafting = 0x38;
		constexpr auto loot = 0x40;

		constexpr auto OnRpcMessage = 0x629fa0;
		constexpr auto Initialize = 0x629bf0;
		constexpr auto DoDestroy = 0x6293d0;
		constexpr auto ClientInit = 0x629350;
		constexpr auto UpdatedItemContainer = 0x62a3f0;
		constexpr auto FindItemUID = 0x629a10;
		constexpr auto FindItemID = 0x629730;
		constexpr auto FindBySubEntityID = 0x6294b0;
		constexpr auto FindItemIDs = 0x629920;
		constexpr auto FindContainer = 0x629580;
		constexpr auto GetContainer = 0x629b70;
		constexpr auto Load = 0x629e50;
		constexpr auto GetAmount = 0x629af0;
		constexpr auto AllItems = 0x629280;
		constexpr auto AllItemsNoAlloc = 0x6291b0;
		constexpr auto FindAmmo = 0x629460;
		constexpr auto HasAmmo = 0x629b90;
		constexpr auto ctor = 0x62a5e0;
	};

	namespace ItemContainer {
		constexpr auto flags = 0x10;
		constexpr auto allowedContents = 0x14;
		constexpr auto onlyAllowedItems = 0x18;
		constexpr auto availableSlots = 0x20;
		constexpr auto capacity = 0x28;
		constexpr auto uid = 0x2c;
		constexpr auto dirty = 0x30;
		constexpr auto itemList = 0x38;
		constexpr auto temperature = 0x40;
		constexpr auto parent = 0x48;
		constexpr auto playerOwner = 0x50;
		constexpr auto entityOwner = 0x58;
		constexpr auto isServer = 0x60;
		constexpr auto maxStackSize = 0x64;

		constexpr auto HasFlag = 0xa4def0;
		constexpr auto SetFlag = 0xa4efa0;
		constexpr auto IsLocked = 0xa4e0c0;
		constexpr auto PlayerItemInputBlocked = 0xa4ebe0;
		constexpr auto get_HasLimitedAllowedItems = 0xa4f390;
		constexpr auto OnChanged = 0xa4eb40;
		constexpr auto ClientInitialize = 0xa4d020;
		constexpr auto FindItemByUID = 0xa4d5d0;
		constexpr auto IsFull = 0xa4e070;
		constexpr auto IsEmpty = 0xa4e030;
		constexpr auto CanAccept = 0xa4cef0;
		constexpr auto GetMaxTransferAmount = 0xa4db90;
		constexpr auto SetOnlyAllowedItem = 0xa4efc0;
		constexpr auto SetOnlyAllowedItems = 0xa4f080;
		constexpr auto Insert = 0xa4df00;
		constexpr auto SlotTaken = 0xa4f210;
		constexpr auto GetSlot = 0xa4dd50;
		constexpr auto FindPosition = 0xa4d8c0;
		constexpr auto Clear = 0xa4cf40;
		constexpr auto Kill = 0xa4e0d0;
		constexpr auto GetAmount = 0xa4da10;
		constexpr auto FindItemByItemID = 0xa4d460;
		constexpr auto FindItemsByItemName = 0xa4d770;
		constexpr auto FindBySubEntityID = 0xa4d200;
		constexpr auto FindItemsByItemID = 0xa4d6c0;
		constexpr auto Save = 0xa4ebf0;
		constexpr auto Load = 0xa4e390;
		constexpr auto GetOwnerPlayer = 0x5ce9f0;
		constexpr auto ContainerMaxStackSize = 0xa4d060;
		constexpr auto FindAmmo = 0xa4d140;
		constexpr auto HasAmmo = 0xa4de20;
		constexpr auto GetAmmoAmount = 0xa4d950;
		constexpr auto TotalItemAmount = 0xa4f230;
		constexpr auto ContentsHash = 0xa4d070;
		constexpr auto FindContainer = 0xa4d370;
		constexpr auto CanAcceptItem = 0xa4cdc0;
		constexpr auto ctor = 0xa4f2e0;
	};

	namespace Item {
		constexpr auto amountOverride = 0x10;
		constexpr auto _condition = 0x18;
		constexpr auto _maxCondition = 0x1c;
		constexpr auto info = 0x20;
		constexpr auto uid = 0x28;
		constexpr auto dirty = 0x2c;
		constexpr auto amount = 0x30;
		constexpr auto position = 0x34;
		constexpr auto busyTime = 0x38;
		constexpr auto removeTime = 0x3c;
		constexpr auto fuel = 0x40;
		constexpr auto isServer = 0x44;
		constexpr auto instanceData = 0x48;
		constexpr auto skin = 0x50;
		constexpr auto name = 0x58;
		constexpr auto text = 0x60;
		constexpr auto cookTimeLeft = 0x68;
		constexpr auto progressBar = 0x6c;
		constexpr auto OnDirty = 0x70;
		constexpr auto flags = 0x78;
		constexpr auto contents = 0x80;
		constexpr auto parent = 0x88;
		constexpr auto worldEnt = 0x90;
		constexpr auto heldEntity = 0xa0;

		constexpr auto UpdateAmountDisplay = 0xa5c310;
		constexpr auto FormatAmount = 0xa5ad90;
		constexpr auto set_condition = 0xa5d2e0;
		constexpr auto get_condition = 0x84a490;
		constexpr auto set_maxCondition = 0xa5d360;
		constexpr auto get_maxCondition = 0x84a460;
		constexpr auto get_maxConditionNormalized = 0xa5d090;
		constexpr auto get_conditionNormalized = 0xa5cc10;
		constexpr auto set_conditionNormalized = 0xa5d240;
		constexpr auto get_hasCondition = 0xa5cd20;
		constexpr auto get_isBroken = 0xa5cf60;
		constexpr auto get_despawnMultiplier = 0xa5cc50;
		constexpr auto get_blueprintTargetDef = 0xa5cbe0;
		constexpr auto get_blueprintTarget = 0xa5cc00;
		constexpr auto set_blueprintTarget = 0xa5d1b0;
		constexpr auto get_blueprintAmount = 0xa5cbd0;
		constexpr auto set_blueprintAmount = 0xa5d1a0;
		constexpr auto IsBlueprint = 0xa5b2d0;
		constexpr auto add_OnDirty = 0xa5cb10;
		constexpr auto remove_OnDirty = 0xa5d100;
		constexpr auto HasFlag = 0xa5b2c0;
		constexpr auto SetFlag = 0xa5be10;
		constexpr auto IsOn = 0xa5b500;
		constexpr auto IsOnFire = 0xa5b4f0;
		constexpr auto IsCooking = 0xa5b4b0;
		constexpr auto IsLocked = 0xa5b4c0;
		constexpr auto get_parentItem = 0xa5d0c0;
		constexpr auto MarkDirty = 0xa5b950;
		constexpr auto OnChanged = 0xa5ba40;
		constexpr auto CollectedForCrafting = 0x477ed0;
		constexpr auto ReturnedFromCancelledCraft = 0x477ed0;
		constexpr auto IsChildContainer = 0xa5b320;
		constexpr auto IsBusy = 0xa5b2f0;
		constexpr auto BusyFor = 0xa5a910;
		constexpr auto Remove = 0xa5bbf0;
		constexpr auto DoRemove = 0xa5abd0;
		constexpr auto SwitchOnOff = 0xa5bfa0;
		constexpr auto LockUnlock = 0xa5b8d0;
		constexpr auto get_temperature = 0xa5d0e0;
		constexpr auto GetOwnerPlayer = 0xa5b0d0;
		constexpr auto CanBeHeld = 0xa5a940;
		constexpr auto CanStack = 0xa5a980;
		constexpr auto IsValid = 0xa5b510;
		constexpr auto SetWorldEntity = 0xa5be30;
		constexpr auto OnMovedToWorld = 0xa5bb60;
		constexpr auto GetWorldEntity = 0xa5b180;
		constexpr auto GetHeldEntity = 0xa5b0b0;
		constexpr auto BeltBarSelect = 0xa5a870;
		constexpr auto GetTotalUISlots = 0xa5b0f0;
		constexpr auto GetFilledUISlots = 0xa5b020;
		constexpr auto HasAmmo = 0xa5b1a0;
		constexpr auto FindAmmo = 0xa5ac30;
		constexpr auto GetAmmoAmount = 0xa5aef0;
		constexpr auto ToString = 0xa5c020;
		constexpr auto FindItem = 0xa5ad70;
		constexpr auto MaxStackable = 0xa5b9b0;
		constexpr auto get_iconSprite = 0xa5cdc0;
		constexpr auto get_isLoadingIconSprite = 0xa5cf90;
		constexpr auto get_Traits = 0xa5cbb0;
		constexpr auto Save = 0xa5bc50;
		constexpr auto Load = 0xa5b520;
		constexpr auto ctor = 0xa5caf0;
		constexpr auto cctor = 0xa5ca20;
		constexpr auto get_iconSpriteb__97_0 = 0xa5c300;
		constexpr auto get_isLoadingIconSpriteb__99_0 = 0xa5c300;
	};

	namespace Model {
		constexpr auto collision = 0x18;
		constexpr auto rootBone = 0x20;
		constexpr auto headBone = 0x28;
		constexpr auto eyeBone = 0x30;
		constexpr auto animator = 0x38;
		constexpr auto skeleton = 0x40;
		constexpr auto boneTransforms = 0x48;
		constexpr auto boneNames = 0x50;
		constexpr auto boneDict = 0x58;
		constexpr auto skin = 0x60;
		constexpr auto _lodGroup = 0x68;

		constexpr auto OnEnable = 0x8499f0;
		constexpr auto BuildBoneDictionary = 0x849150;
		constexpr auto GetSkin = 0x849510;
		constexpr auto FindBoneInternal = 0x849240;
		constexpr auto FindBone = 0x8492d0;
		constexpr auto FindBoneID = 0x849200;
		constexpr auto GetBones = 0x8494e0;
		constexpr auto FindClosestBone = 0x849340;
		constexpr auto get_lodGroup = 0x84a1e0;
		constexpr auto OnDisable = 0x8498c0;
		constexpr auto SyncBones = 0x849dc0;
		constexpr auto Trigger = 0x84a130;
		constexpr auto GetTransform = 0x849520;
		constexpr auto ApplyVisibility = 0x848fc0;
		constexpr auto PreProcess = 0x849a00;
		constexpr auto ctor = 0x49e630;
	};

	namespace MedicalTool {
		constexpr auto healDurationSelf = 0x280;
		constexpr auto healDurationOther = 0x284;
		constexpr auto healDurationOtherWounded = 0x288;
		constexpr auto maxDistanceOther = 0x28c;
		constexpr auto canUseOnOther = 0x290;
		constexpr auto canRevive = 0x291;
		constexpr auto useTarget = 0x298;
		constexpr auto resetTime = 0x2a0;

		constexpr auto OnRpcMessage = 0x973850;
		constexpr auto GetTarget = 0x9730f0;
		constexpr auto AnyPressed = 0x973020;
		constexpr auto OnInput = 0x9734a0;
		constexpr auto OnViewmodelEvent = 0x973c20;
		constexpr auto Reset = 0x973e30;
		constexpr auto OnDeploy = 0x973440;
		constexpr auto OnHolstered = 0x973470;
		constexpr auto ProcessSpectatorViewmodelEvent = 0x973d70;
		constexpr auto ctor = 0x973e50;
	};

	namespace HeldEntity {
		constexpr auto _punches = 0x168;
		constexpr auto punchAdded = 0x170;
		constexpr auto lastPunchTime = 0x17c;
		constexpr auto worldModelAnimator = 0x180;
		constexpr auto thirdPersonDeploySound = 0x188;
		constexpr auto thirdPersonAimSound = 0x190;
		constexpr auto thirdPersonAimEndSound = 0x198;
		constexpr auto viewModel = 0x1a0;
		constexpr auto isDeployed = 0x1a8;
		constexpr auto nextExamineTime = 0x1ac;
		constexpr auto handBone = 0x1b0;
		constexpr auto HoldAnimationOverride = 0x1b8;
		constexpr auto isBuildingTool = 0x1c0;
		constexpr auto hostileScore = 0x1c4;
		constexpr auto holsterInfo = 0x1c8;
		constexpr auto HeldCameraMode = 0x1d0;
		constexpr auto FirstPersonArmOffset = 0x1d4;
		constexpr auto FirstPersonArmRotation = 0x1e0;
		constexpr auto FirstPersonRotationStrength = 0x1ec;
		constexpr auto ownerItemUID = 0x1f0;

		constexpr auto OnRpcMessage = 0x8a8140;
		constexpr auto AddPunch = 0x8a73a0;
		constexpr auto CL_Punch = 0x8a7470;
		constexpr auto DoRecoilCompensation = 0x477ed0;
		constexpr auto GetAddedPunch = 0x8a77a0;
		constexpr auto SimPunches = 0x8a8930;
		constexpr auto ClientInit = 0x8a7520;
		constexpr auto GetFovOverride = 0x8a77c0;
		constexpr auto DoNetworkDestroy = 0x8a75f0;
		constexpr auto PostLateClientCycle = 0x477ed0;
		constexpr auto PostNetworkUpdate = 0x8a85f0;
		constexpr auto UpdateHolsteredOffset = 0x8a8e00;
		constexpr auto EditViewAngles = 0x477ed0;
		constexpr auto ClampPitch = 0x477ed0;
		constexpr auto OnFrame = 0x8a7fb0;
		constexpr auto OnInput = 0x477ed0;
		constexpr auto Examine = 0x8a7630;
		constexpr auto OnDeploy = 0x8a7cf0;
		constexpr auto OnDeployed = 0x8a7fa0;
		constexpr auto OnHolster = 0x8a7fd0;
		constexpr auto OnHolstered = 0x8a8130;
		constexpr auto OnViewmodelEvent = 0x477ed0;
		constexpr auto OnReliableEvent = 0x477ed0;
		constexpr auto ModifyCamera = 0x477ed0;
		constexpr auto ShouldDestroyImmediately = 0x58eed0;
		constexpr auto UpdatePlayerModel = 0x8a9600;
		constexpr auto ProcessPlayerModel = 0x477ed0;
		constexpr auto GetHoldAnimations = 0x8a79b0;
		constexpr auto GetMovementMultiplier = 0x5de880;
		constexpr auto OnSpawnedForWorkshopPreview = 0x477ed0;
		constexpr auto HeldEntityBlocksMovement = 0x59bd20;
		constexpr auto ProcessSpectatorViewmodel = 0x477ed0;
		constexpr auto ProcessSpectatorViewmodelEvent = 0x8a8880;
		constexpr auto get_hostile = 0x8a97b0;
		constexpr auto LightsOn = 0x661d70;
		constexpr auto IsDeployed = 0x8a7c80;
		constexpr auto GetOwnerPlayer = 0x8a7bc0;
		constexpr auto GetOwnerConnection = 0x8a79d0;
		constexpr auto CanBeUsedInWater = 0x59bd20;
		constexpr auto BlocksGestures = 0x59bd20;
		constexpr auto GetOwnerItem = 0x8a7ae0;
		constexpr auto GetItem = 0x8a79c0;
		constexpr auto GetOwnerItemDefinition = 0x8a7a60;
		constexpr auto IsInstrument = 0x59bd20;
		constexpr auto Load = 0x8a7c90;
		constexpr auto ctor = 0x8a96c0;
		constexpr auto cctor = 0x8a9680;
	};

	namespace UnityEngine_GUIContent {
		constexpr auto m_Text = 0x10;
		constexpr auto m_Image = 0x18;
		constexpr auto m_Tooltip = 0x20;
		constexpr auto s_Image = 0x8;
		constexpr auto s_TextImage = 0x10;
		constexpr auto none = 0x18;

		constexpr auto get_text = 0x1a674c0;
		constexpr auto set_text = 0x5d6310;
		constexpr auto set_image = 0x5e6850;
		constexpr auto get_tooltip = 0x1cd5910;
		constexpr auto set_tooltip = 0x5bc480;
		constexpr auto ctor = 0x1cd5880;
		constexpr auto Temp = 0x1cd5160;
		constexpr auto ClearStaticCache = 0x1cd5000;
		constexpr auto cctor = 0x1cd5430;
	};

	namespace BaseCombatEntity {
		constexpr auto __menuOption_Menu_Pickup = 0x168;
		constexpr auto skeletonProperties = 0x1c0;
		constexpr auto baseProtection = 0x1c8;
		constexpr auto startHealth = 0x1d0;
		constexpr auto pickup = 0x1d8;
		constexpr auto repair = 0x1f8;
		constexpr auto ShowHealthInfo = 0x220;
		constexpr auto lifestate = 0x224;
		constexpr auto sendsHitNotification = 0x228;
		constexpr auto sendsMeleeHitNotification = 0x229;
		constexpr auto markAttackerHostile = 0x22a;
		constexpr auto _health = 0x22c;
		constexpr auto _maxHealth = 0x230;
		constexpr auto faction = 0x234;
		constexpr auto deathTime = 0x238;
		constexpr auto lastNotifyFrame = 0x23c;

		constexpr auto GetMenuOptions = 0xc97a30;
		constexpr auto get_HasMenuOptions = 0xc98c20;
		constexpr auto OnRpcMessage = 0xc98170;
		constexpr auto HitNotify = 0xc97d90;
		constexpr auto ClientInit = 0xc97440;
		constexpr auto DisplayHealthInfo = 0x708880;
		constexpr auto GetEyeTransform = 0xc97910;
		constexpr auto OnLifeStateChanged = 0xc98140;
		constexpr auto GetPickupCount = 0xc97d70;
		constexpr auto CanPickup = 0xc973a0;
		constexpr auto OnPickedUp = 0x477ed0;
		constexpr auto OnPickedUpPreItemMove = 0x477ed0;
		constexpr auto Menu_Pickup = 0xc98010;
		constexpr auto Menu_Pickup_TimeStart = 0x477ed0;
		constexpr auto Menu_Pickup_If = 0xc97ff0;
		constexpr auto BuildCost = 0xc972d0;
		constexpr auto IsDead = 0xc97f40;
		constexpr auto IsAlive = 0xc97f30;
		constexpr auto GetFaction = 0xc97a20;
		constexpr auto IsFriendly = 0x59bd20;
		constexpr auto get_SecondsSinceDeath = 0xc98ce0;
		constexpr auto get_healthFraction = 0xc98d00;
		constexpr auto ResetState = 0xc987b0;
		constexpr auto DestroyShared = 0xc97520;
		constexpr auto GetThreatLevel = 0x6630b0;
		constexpr auto PenetrationResistance = 0xc98720;
		constexpr auto ScaleDamage = 0xc988b0;
		constexpr auto SkeletonLookup = 0xc989f0;
		constexpr auto Load = 0xc97f50;
		constexpr auto get_health = 0xc97d80;
		constexpr auto set_health = 0xc98d50;
		constexpr auto Health = 0xc97d80;
		constexpr auto MaxHealth = 0x591fa0;
		constexpr auto StartHealth = 0x592080;
		constexpr auto StartMaxHealth = 0xc98aa0;
		constexpr auto SetMaxHealth = 0xc98960;
		constexpr auto DoHitNotify = 0xc97540;
		constexpr auto OnAttacked = 0xc98050;
		constexpr auto ctor = 0xc98ac0;
	};

	namespace InputState {
		constexpr auto current = 0x10;
		constexpr auto previous = 0x18;
		constexpr auto SwallowedButtons = 0x20;

		constexpr auto IsDown = 0x5ea7e0;
		constexpr auto WasDown = 0x5ea8b0;
		constexpr auto IsAnyDown = 0x5ea7b0;
		constexpr auto WasJustPressed = 0x5ea8d0;
		constexpr auto WasJustReleased = 0x5ea910;
		constexpr auto SwallowButton = 0x5ea8a0;
		constexpr auto AimAngle = 0x5ea570;
		constexpr auto MouseDelta = 0x5ea810;
		constexpr auto Flip = 0x5ea6e0;
		constexpr auto Clear = 0x5ea630;
		constexpr auto ctor = 0x5ea950;
	};

	namespace InputMessage {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto buttons = 0x14;
		constexpr auto aimAngles = 0x18;
		constexpr auto mouseDelta = 0x24;

		constexpr auto ResetToPool = 0x22e9fa0;
		constexpr auto Dispose = 0x22e9ca0;
		constexpr auto EnterPool = 0xf04670;
		constexpr auto LeavePool = 0xf046a0;
		constexpr auto CopyTo = 0x22e8d00;
		constexpr auto Copy = 0x22e8d40;
		constexpr auto Deserialize = 0x22e93d0;
		constexpr auto DeserializeLengthDelimited = 0x22e9060;
		constexpr auto DeserializeLength = 0x22e90e0;
		constexpr auto FromProto = 0x22e9d20;
		constexpr auto WriteToStream = 0x22ea870;
		constexpr auto WriteToStreamDelta = 0x22ea890;
		constexpr auto ReadFromStream = 0x22e9ee0;
		constexpr auto SerializeDelta = 0x22ea040;
		constexpr auto Serialize = 0x22ea600;
		constexpr auto ToProtoBytes = 0x22ea860;
		constexpr auto ToProto = 0x22ea870;
		constexpr auto SerializeToBytes = 0x22ea4f0;
		constexpr auto SerializeLengthDelimited = 0x22ea440;
		constexpr auto ctor = 0xf05000;
	};

	namespace BaseMountable {
		constexpr auto __menuOption_Menu_Mount = 0x240;
		constexpr auto eyePositionOverride = 0x298;
		constexpr auto eyeCenterOverride = 0x2a0;
		constexpr auto pitchClamp = 0x2a8;
		constexpr auto yawClamp = 0x2b0;
		constexpr auto canWieldItems = 0x2b8;
		constexpr auto relativeViewAngles = 0x2b9;
		constexpr auto mountAnchor = 0x2c0;
		constexpr auto mountPose = 0x2c8;
		constexpr auto maxMountDistance = 0x2cc;
		constexpr auto dismountPositions = 0x2d0;
		constexpr auto checkPlayerLosOnMount = 0x2d8;
		constexpr auto disableMeshCullingForPlayers = 0x2d9;
		constexpr auto allowHeadLook = 0x2da;
		constexpr auto ignoreVehicleParent = 0x2db;
		constexpr auto modifiesPlayerCollider = 0x2dc;
		constexpr auto customPlayerCollider = 0x2e0;
		constexpr auto mountSoundDef = 0x2f8;
		constexpr auto swapSoundDef = 0x300;
		constexpr auto dismountSoundDef = 0x308;
		constexpr auto mountTimeStatType = 0x310;
		constexpr auto allowedGestures = 0x314;
		constexpr auto canDrinkWhileMounted = 0x318;
		constexpr auto allowSleeperMounting = 0x319;
		constexpr auto animateClothInLocalSpace = 0x31a;
		constexpr auto MountedCameraMode = 0x31c;
		constexpr auto isMobile = 0x320;
		constexpr auto SideLeanAmount = 0x324;

		constexpr auto GetMenuOptions = 0x8f2820;
		constexpr auto get_HasMenuOptions = 0x8f4840;
		constexpr auto OnRpcMessage = 0x8f3630;
		constexpr auto CanHoldItems = 0x8f1950;
		constexpr auto GetMountedCameraMode = 0x8f2b80;
		constexpr auto DirectlyMountable = 0x58eed0;
		constexpr auto GetEyeOverride = 0x8f2790;
		constexpr auto GetMountedBodyAngles = 0x8f2b30;
		constexpr auto ModifiesThirdPersonCamera = 0x59bd20;
		constexpr auto GetPitchClamp = 0x607d10;
		constexpr auto GetYawClamp = 0x607d30;
		constexpr auto IsMounted = 0x8f2de0;
		constexpr auto EyePositionForPlayer = 0x8f20c0;
		constexpr auto EyeCenterForPlayer = 0x8f1fc0;
		constexpr auto WaterFactorForPlayer = 0x8f4670;
		constexpr auto MaxVelocity = 0x8f2f20;
		constexpr auto PlayerIsMounted = 0x8f3c30;
		constexpr auto OnClientInput = 0x477ed0;
		constexpr auto ForceUpdatePlayerModel = 0x59bd20;
		constexpr auto UpdatePlayerModel = 0x8f4130;
		constexpr auto ProcessPlayerModel = 0x477ed0;
		constexpr auto SuppressHandsAnimationLayer = 0x59bd20;
		constexpr auto GetAnimationOverride = 0x5907f0;
		constexpr auto GetSpineLookAtWeight = 0x5de880;
		constexpr auto GetMountedAnimationSpeed = 0x6630b0;
		constexpr auto get_DisableLegsMeshAtExtremeViewAnglesInFirstPersonWithEyes = 0x58eed0;
		constexpr auto get_FirstPersonWithArmsEyesLerp = 0x5a0da0;
		constexpr auto ModifyThirdPersonEyeOffset = 0x8f30e0;
		constexpr auto LockThirdPersonOffset = 0x8f2eb0;
		constexpr auto LocalPlayerIsMounted = 0x8f2df0;
		constexpr auto VehicleParent = 0x8f45d0;
		constexpr auto get_IsSummerDlcVehicle = 0x59bd20;
		constexpr auto IsInstrument = 0x59bd20;
		constexpr auto GetDismountCheckStart = 0x8f2430;
		constexpr auto GetMountedPosition = 0x8f2b90;
		constexpr auto PostLateUpdatePlayer = 0x477ed0;
		constexpr auto UpdatePlayerRotation = 0x8f4520;
		constexpr auto SetNetworkPosition = 0x8f4100;
		constexpr auto UpdatePlayerPosition = 0x8f4450;
		constexpr auto GetMountedRotation = 0x8f2c50;
		constexpr auto PlayerMounted = 0x8f3cd0;
		constexpr auto PlayerDismounted = 0x8f3750;
		constexpr auto ClientOnPlayerDismounted = 0x8f1960;
		constexpr auto ClientOnPlayerMounted = 0x8f1a00;
		constexpr auto OverrideViewAngles = 0x8f3720;
		constexpr auto DoPlayerMovement = 0x8f1be0;
		constexpr auto HoldToDismount = 0x8f2d60;
		constexpr auto ClientRequestDismount = 0x8f1ad0;
		constexpr auto Menu_Mount = 0x8f3070;
		constexpr auto Menu_Mount_ShowIf = 0x8f2fd0;
		constexpr auto MountMenuVisible = 0x8f3100;
		constexpr auto NearMountPoint = 0x8f3190;
		constexpr auto ConvertVector = 0x8f1b10;
		constexpr auto get_BlocksDoors = 0x58eed0;
		constexpr auto ctor = 0x8f4790;
		constexpr auto cctor = 0x8f4720;
		constexpr auto DoPlayerMovementb__81_0 = 0x8f1ad0;
	};

	namespace TOD_Sky {
		constexpr auto ColorSpace = 0x18;
		constexpr auto ColorRange = 0x1c;
		constexpr auto ColorOutput = 0x20;
		constexpr auto SkyQuality = 0x24;
		constexpr auto CloudQuality = 0x28;
		constexpr auto MeshQuality = 0x2c;
		constexpr auto StarQuality = 0x30;
		constexpr auto Cycle = 0x38;
		constexpr auto World = 0x40;
		constexpr auto Atmosphere = 0x48;
		constexpr auto Day = 0x50;
		constexpr auto Night = 0x58;
		constexpr auto Sun = 0x60;
		constexpr auto Moon = 0x68;
		constexpr auto Stars = 0x70;
		constexpr auto Clouds = 0x78;
		constexpr auto Light = 0x80;
		constexpr auto Fog = 0x88;
		constexpr auto Ambient = 0x90;
		constexpr auto Reflection = 0x98;
		constexpr auto Initializedk__BackingField = 0xa0;
		constexpr auto Componentsk__BackingField = 0xa8;
		constexpr auto Resourcesk__BackingField = 0xb0;
		constexpr auto IsDayk__BackingField = 0xb8;
		constexpr auto IsNightk__BackingField = 0xb9;
		constexpr auto LerpValuek__BackingField = 0xbc;
		constexpr auto SunZenithk__BackingField = 0xc0;
		constexpr auto SunAltitudek__BackingField = 0xc4;
		constexpr auto SunAzimuthk__BackingField = 0xc8;
		constexpr auto MoonZenithk__BackingField = 0xcc;
		constexpr auto MoonAltitudek__BackingField = 0xd0;
		constexpr auto MoonAzimuthk__BackingField = 0xd4;
		constexpr auto SunsetTimek__BackingField = 0xd8;
		constexpr auto SunriseTimek__BackingField = 0xdc;
		constexpr auto LocalSiderealTimek__BackingField = 0xe0;
		constexpr auto SunVisibilityk__BackingField = 0xe4;
		constexpr auto MoonVisibilityk__BackingField = 0xe8;
		constexpr auto SunDirectionk__BackingField = 0xec;
		constexpr auto MoonDirectionk__BackingField = 0xf8;
		constexpr auto LightDirectionk__BackingField = 0x104;
		constexpr auto LocalSunDirectionk__BackingField = 0x110;
		constexpr auto LocalMoonDirectionk__BackingField = 0x11c;
		constexpr auto LocalLightDirectionk__BackingField = 0x128;
		constexpr auto SunLightColork__BackingField = 0x134;
		constexpr auto MoonLightColork__BackingField = 0x144;
		constexpr auto SunRayColork__BackingField = 0x154;
		constexpr auto MoonRayColork__BackingField = 0x164;
		constexpr auto SunSkyColork__BackingField = 0x174;
		constexpr auto MoonSkyColork__BackingField = 0x184;
		constexpr auto SunMeshColork__BackingField = 0x194;
		constexpr auto MoonMeshColork__BackingField = 0x1a4;
		constexpr auto SunCloudColork__BackingField = 0x1b4;
		constexpr auto MoonCloudColork__BackingField = 0x1c4;
		constexpr auto FogColork__BackingField = 0x1d4;
		constexpr auto GroundColork__BackingField = 0x1e4;
		constexpr auto AmbientColork__BackingField = 0x1f4;
		constexpr auto MoonHaloColork__BackingField = 0x204;
		constexpr auto ReflectionCur = 0x218;
		constexpr auto ReflectionSrc = 0x220;
		constexpr auto ReflectionDst = 0x228;
		constexpr auto ReflectionUpdateSpeed = 0x8;
		constexpr auto ReflectionResolution = 0xc;
		constexpr auto ReflectionUpdateInterval = 0x10;
		constexpr auto ReflectionTimeSlicing = 0x14;
		constexpr auto timeSinceLightUpdate = 0x230;
		constexpr auto timeSinceAmbientUpdate = 0x234;
		constexpr auto timeSinceReflectionUpdate = 0x238;
		constexpr auto kBetaMie = 0x23c;
		constexpr auto kSun = 0x248;
		constexpr auto k4PI = 0x258;
		constexpr auto kRadius = 0x268;
		constexpr auto kScale = 0x278;

		constexpr auto get_Instances = 0x134cd00;
		constexpr auto get_Instance = 0x134cc30;
		constexpr auto get_Initialized = 0xcc6380;
		constexpr auto set_Initialized = 0xcc6860;
		constexpr auto get_Headless = 0x134cc10;
		constexpr auto get_Components = 0xc8d440;
		constexpr auto set_Components = 0xe36b30;
		constexpr auto get_Resources = 0xa7a720;
		constexpr auto set_Resources = 0xc8e1a0;
		constexpr auto get_IsDay = 0x134cd60;
		constexpr auto set_IsDay = 0x134d130;
		constexpr auto get_IsNight = 0x134cd70;
		constexpr auto set_IsNight = 0x134d140;
		constexpr auto get_Radius = 0x134d010;
		constexpr auto get_Diameter = 0x134cbb0;
		constexpr auto get_LerpValue = 0xd64b10;
		constexpr auto set_LerpValue = 0xd64cc0;
		constexpr auto get_SunZenith = 0x134d0d0;
		constexpr auto set_SunZenith = 0x134d340;
		constexpr auto get_SunAltitude = 0x134d050;
		constexpr auto set_SunAltitude = 0x134d2a0;
		constexpr auto get_SunAzimuth = 0x134d060;
		constexpr auto set_SunAzimuth = 0x134d2b0;
		constexpr auto get_MoonZenith = 0x134cfc0;
		constexpr auto set_MoonZenith = 0x134d290;
		constexpr auto get_MoonAltitude = 0x134cf10;
		constexpr auto set_MoonAltitude = 0x134d1e0;
		constexpr auto get_MoonAzimuth = 0x134cf20;
		constexpr auto set_MoonAzimuth = 0x134d1f0;
		constexpr auto get_SunsetTime = 0x134d0f0;
		constexpr auto set_SunsetTime = 0x134d360;
		constexpr auto get_SunriseTime = 0x134d0e0;
		constexpr auto set_SunriseTime = 0x134d350;
		constexpr auto get_LocalSiderealTime = 0x134cee0;
		constexpr auto set_LocalSiderealTime = 0x134d1b0;
		constexpr auto get_LightZenith = 0x134ce20;
		constexpr auto get_LightIntensity = 0x134cdf0;
		constexpr auto get_SunVisibility = 0x134d0c0;
		constexpr auto set_SunVisibility = 0x134d330;
		constexpr auto get_MoonVisibility = 0x134cfb0;
		constexpr auto set_MoonVisibility = 0x134d280;
		constexpr auto get_SunDirection = 0x134d070;
		constexpr auto set_SunDirection = 0x134d2d0;
		constexpr auto get_MoonDirection = 0x134cf40;
		constexpr auto set_MoonDirection = 0x134d210;
		constexpr auto get_LightDirection = 0x134cdd0;
		constexpr auto set_LightDirection = 0x134d150;
		constexpr auto get_LocalSunDirection = 0x134cef0;
		constexpr auto set_LocalSunDirection = 0x134d1c0;
		constexpr auto get_LocalMoonDirection = 0x134cec0;
		constexpr auto set_LocalMoonDirection = 0x134d190;
		constexpr auto get_LocalLightDirection = 0x134cea0;
		constexpr auto set_LocalLightDirection = 0x134d170;
		constexpr auto get_SunLightColor = 0x134d090;
		constexpr auto set_SunLightColor = 0x134d2f0;
		constexpr auto get_MoonLightColor = 0x134cf70;
		constexpr auto set_MoonLightColor = 0x134d240;
		constexpr auto get_LightColor = 0x134cd80;
		constexpr auto get_SunRayColor = 0x134d0b0;
		constexpr auto set_SunRayColor = 0x134d310;
		constexpr auto get_MoonRayColor = 0x134cf90;
		constexpr auto set_MoonRayColor = 0x134d260;
		constexpr auto get_SunSkyColor = 0x1083fa0;
		constexpr auto set_SunSkyColor = 0x134d320;
		constexpr auto get_MoonSkyColor = 0x134cfa0;
		constexpr auto set_MoonSkyColor = 0x134d270;
		constexpr auto get_SunMeshColor = 0x134d0a0;
		constexpr auto set_SunMeshColor = 0x134d300;
		constexpr auto get_MoonMeshColor = 0x134cf80;
		constexpr auto set_MoonMeshColor = 0x134d250;
		constexpr auto get_SunCloudColor = 0xe46200;
		constexpr auto set_SunCloudColor = 0x134d2c0;
		constexpr auto get_MoonCloudColor = 0x134cf30;
		constexpr auto set_MoonCloudColor = 0x134d200;
		constexpr auto get_FogColor = 0x134cbf0;
		constexpr auto set_FogColor = 0x134d110;
		constexpr auto get_GroundColor = 0x134cc00;
		constexpr auto set_GroundColor = 0x134d120;
		constexpr auto get_AmbientColor = 0x134cba0;
		constexpr auto set_AmbientColor = 0x134d100;
		constexpr auto get_MoonHaloColor = 0x134cf60;
		constexpr auto set_MoonHaloColor = 0x134d230;
		constexpr auto get_Probe = 0x134cff0;
		constexpr auto get_ProbeInstance = 0x134cfd0;
		constexpr auto OrbitalToUnity = 0x1345640;
		constexpr auto OrbitalToLocal = 0x1345580;
		constexpr auto SampleAtmosphere = 0x1346650;
		constexpr auto RenderToSphericalHarmonics = 0x13464f0;
		constexpr auto RenderToCubemap = 0x1345750;
		constexpr auto RenderToProbe = 0x1345890;
		constexpr auto ReflectionIsUpdating = 0x1345710;
		constexpr auto UpdateProbeBlending = 0x134a6b0;
		constexpr auto UpdateProbeProperties = 0x134a7a0;
		constexpr auto SampleFogColor = 0x13469d0;
		constexpr auto SampleSkyColor = 0x1346c80;
		constexpr auto SampleEquatorColor = 0x1346910;
		constexpr auto UpdateFog = 0x134a630;
		constexpr auto UpdateAmbient = 0x1348290;
		constexpr auto UpdateReflection = 0x134b1d0;
		constexpr auto DelayReflectionUpdate = 0x1344e10;
		constexpr auto LoadParameters = 0x1345200;
		constexpr auto SaveParameters = 0x1346d90;
		constexpr auto UpdateQualitySettings = 0x134abc0;
		constexpr auto UpdateRenderSettings = 0x134b2d0;
		constexpr auto UpdateShaderKeywords = 0x134b8a0;
		constexpr auto UpdateShaderProperties = 0x134bb00;
		constexpr auto ShaderScale = 0x13473f0;
		constexpr auto ShaderMiePhase = 0x13470d0;
		constexpr auto ShaderRayleighPhase = 0x13473d0;
		constexpr auto ShaderNightSkyColor = 0x13472e0;
		constexpr auto ShaderMoonHaloColor = 0x13471a0;
		constexpr auto TOD_HDR2LDR = 0x1348040;
		constexpr auto TOD_GAMMA2LINEAR = 0x1347fe0;
		constexpr auto TOD_LINEAR2GAMMA = 0x13481c0;
		constexpr auto ShaderScatteringColor = 0x13474a0;
		constexpr auto Initialize = 0x1344e20;
		constexpr auto Cleanup = 0x1344cf0;
		constexpr auto OnEnable = 0x1345530;
		constexpr auto OnDisable = 0x1344cf0;
		constexpr auto LateUpdate = 0x1344f20;
		constexpr auto OnValidate = 0x1345540;
		constexpr auto UpdateScattering = 0x134b6f0;
		constexpr auto UpdateCelestials = 0x1348730;
		constexpr auto ctor = 0x134ca90;
		constexpr auto cctor = 0x134c9d0;
	};

	namespace UnityEngine_Random {

		constexpr auto InitState = 0x1b7f050;
		constexpr auto get_state = 0x1b7f320;
		constexpr auto set_state = 0x1b7f3d0;
		constexpr auto Range = 0x1b7f0d0;
		constexpr auto RandomRangeInt = 0x1b7f090;
		constexpr auto get_value = 0x1b7f360;
		constexpr auto get_insideUnitSphere = 0x1b7f1a0;
		constexpr auto GetRandomUnitCircle = 0x1b7f010;
		constexpr auto get_insideUnitCircle = 0x1b7f120;
		constexpr auto get_onUnitSphere = 0x1b7f220;
		constexpr auto get_rotation = 0x1b7f2a0;
		constexpr auto RandomRange = 0x1b7f090;
		constexpr auto ColorHSV = 0x1b7ee50;
		constexpr auto get_state_Injected = 0x1b7f2e0;
		constexpr auto set_state_Injected = 0x1b7f390;
		constexpr auto get_insideUnitSphere_Injected = 0x1b7f160;
		constexpr auto get_onUnitSphere_Injected = 0x1b7f1e0;
		constexpr auto get_rotation_Injected = 0x1b7f260;
	};

	namespace UnityEngine_PhysicsScene {
		constexpr auto m_Handle = 0x10;

		constexpr auto ToString = 0x32d790;
		constexpr auto GetHashCode = 0x14f4c0;
		constexpr auto Equals = 0x32d250;
		constexpr auto Raycast = 0x32d520;
		constexpr auto Internal_RaycastTest = 0x2538ec0;
		constexpr auto Internal_Raycast = 0x2538fa0;
		constexpr auto Internal_RaycastNonAlloc = 0x2538de0;
		constexpr auto Query_CapsuleCast = 0x25396d0;
		constexpr auto Internal_CapsuleCast = 0x2538bc0;
		constexpr auto CapsuleCast = 0x32d1a0;
		constexpr auto Internal_CapsuleCastNonAlloc = 0x2538b20;
		constexpr auto OverlapCapsuleNonAlloc_Internal = 0x25393f0;
		constexpr auto OverlapCapsule = 0x32d380;
		constexpr auto Query_SphereCast = 0x25397e0;
		constexpr auto Internal_SphereCast = 0x2539110;
		constexpr auto SphereCast = 0x32d610;
		constexpr auto Internal_SphereCastNonAlloc = 0x2539080;
		constexpr auto OverlapSphereNonAlloc_Internal = 0x25394e0;
		constexpr auto OverlapSphere = 0x32d420;
		constexpr auto Query_BoxCast = 0x25395c0;
		constexpr auto Internal_BoxCast = 0x25388f0;
		constexpr auto BoxCast = 0x32cfb0;
		constexpr auto OverlapBoxNonAlloc_Internal = 0x2539300;
		constexpr auto OverlapBox = 0x32d2d0;
		constexpr auto Internal_RaycastTest_Injected = 0x2538e50;
		constexpr auto Internal_Raycast_Injected = 0x2538f30;
		constexpr auto Internal_RaycastNonAlloc_Injected = 0x2538d70;
		constexpr auto Query_CapsuleCast_Injected = 0x2539660;
		constexpr auto Internal_CapsuleCastNonAlloc_Injected = 0x2538ab0;
		constexpr auto OverlapCapsuleNonAlloc_Internal_Injected = 0x2539380;
		constexpr auto Query_SphereCast_Injected = 0x2539770;
		constexpr auto Internal_SphereCastNonAlloc_Injected = 0x2539010;
		constexpr auto OverlapSphereNonAlloc_Internal_Injected = 0x2539470;
		constexpr auto Query_BoxCast_Injected = 0x2539550;
		constexpr auto OverlapBoxNonAlloc_Internal_Injected = 0x2539290;
	};

	namespace UnityEngine_GameObjectEx {

		constexpr auto ToBaseEntity = 0x7159c0;
		constexpr auto IsOnLayer = 0x715870;
		constexpr auto GetEntityFromRegistry = 0x715740;
		constexpr auto GetEntityFromComponent = 0x715640;
		constexpr auto SetHierarchyGroup = 0x715900;
	};

	namespace BaseHelicopter {
		constexpr auto weakspots = 0x240;
		constexpr auto rotorPivot = 0x248;
		constexpr auto mainRotor = 0x250;
		constexpr auto mainRotor_blades = 0x258;
		constexpr auto mainRotor_blur = 0x260;
		constexpr auto tailRotor = 0x268;
		constexpr auto tailRotor_blades = 0x270;
		constexpr auto tailRotor_blur = 0x278;
		constexpr auto rocket_tube_left = 0x280;
		constexpr auto rocket_tube_right = 0x288;
		constexpr auto left_gun_yaw = 0x290;
		constexpr auto left_gun_pitch = 0x298;
		constexpr auto left_gun_muzzle = 0x2a0;
		constexpr auto right_gun_yaw = 0x2a8;
		constexpr auto right_gun_pitch = 0x2b0;
		constexpr auto right_gun_muzzle = 0x2b8;
		constexpr auto spotlight_rotation = 0x2c0;
		constexpr auto rocket_fire_effect = 0x2c8;
		constexpr auto gun_fire_effect = 0x2d0;
		constexpr auto bulletEffect = 0x2d8;
		constexpr auto explosionEffect = 0x2e0;
		constexpr auto fireBall = 0x2e8;
		constexpr auto crateToDrop = 0x2f0;
		constexpr auto maxCratesToSpawn = 0x2f8;
		constexpr auto bulletSpeed = 0x2fc;
		constexpr auto bulletDamage = 0x300;
		constexpr auto servergibs = 0x308;
		constexpr auto debrisFieldMarker = 0x310;
		constexpr auto rotorWashSoundDef = 0x318;
		constexpr auto _rotorWashSound = 0x320;
		constexpr auto flightEngineSoundDef = 0x328;
		constexpr auto flightThwopsSoundDef = 0x330;
		constexpr auto flightEngineSound = 0x338;
		constexpr auto flightThwopsSound = 0x340;
		constexpr auto flightEngineGainMod = 0x348;
		constexpr auto flightThwopsGainMod = 0x350;
		constexpr auto rotorGainModSmoothing = 0x358;
		constexpr auto engineGainMin = 0x35c;
		constexpr auto engineGainMax = 0x360;
		constexpr auto thwopGainMin = 0x364;
		constexpr auto thwopGainMax = 0x368;
		constexpr auto spotlightJitterAmount = 0x36c;
		constexpr auto spotlightJitterSpeed = 0x370;
		constexpr auto nightLights = 0x378;
		constexpr auto spotlightTarget = 0x380;
		constexpr auto engineSpeed = 0x38c;
		constexpr auto targetEngineSpeed = 0x390;
		constexpr auto blur_rotationScale = 0x394;
		constexpr auto _rotorWashParticles = 0x398;
		constexpr auto myAI = 0x3a0;
		constexpr auto mapMarkerEntityPrefab = 0x3a8;
		constexpr auto client_rotorPivotIdeal = 0x3b0;
		constexpr auto nightLightsOn = 0x3c0;

		constexpr auto OnRpcMessage = 0x8e80c0;
		constexpr auto InitalizeWeakspots = 0x8e7b20;
		constexpr auto MaxVelocity = 0x5b08f0;
		constexpr auto InitShared = 0x8e7a90;
		constexpr auto Load = 0x8e7e00;
		constexpr auto ClientInit = 0x8e74b0;
		constexpr auto InitializeClientsideEffects = 0x8e7ba0;
		constexpr auto DoClientDestroy = 0x8e74d0;
		constexpr auto SetLights = 0x8e8510;
		constexpr auto Update = 0x8e8f80;
		constexpr auto UpdateEffects = 0x8e8630;
		constexpr auto UpdateRotorWashPosition = 0x8e8e40;
		constexpr auto ToggleRotorWash = 0x8e85b0;
		constexpr auto UpdateRotorVisibility = 0x8e8db0;
		constexpr auto FireGun = 0x8e75b0;
		constexpr auto ctor = 0x8e96e0;
	};

	namespace HitInfo {
		constexpr auto Initiator = 0x10;
		constexpr auto WeaponPrefab = 0x18;
		constexpr auto Weapon = 0x20;
		constexpr auto DoHitEffects = 0x28;
		constexpr auto DoDecals = 0x29;
		constexpr auto IsPredicting = 0x2a;
		constexpr auto UseProtection = 0x2b;
		constexpr auto Predicted = 0x30;
		constexpr auto DidHit = 0x38;
		constexpr auto HitEntity = 0x40;
		constexpr auto HitBone = 0x48;
		constexpr auto HitPart = 0x4c;
		constexpr auto HitMaterial = 0x50;
		constexpr auto HitPositionWorld = 0x54;
		constexpr auto HitPositionLocal = 0x60;
		constexpr auto HitNormalWorld = 0x6c;
		constexpr auto HitNormalLocal = 0x78;
		constexpr auto PointStart = 0x84;
		constexpr auto PointEnd = 0x90;
		constexpr auto ProjectileID = 0x9c;
		constexpr auto ProjectileHits = 0xa0;
		constexpr auto ProjectileDistance = 0xa4;
		constexpr auto ProjectileIntegrity = 0xa8;
		constexpr auto ProjectileTravelTime = 0xac;
		constexpr auto ProjectileTrajectoryMismatch = 0xb0;
		constexpr auto ProjectileVelocity = 0xb4;
		constexpr auto ProjectilePrefab = 0xc0;
		constexpr auto material = 0xc8;
		constexpr auto damageProperties = 0xd0;
		constexpr auto damageTypes = 0xd8;
		constexpr auto CanGather = 0xe0;
		constexpr auto DidGather = 0xe1;
		constexpr auto gatherScale = 0xe4;

		constexpr auto IsProjectile = 0x8abec0;
		constexpr auto get_InitiatorPlayer = 0x8ac710;
		constexpr auto get_attackNormal = 0x8ac7a0;
		constexpr auto get_hasDamage = 0x8acca0;
		constexpr auto ctor = 0x8ac530;
		constexpr auto LoadFromAttack = 0x8abed0;
		constexpr auto get_isHeadshot = 0x8accd0;
		constexpr auto get_bonePhrase = 0x8acb40;
		constexpr auto get_boneName = 0x8ac9b0;
		constexpr auto get_boneArea = 0x8ac8a0;
		constexpr auto PositionOnRay = 0x8ac0d0;
		constexpr auto HitPositionOnRay = 0x8abc90;
		constexpr auto IsNaNOrInfinity = 0x8abce0;
	};

	namespace System_Number {

		constexpr auto NumberBufferToDecimal = 0x18665e0;
		constexpr auto NumberBufferToDouble = 0x18665f0;
		constexpr auto FormatDecimal = 0x1865b00;
		constexpr auto FormatDouble = 0x1865c20;
		constexpr auto FormatInt32 = 0x1865ca0;
		constexpr auto FormatUInt32 = 0x1866000;
		constexpr auto FormatInt64 = 0x1865e10;
		constexpr auto FormatUInt64 = 0x1866160;
		constexpr auto FormatSingle = 0x1865f80;
		constexpr auto HexNumberToInt32 = 0x18662c0;
		constexpr auto HexNumberToInt64 = 0x1866340;
		constexpr auto HexNumberToUInt32 = 0x1866400;
		constexpr auto HexNumberToUInt64 = 0x1866480;
		constexpr auto IsWhite = 0x1866510;
		constexpr auto NumberToInt32 = 0x1866600;
		constexpr auto NumberToInt64 = 0x1866660;
		constexpr auto NumberToUInt32 = 0x18666e0;
		constexpr auto NumberToUInt64 = 0x1866740;
		constexpr auto MatchChars = 0x1866570;
		constexpr auto ParseDecimal = 0x18667b0;
		constexpr auto ParseDouble = 0x1866920;
		constexpr auto ParseInt32 = 0x1866bd0;
		constexpr auto ParseInt64 = 0x1866e20;
		constexpr auto ParseNumber = 0x1867090;
		constexpr auto ParseSingle = 0x1867b80;
		constexpr auto ParseUInt32 = 0x1867ea0;
		constexpr auto ParseUInt64 = 0x18680e0;
		constexpr auto StringToNumber = 0x1868340;
		constexpr auto TrailingZeros = 0x1868480;
		constexpr auto TryParseDecimal = 0x18684e0;
		constexpr auto TryParseDouble = 0x1868660;
		constexpr auto TryParseInt32 = 0x18687e0;
		constexpr auto TryParseInt64 = 0x1868a20;
		constexpr auto TryParseSingle = 0x1868bf0;
		constexpr auto TryParseUInt32 = 0x1868da0;
		constexpr auto TryParseUInt64 = 0x1868fe0;
		constexpr auto TryStringToNumber = 0x1869300;
	};

	namespace System_Globalization_NumberFormatInfo {
		constexpr auto numberGroupSizes = 0x10;
		constexpr auto currencyGroupSizes = 0x18;
		constexpr auto percentGroupSizes = 0x20;
		constexpr auto positiveSign = 0x28;
		constexpr auto negativeSign = 0x30;
		constexpr auto numberDecimalSeparator = 0x38;
		constexpr auto numberGroupSeparator = 0x40;
		constexpr auto currencyGroupSeparator = 0x48;
		constexpr auto currencyDecimalSeparator = 0x50;
		constexpr auto currencySymbol = 0x58;
		constexpr auto ansiCurrencySymbol = 0x60;
		constexpr auto nanSymbol = 0x68;
		constexpr auto positiveInfinitySymbol = 0x70;
		constexpr auto negativeInfinitySymbol = 0x78;
		constexpr auto percentDecimalSeparator = 0x80;
		constexpr auto percentGroupSeparator = 0x88;
		constexpr auto percentSymbol = 0x90;
		constexpr auto perMilleSymbol = 0x98;
		constexpr auto nativeDigits = 0xa0;
		constexpr auto m_dataItem = 0xa8;
		constexpr auto numberDecimalDigits = 0xac;
		constexpr auto currencyDecimalDigits = 0xb0;
		constexpr auto currencyPositivePattern = 0xb4;
		constexpr auto currencyNegativePattern = 0xb8;
		constexpr auto numberNegativePattern = 0xbc;
		constexpr auto percentPositivePattern = 0xc0;
		constexpr auto percentNegativePattern = 0xc4;
		constexpr auto percentDecimalDigits = 0xc8;
		constexpr auto digitSubstitution = 0xcc;
		constexpr auto isReadOnly = 0xd0;
		constexpr auto m_useUserOverride = 0xd1;
		constexpr auto m_isInvariant = 0xd2;
		constexpr auto validForParseAsNumber = 0xd3;
		constexpr auto validForParseAsCurrency = 0xd4;

		constexpr auto ctor = 0x153d420;
		constexpr auto OnSerializing = 0x153ca80;
		constexpr auto OnDeserializing = 0x477ed0;
		constexpr auto OnDeserialized = 0x477ed0;
		constexpr auto get_InvariantInfo = 0x153d5b0;
		constexpr auto GetInstance = 0x153c800;
		constexpr auto Clone = 0x153c700;
		constexpr auto get_CurrencyDecimalDigits = 0x49e9f0;
		constexpr auto get_CurrencyDecimalSeparator = 0x5ce9f0;
		constexpr auto get_IsReadOnly = 0xc8e170;
		constexpr auto get_CurrencyGroupSizes = 0x153d430;
		constexpr auto get_NumberGroupSizes = 0x153d6c0;
		constexpr auto get_PercentGroupSizes = 0x153d740;
		constexpr auto get_CurrencyGroupSeparator = 0x869580;
		constexpr auto get_CurrencySymbol = 0x5ce9e0;
		constexpr auto get_CurrentInfo = 0x153d4b0;
		constexpr auto get_NaNSymbol = 0x667410;
		constexpr auto get_CurrencyNegativePattern = 0x8f4ca0;
		constexpr auto get_NumberNegativePattern = 0x8f4c80;
		constexpr auto get_PercentPositivePattern = 0x1343f60;
		constexpr auto get_PercentNegativePattern = 0xb9a080;
		constexpr auto get_NegativeInfinitySymbol = 0x65d6f0;
		constexpr auto get_NegativeSign = 0x5c76d0;
		constexpr auto get_NumberDecimalDigits = 0x113c890;
		constexpr auto get_NumberDecimalSeparator = 0x5e9860;
		constexpr auto get_NumberGroupSeparator = 0x5e1d80;
		constexpr auto get_CurrencyPositivePattern = 0x8f4c90;
		constexpr auto get_PositiveInfinitySymbol = 0x800010;
		constexpr auto get_PositiveSign = 0x718260;
		constexpr auto get_PercentDecimalDigits = 0xb9a0a0;
		constexpr auto get_PercentDecimalSeparator = 0x99f650;
		constexpr auto get_PercentGroupSeparator = 0x99f620;
		constexpr auto get_PercentSymbol = 0x659250;
		constexpr auto get_PerMilleSymbol = 0x80c780;
		constexpr auto GetFormat = 0x153c770;
		constexpr auto ReadOnly = 0x153cb10;
		constexpr auto ValidateParseStyleInteger = 0x153cc90;
		constexpr auto ValidateParseStyleFloatingPoint = 0x153cbc0;
	};

	namespace UnityEngine_GL {

		constexpr auto Vertex3 = 0x1a74ec0;
		constexpr auto Vertex = 0x1a74f20;
		constexpr auto TexCoord3 = 0x1a74e60;
		constexpr auto TexCoord2 = 0x1a74e10;
		constexpr auto MultiTexCoord3 = 0x1a74d40;
		constexpr auto MultiTexCoord2 = 0x1a74ce0;
		constexpr auto ImmediateColor = 0x1a74a20;
		constexpr auto Color = 0x1a746f0;
		constexpr auto get_sRGBWrite = 0x1a74f80;
		constexpr auto set_sRGBWrite = 0x1a74fb0;
		constexpr auto Flush = 0x1a74780;
		constexpr auto MultMatrix = 0x1a74ca0;
		constexpr auto PushMatrix = 0x1a74de0;
		constexpr auto PopMatrix = 0x1a74db0;
		constexpr auto LoadIdentity = 0x1a74b50;
		constexpr auto LoadOrtho = 0x1a74b80;
		constexpr auto LoadPixelMatrix = 0x1a74bb0;
		constexpr auto LoadProjectionMatrix = 0x1a74c20;
		constexpr auto GetGPUProjectionMatrix = 0x1a749b0;
		constexpr auto GLLoadPixelMatrixScript = 0x1a748d0;
		constexpr auto GLIssuePluginEvent = 0x1a74890;
		constexpr auto IssuePluginEvent = 0x1a74aa0;
		constexpr auto Begin = 0x1a74600;
		constexpr auto End = 0x1a74750;
		constexpr auto GLClear = 0x1a74820;
		constexpr auto Clear = 0x1a74690;
		constexpr auto ClearWithSkybox = 0x1a74640;
		constexpr auto MultMatrix_Injected = 0x1a74c60;
		constexpr auto LoadProjectionMatrix_Injected = 0x1a74be0;
		constexpr auto GetGPUProjectionMatrix_Injected = 0x1a74950;
		constexpr auto GLClear_Injected = 0x1a747b0;
	};

	namespace UnityEngine_Material {

		constexpr auto CreateWithShader = 0x1b6b340;
		constexpr auto CreateWithMaterial = 0x1b6b2f0;
		constexpr auto CreateWithString = 0x1b6b390;
		constexpr auto ctor = 0x1b6c8f0;
		constexpr auto get_shader = 0x1b6cbb0;
		constexpr auto set_shader = 0x1b6cd40;
		constexpr auto get_color = 0x1b6c980;
		constexpr auto set_color = 0x1b6cbf0;
		constexpr auto get_mainTexture = 0x1b6ca90;
		constexpr auto GetFirstPropertyNameIdByAttribute = 0x1b6b660;
		constexpr auto HasProperty = 0x1b6bb70;
		constexpr auto get_renderQueue = 0x1b6cb70;
		constexpr auto set_renderQueue = 0x1b6cd00;
		constexpr auto EnableKeyword = 0x1b6b420;
		constexpr auto DisableKeyword = 0x1b6b3d0;
		constexpr auto IsKeywordEnabled = 0x1b6bbb0;
		constexpr auto get_enableInstancing = 0x1b6ca50;
		constexpr auto set_enableInstancing = 0x1b6ccb0;
		constexpr auto get_passCount = 0x1b6cb30;
		constexpr auto GetShaderPassEnabled = 0x1b6b7b0;
		constexpr auto GetPassName = 0x1b6b730;
		constexpr auto FindPass = 0x1b6b470;
		constexpr auto SetOverrideTag = 0x1b6c340;
		constexpr auto GetTagImpl = 0x1b6b800;
		constexpr auto GetTag = 0x1b6b900;
		constexpr auto SetPass = 0x1b6c3a0;
		constexpr auto CopyPropertiesFromMaterial = 0x1b6b2a0;
		constexpr auto GetShaderKeywords = 0x1b6b770;
		constexpr auto SetShaderKeywords = 0x1b6c3e0;
		constexpr auto get_shaderKeywords = 0x1b6b770;
		constexpr auto set_shaderKeywords = 0x1b6c3e0;
		constexpr auto SetFloatImpl = 0x1b6c090;
		constexpr auto SetColorImpl = 0x1b6bd00;
		constexpr auto SetMatrixImpl = 0x1b6c200;
		constexpr auto SetTextureImpl = 0x1b6c430;
		constexpr auto SetBufferImpl = 0x1b6bc00;
		constexpr auto GetFloatImpl = 0x1b6b6a0;
		constexpr auto GetColorImpl = 0x1b6b510;
		constexpr auto GetTextureImpl = 0x1b6b970;
		constexpr auto SetFloatArrayImpl = 0x1b6be00;
		constexpr auto SetTextureOffsetImpl = 0x1b6c4d0;
		constexpr auto SetTextureScaleImpl = 0x1b6c5d0;
		constexpr auto SetFloatArray = 0x1b6bf60;
		constexpr auto SetFloat = 0x1b6c0e0;
		constexpr auto SetInt = 0x1b6c140;
		constexpr auto SetColor = 0x1b6bda0;
		constexpr auto SetVector = 0x1b6c6e0;
		constexpr auto SetMatrix = 0x1b6c2c0;
		constexpr auto SetTexture = 0x1b6c680;
		constexpr auto SetBuffer = 0x1b6bc50;
		constexpr auto GetFloat = 0x1b6b6e0;
		constexpr auto GetColor = 0x1b6b5e0;
		constexpr auto GetVector = 0x1b6ba00;
		constexpr auto GetTexture = 0x1b6b9b0;
		constexpr auto SetTextureOffset = 0x1b6c520;
		constexpr auto SetTextureScale = 0x1b6c620;
		constexpr auto SetColorImpl_Injected = 0x1b6bcb0;
		constexpr auto SetMatrixImpl_Injected = 0x1b6c1b0;
		constexpr auto GetColorImpl_Injected = 0x1b6b4c0;
		constexpr auto SetTextureOffsetImpl_Injected = 0x1b6c480;
		constexpr auto SetTextureScaleImpl_Injected = 0x1b6c580;
	};

	namespace UnityEngine_Screen {

		constexpr auto get_width = 0x1c27c30;
		constexpr auto get_height = 0x1c27bd0;
		constexpr auto get_dpi = 0x1c27b70;
		constexpr auto get_currentResolution = 0x1c27b30;
		constexpr auto get_fullScreen = 0x1c27ba0;
		constexpr auto SetResolution = 0x1c27a30;
		constexpr auto get_resolutions = 0x1c27c00;
		constexpr auto get_currentResolution_Injected = 0x1c27af0;
	};

	namespace TOD_AtmosphereParameters {
		constexpr auto RayleighMultiplier = 0x10;
		constexpr auto MieMultiplier = 0x14;
		constexpr auto Brightness = 0x18;
		constexpr auto Contrast = 0x1c;
		constexpr auto Directionality = 0x20;
		constexpr auto Fogginess = 0x24;

		constexpr auto ctor = 0x133ea60;
	};

	namespace TOD_MoonParameters {
		constexpr auto MeshSize = 0x10;
		constexpr auto MeshBrightness = 0x14;
		constexpr auto MeshContrast = 0x18;
		constexpr auto HaloSize = 0x1c;
		constexpr auto HaloBrightness = 0x20;
		constexpr auto Position = 0x24;

		constexpr auto ctor = 0x13427c0;
	};

	namespace TOD_CloudParameters {
		constexpr auto Size = 0x10;
		constexpr auto Opacity = 0x14;
		constexpr auto Coverage = 0x18;
		constexpr auto Sharpness = 0x1c;
		constexpr auto Coloring = 0x20;
		constexpr auto Attenuation = 0x24;
		constexpr auto Saturation = 0x28;
		constexpr auto Scattering = 0x2c;
		constexpr auto Brightness = 0x30;

		constexpr auto ctor = 0x133fef0;
	};

	namespace TOD_NightParameters {
		constexpr auto MoonColor = 0x10;
		constexpr auto LightColor = 0x18;
		constexpr auto RayColor = 0x20;
		constexpr auto SkyColor = 0x28;
		constexpr auto CloudColor = 0x30;
		constexpr auto FogColor = 0x38;
		constexpr auto AmbientColor = 0x40;
		constexpr auto LightIntensity = 0x48;
		constexpr auto ShadowStrength = 0x4c;
		constexpr auto AmbientMultiplier = 0x50;
		constexpr auto ReflectionMultiplier = 0x54;

		constexpr auto ctor = 0x1342800;
	};

}

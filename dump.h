namespace O {
	namespace BaseNetworkable {
		constexpr auto JustCreatedk__BackingField = 0x18;
		constexpr auto entityDestroy = 0x20;
		constexpr auto postNetworkUpdateComponents = 0x28;
		constexpr auto parentEntity = 0x30;
		constexpr auto children = 0x40;
		constexpr auto canTriggerParent = 0x48;
		constexpr auto prefabID = 0x4c;
		constexpr auto globalBroadcast = 0x50;
		constexpr auto net = 0x58;
		constexpr auto IsDestroyedk__BackingField = 0x60;
		constexpr auto _prefabName = 0x68;
		constexpr auto _prefabNameWithoutExtension = 0x70;

		constexpr auto get_JustCreated = 0x8a21d0;
		constexpr auto set_JustCreated = 0x8a23c0;
		constexpr auto ClientSpawn = 0x8a0a30;
		constexpr auto ClientOnEnable = 0x8a09b0;
		constexpr auto ClientInit = 0x8a0850;
		constexpr auto OnNetworkUpdate = 0x8a1cf0;
		constexpr auto PreNetworkUpdate = 0x479d20;
		constexpr auto PostNetworkUpdate = 0x479d20;
		constexpr auto ShouldDestroyWithGroup = 0x590d20;
		constexpr auto ShouldDestroyImmediately = 0x59db70;
		constexpr auto NetworkDestroy = 0x8a18b0;
		constexpr auto DoClientDestroy = 0x8a0e00;
		constexpr auto DoNetworkDestroy = 0x479d20;
		constexpr auto BroadcastOnPostNetworkUpdate = 0x8a0630;
		constexpr auto PostProcess = 0x8a1e70;
		constexpr auto GetParentEntity = 0x8a11e0;
		constexpr auto HasParent = 0x8a11f0;
		constexpr auto AddChild = 0x8a05a0;
		constexpr auto OnChildAdded = 0x479d20;
		constexpr auto RemoveChild = 0x8a1ef0;
		constexpr auto OnChildRemoved = 0x479d20;
		constexpr auto get_gameManager = 0x8a22f0;
		constexpr auto get_prefabAttribute = 0x8a2350;
		constexpr auto get_IsDestroyed = 0x8a21c0;
		constexpr auto set_IsDestroyed = 0x8a23b0;
		constexpr auto get_PrefabName = 0x8a21e0;
		constexpr auto get_ShortPrefabName = 0x8a2260;
		constexpr auto GetNetworkPosition = 0x8a1150;
		constexpr auto GetNetworkRotation = 0x8a11a0;
		constexpr auto InvokeString = 0x8a1200;
		constexpr auto LookupPrefab = 0x8a1810;
		constexpr auto EqualNetID = 0x8a10d0;
		constexpr auto ResetState = 0x8a1f60;
		constexpr auto InitShared = 0x479d20;
		constexpr auto PreInitShared = 0x479d20;
		constexpr auto PostInitShared = 0x479d20;
		constexpr auto DestroyShared = 0x479d20;
		constexpr auto OnNetworkGroupEnter = 0x479d20;
		constexpr auto OnNetworkGroupLeave = 0x479d20;
		constexpr auto OnNetworkGroupChange = 0x8a1bb0;
		constexpr auto OnNetworkSubscribersEnter = 0x479d20;
		constexpr auto OnNetworkSubscribersLeave = 0x479d20;
		constexpr auto EntityDestroy = 0x8a0fe0;
		constexpr auto DoEntityDestroy = 0x8a0e80;
		constexpr auto SpawnShared = 0x8a1fb0;
		constexpr auto Load = 0x8a1450;
		constexpr auto get_isServer = 0x59db70;
		constexpr auto get_isClient = 0x590d20;
		constexpr auto OnRpcMessage = 0x59db70;
		constexpr auto ctor = 0x8a2120;
		constexpr auto cctor = 0x8a20c0;
	};

	namespace BasePlayer {
		constexpr auto __menuOption_Climb = 0x240;
		constexpr auto __menuOption_Drink = 0x298;
		constexpr auto __menuOption_InviteToTeam = 0x2f0;
		constexpr auto __menuOption_Menu_AssistPlayer = 0x348;
		constexpr auto __menuOption_Menu_LootPlayer = 0x3a0;
		constexpr auto __menuOption_Promote = 0x3f8;
		constexpr auto __menuOption_SaltWater = 0x450;
		constexpr auto lastOpenSoundPlay = 0x4a8;
		constexpr auto currentViewMode = 0x4ac;
		constexpr auto selectedViewMode = 0x4b0;
		constexpr auto lastRevivePoint = 0x4b4;
		constexpr auto lastReviveDirection = 0x4c0;
		constexpr auto playerModel = 0x4d0;
		constexpr auto Frozen = 0x4d8;
		constexpr auto voiceRecorder = 0x4e0;
		constexpr auto voiceSpeaker = 0x4e8;
		constexpr auto input = 0x4f0;
		constexpr auto movement = 0x4f8;
		constexpr auto collision = 0x500;
		constexpr auto emptyState = 0x8;
		constexpr auto _lookingAt = 0x508;
		constexpr auto _lookingAtEntity = 0x510;
		constexpr auto _lookingAtCollider = 0x518;
		constexpr auto lookingAtPointk__BackingField = 0x520;
		constexpr auto wakeTime = 0x52c;
		constexpr auto needsClothesRebuild = 0x530;
		constexpr auto wasSleeping = 0x531;
		constexpr auto wokeUpBefore = 0x532;
		constexpr auto wasDead = 0x533;
		constexpr auto lastClothesHash = 0x534;
		constexpr auto visiblePlayerList = 0x10;
		constexpr auto craftMode = 0x18;
		constexpr auto IsWearingDiveGogglesk__BackingField = 0x538;
		constexpr auto GestureViewModel = 0x540;
		constexpr auto timeSinceUpdatedLookingAt = 0x548;
		constexpr auto nextTopologyTestTime = 0x54c;
		constexpr auto usePressTime = 0x550;
		constexpr auto useHeldTime = 0x554;
		constexpr auto lookingAtTest = 0x558;
		constexpr auto lastDeathTimeClient = 0x1c;
		constexpr auto cachedWaterDrinkingPoint = 0x560;
		constexpr auto gestureList = 0x570;
		constexpr auto gestureFinishedTime = 0x578;
		constexpr auto blockHeldInputTimer = 0x57c;
		constexpr auto currentGesture = 0x580;
		constexpr auto disabledHeldEntity = 0x588;
		constexpr auto nextGestureMenuOpenTime = 0x590;
		constexpr auto lastGestureCancel = 0x594;
		constexpr auto client_lastHelloTime = 0x598;
		constexpr auto currentTeam = 0x5a0;
		constexpr auto MaxTeamSizeToast = 0x20;
		constexpr auto clientTeam = 0x5a8;
		constexpr auto lastReceivedTeamTime = 0x5b0;
		constexpr auto lastPresenceTeamId = 0x5b8;
		constexpr auto lastPresenceTeamSize = 0x5c0;
		constexpr auto playerGroupKey = 0x5c8;
		constexpr auto playerGroupSizeKey = 0x5d0;
		constexpr auto clActiveItem = 0x5d8;
		constexpr auto ClientCurrentMapNote = 0x5e0;
		constexpr auto ClientCurrentDeathNote = 0x5e8;
		constexpr auto missions = 0x5f0;
		constexpr auto _activeMission = 0x5f8;
		constexpr auto modelState = 0x600;
		constexpr auto mounted = 0x608;
		constexpr auto nextSeatSwapTime = 0x618;
		constexpr auto PetEntity = 0x620;
		constexpr auto lastPetCommandIssuedTime = 0x628;
		constexpr auto PetPrefabID = 0x62c;
		constexpr auto PetID = 0x630;
		constexpr auto PetWheelHasBeenOpened = 0x28;
		constexpr auto cachedBuildingPrivilegeTime = 0x634;
		constexpr auto cachedBuildingPrivilege = 0x638;
		constexpr auto maxProjectileID = 0x640;
		constexpr auto lastUpdateTime = 0x644;
		constexpr auto cachedThreatLevel = 0x648;
		constexpr auto serverTickRate = 0x64c;
		constexpr auto clientTickRate = 0x650;
		constexpr auto serverTickInterval = 0x654;
		constexpr auto clientTickInterval = 0x658;
		constexpr auto lastSentTickTime = 0x65c;
		constexpr auto lastTickStopwatch = 0x660;
		constexpr auto lastSentTick = 0x668;
		constexpr auto nextVisThink = 0x670;
		constexpr auto lastTimeSeen = 0x674;
		constexpr auto debugPrevVisible = 0x678;
		constexpr auto fallDamageEffect = 0x680;
		constexpr auto drownEffect = 0x688;
		constexpr auto playerFlags = 0x690;
		constexpr auto eyes = 0x698;
		constexpr auto inventory = 0x6a0;
		constexpr auto blueprints = 0x6a8;
		constexpr auto metabolism = 0x6b0;
		constexpr auto modifiers = 0x6b8;
		constexpr auto playerCollider = 0x6c0;
		constexpr auto Belt = 0x6c8;
		constexpr auto playerRigidbody = 0x6d0;
		constexpr auto userID = 0x6d8;
		constexpr auto UserIDString = 0x6e0;
		constexpr auto gamemodeteam = 0x6e8;
		constexpr auto reputation = 0x6ec;
		constexpr auto _displayName = 0x6f0;
		constexpr auto _lastSetName = 0x6f8;
		constexpr auto playerColliderStanding = 0x700;
		constexpr auto playerColliderDucked = 0x714;
		constexpr auto playerColliderCrawling = 0x728;
		constexpr auto playerColliderLyingDown = 0x73c;
		constexpr auto cachedProtection = 0x750;
		constexpr auto oldCameraFix = 0x29;
		constexpr auto lastHeadshotSoundTime = 0x758;
		constexpr auto nextColliderRefreshTime = 0x75c;
		constexpr auto clothingBlocksAiming = 0x760;
		constexpr auto clothingMoveSpeedReduction = 0x764;
		constexpr auto clothingWaterSpeedBonus = 0x768;
		constexpr auto clothingAccuracyBonus = 0x76c;
		constexpr auto equippingBlocked = 0x770;
		constexpr auto eggVision = 0x774;
		constexpr auto activeTelephone = 0x778;
		constexpr auto designingAIEntity = 0x780;

		constexpr auto GetMenuOptions = 0x5a0dc0;
		constexpr auto get_HasMenuOptions = 0x5bc590;
		constexpr auto OnRpcMessage = 0x5a9180;
		constexpr auto CanBeLooted = 0x596920;
		constexpr auto get_LootPanelTitle = 0x5bcad0;
		constexpr auto Menu_LootPlayer = 0x5a7fe0;
		constexpr auto Menu_LootPlayer_ShowIf = 0x5a7fc0;
		constexpr auto RPC_OpenLootPanel = 0x5b4460;
		constexpr auto PlayOpenSound = 0x5b2750;
		constexpr auto InFirstPersonMode = 0x5a3d30;
		constexpr auto UpdateViewMode = 0x5ba830;
		constexpr auto get_idealViewMode = 0x5bcce0;
		constexpr auto get_shouldDrawBody = 0x5bd200;
		constexpr auto OnViewModeChanged = 0x5b2210;
		constexpr auto ModifyCamera = 0x5a8050;
		constexpr auto Menu_AssistPlayer = 0x5a7f80;
		constexpr auto Menu_AssistPlayer_TimeStart = 0x5a7f40;
		constexpr auto Menu_AssistPlayer_ShowIf = 0x5a7cd0;
		constexpr auto get_lookingAt = 0x5bd170;
		constexpr auto get_lookingAtEntity = 0x5bd0c0;
		constexpr auto get_lookingAtCollider = 0x5bd030;
		constexpr auto get_lookingAtPoint = 0x5bd150;
		constexpr auto set_lookingAtPoint = 0x5bd5f0;
		constexpr auto GetExtrapolationTime = 0x5a0100;
		constexpr auto GetLocalVelocityClient = 0x5a0bc0;
		constexpr auto ClientInit = 0x598420;
		constexpr auto CreatePlayerModel = 0x59d190;
		constexpr auto CreatePlayerCollision = 0x59cfe0;
		constexpr auto CreatePlayerMovement = 0x59d6b0;
		constexpr auto InitLocalPlayer = 0x5a3e70;
		constexpr auto InitRemotePlayer = 0x5a4150;
		constexpr auto HasLocalControls = 0x5a33e0;
		constexpr auto SetNetworkPosition = 0x5b71a0;
		constexpr auto SetNetworkRotation = 0x5b7250;
		constexpr auto DoClientDestroy = 0x59db80;
		constexpr auto PostNetworkUpdate = 0x5b2f80;
		constexpr auto OnFirstWakeUp = 0x5a8aa0;
		constexpr auto get_TimeAwake = 0x5bcb50;
		constexpr auto CL_ClothingChanged = 0x595f20;
		constexpr auto ForceRebuild = 0x59f3b0;
		constexpr auto RebuildWorldModel = 0x5b4900;
		constexpr auto SetDefaultFootstepEffects = 0x5b6960;
		constexpr auto OnSignal = 0x5b1c90;
		constexpr auto FindBone = 0x59e880;
		constexpr auto GetBones = 0x59f600;
		constexpr auto ShouldLerp = 0x5b7a60;
		constexpr auto get_VisiblePlayerList = 0x5bcbb0;
		constexpr auto ClearVisibility = 0x597f50;
		constexpr auto RegisterForVisibility = 0x5b50e0;
		constexpr auto UnregisterFromVisibility = 0x5b85b0;
		constexpr auto FindByID_Clientside = 0x59e980;
		constexpr auto Find_Clientside = 0x59eb50;
		constexpr auto GetRandomFloatBasedOnUserID = 0x5a2c00;
		constexpr auto DisplayHealthInfo = 0x59db70;
		constexpr auto ShouldDestroyWithGroup = 0x5b7a30;
		constexpr auto SetInheritedVelocity = 0x5b6e20;
		constexpr auto TogglePlayerMovement = 0x5b8380;
		constexpr auto GetPerformanceReport = 0x5a2940;
		constexpr auto GetPerformanceReport_Frametime = 0x5a24c0;
		constexpr auto OnBecameRagdoll = 0x5a84d0;
		constexpr auto OnVoiceData = 0x5b2710;
		constexpr auto RecieveAchievement = 0x5b4c70;
		constexpr auto CraftMode = 0x59cd70;
		constexpr auto StartDesigningAI = 0x5b7db0;
		constexpr auto OnDebugAIEventTriggeredStateChange = 0x5a8850;
		constexpr auto ClientOnEnable = 0x5993d0;
		constexpr auto Client_OnRepairFailedResources = 0x59b850;
		constexpr auto TakeDamageHit = 0x5b8150;
		constexpr auto AdminReceivedUGC = 0x594370;
		constexpr auto AdminReceivedPatternFirework = 0x5942b0;
		constexpr auto get_IsWearingDiveGoggles = 0x5bcac0;
		constexpr auto set_IsWearingDiveGoggles = 0x5bd3e0;
		constexpr auto UpdateClothesIfNeeded = 0x5b8700;
		constexpr auto MakeVisible = 0x5a79d0;
		constexpr auto ClientUpdate_Sleeping = 0x59a890;
		constexpr auto ClientUpdate = 0x59acc0;
		constexpr auto RebuildClothingItems = 0x5b46e0;
		constexpr auto UpdateClothingItems = 0x5b8bf0;
		constexpr auto UpdateHolsterOffsets = 0x5b9320;
		constexpr auto PostLateClientCycle = 0x5b2e00;
		constexpr auto IsLocalPlayer = 0x5a5b60;
		constexpr auto ClientUpdateLocalPlayer = 0x599530;
		constexpr auto UpdateTopologyStats = 0x5ba6d0;
		constexpr auto ClientTick = 0x599480;
		constexpr auto DoMovement = 0x59de70;
		constexpr auto MountableOverrideViewAngles = 0x5a8140;
		constexpr auto BlockSprint = 0x595320;
		constexpr auto BlockJump = 0x595280;
		constexpr auto ClientInput = 0x598920;
		constexpr auto UseAction = 0x5bab90;
		constexpr auto GetInteractionEntity = 0x5a0720;
		constexpr auto QuickUse = 0x5b42c0;
		constexpr auto LongUse = 0x5a7910;
		constexpr auto UseStop = 0x5bae60;
		constexpr auto UpdateLookingAt = 0x5b94b0;
		constexpr auto ResetLookingAt = 0x5b5530;
		constexpr auto SetLookingAt = 0x5b6fb0;
		constexpr auto CheckLookingAtVisible = 0x597750;
		constexpr auto FindVehicleParentFor = 0x59ea10;
		constexpr auto OnDied = 0x5a89c0;
		constexpr auto OnRespawnInformation = 0x5a8de0;
		constexpr auto RequestRespawnUpdates = 0x5b53e0;
		constexpr auto OnLand = 0x5a8bf0;
		constexpr auto StartLoading = 0x5b8030;
		constexpr auto StartLoading_Quick = 0x5b7f40;
		constexpr auto FinishLoading = 0x59ee50;
		constexpr auto FullBlack_FadeIn = 0x59f490;
		constexpr auto FullBlack_FadeOut = 0x479d20;
		constexpr auto FinishedLoadingRoutine = 0x59f080;
		constexpr auto DirectionalDamage = 0x59d950;
		constexpr auto UnlockedBlueprint = 0x5b8540;
		constexpr auto CheckForRespawnInfo = 0x5976e0;
		constexpr auto UpdateRichPresenceState = 0x5ba430;
		constexpr auto HandleCompanionPairingResult = 0x5a2ee0;
		constexpr auto UpdateWaterDrinkingPoint = 0x5ba870;
		constexpr auto GetWaterDrinkingPoint = 0x5a2ec0;
		constexpr auto Drink = 0x59e110;
		constexpr auto Drink_ShowIf = 0x59df30;
		constexpr auto SaltWater = 0x479d20;
		constexpr auto SaltWater_ShowIf = 0x5b56b0;
		constexpr auto Climb = 0x59c520;
		constexpr auto Climb_ShowIf = 0x59c280;
		constexpr auto HasPlayerFlag = 0x5a3450;
		constexpr auto get_IsReceivingSnapshot = 0x5bcab0;
		constexpr auto get_IsAdmin = 0x5bc9d0;
		constexpr auto get_IsDeveloper = 0x5bca80;
		constexpr auto get_IsAiming = 0x5bc9e0;
		constexpr auto get_IsFlying = 0x5bca90;
		constexpr auto get_IsConnected = 0x5bc9f0;
		constexpr auto get_InGesture = 0x5bc920;
		constexpr auto get_CurrentGestureBlocksMovement = 0x5bc470;
		constexpr auto get_CurrentGestureIsDance = 0x5bc4b0;
		constexpr auto get_CurrentGestureIsFullBody = 0x5bc4f0;
		constexpr auto get_InGestureCancelCooldown = 0x5bc8f0;
		constexpr auto SetGestureMenuOpen = 0x5b6a20;
		constexpr auto RequestStartGesture = 0x5b5480;
		constexpr auto Client_StartGesture = 0x59bdb0;
		constexpr auto ProcessDanceAction = 0x5b3670;
		constexpr auto SayingHello = 0x5b5a00;
		constexpr auto ProcessGestureStart = 0x5b3b80;
		constexpr auto EndGesture = 0x59e430;
		constexpr auto EndLocalGesture = 0x59e4d0;
		constexpr auto EndGestureShared = 0x59e2c0;
		constexpr auto HideHeldEntity = 0x5a3bc0;
		constexpr auto CancelGesture = 0x597400;
		constexpr auto RemoteGestureCancel = 0x5b51d0;
		constexpr auto CancelGestureInput = 0x596fe0;
		constexpr auto ClearGestureCooldown = 0x597e00;
		constexpr auto ConVarRequestStartGesture = 0x59cb00;
		constexpr auto Client_RemoteCancelledGesture = 0x59bd60;
		constexpr auto IsGestureBlocked = 0x5a53a0;
		constexpr auto get_clientTeamLifetime = 0x5bcc20;
		constexpr auto CLIENT_ReceiveTeamInfo = 0x595930;
		constexpr auto UpdateSteamGroup = 0x5ba480;
		constexpr auto ClearSteamGroup = 0x597e30;
		constexpr auto CLIENT_ClearTeam = 0x5953c0;
		constexpr auto CLIENT_PendingInvite = 0x595560;
		constexpr auto InviteToTeam = 0x5a41c0;
		constexpr auto Promote = 0x5b4150;
		constexpr auto Menu_Promote_Start = 0x479d20;
		constexpr auto Promote_ShowIf = 0x5b3da0;
		constexpr auto LocalPlayerIsLeader = 0x5a7420;
		constexpr auto Invite_ShowIf = 0x5a46e0;
		constexpr auto GetHeldEntity = 0x5a01f0;
		constexpr auto GetHeldItem = 0x5a0430;
		constexpr auto GetHeldItemID = 0x5a03e0;
		constexpr auto HeldEntityViewAngles = 0x5a39a0;
		constexpr auto HeldEntityFrame = 0x5a3530;
		constexpr auto HeldEntityInput = 0x5a3700;
		constexpr auto HeldItemUse = 0x5a3ac0;
		constexpr auto HeldEntityStart = 0x5a38d0;
		constexpr auto HeldEntityEnd = 0x5a3460;
		constexpr auto IsHostileItem = 0x5a5770;
		constexpr auto IsItemHoldRestricted = 0x5a58d0;
		constexpr auto MapInfoOnEnable = 0x5a7a80;
		constexpr auto Client_ReceiveMarkers = 0x59ba20;
		constexpr auto Client_UpdateDeathMarker = 0x59c150;
		constexpr auto Client_AddNewDeathMarker = 0x59b710;
		constexpr auto AddPointOfInterest = 0x5941d0;
		constexpr auto ClearAllPointsOfInterest = 0x597cb0;
		constexpr auto ClearAllMapMarkers = 0x597b50;
		constexpr auto HasAttemptedMission = 0x5a2f90;
		constexpr auto CanAcceptMission = 0x596260;
		constexpr auto IsMissionActive = 0x5a5c40;
		constexpr auto HasCompletedMission = 0x5a3100;
		constexpr auto HasFailedMission = 0x5a3270;
		constexpr auto SetActiveMission = 0x5b6940;
		constexpr auto GetActiveMission = 0x59f5f0;
		constexpr auto HasActiveMission = 0x5a2f80;
		constexpr auto LoadMissions = 0x5a6a00;
		constexpr auto OnModelState = 0x5a8d50;
		constexpr auto OnModelStateChanged = 0x5a8cb0;
		constexpr auto get_isMounted = 0x5bcf30;
		constexpr auto get_isMountingHidingWeapon = 0x5bcf60;
		constexpr auto GetMounted = 0x5a1f70;
		constexpr auto GetMountedVehicle = 0x5a1ee0;
		constexpr auto MarkSwapSeat = 0x5a7ad0;
		constexpr auto SwapSeatCooldown = 0x5b8120;
		constexpr auto ClientUpdateMounted = 0x59a310;
		constexpr auto CLIENT_SetPetPrefabID = 0x595e50;
		constexpr auto CLIENT_SetPetPetLoadedStateIndex = 0x595ca0;
		constexpr auto LinkPet = 0x5a68b0;
		constexpr auto SetPetMenuOpen = 0x5b7360;
		constexpr auto ClientIssuePetCommand = 0x5992e0;
		constexpr auto IsSleeping = 0x5a5f20;
		constexpr auto IsSpectating = 0x5a5f30;
		constexpr auto IsRelaxed = 0x5a5e50;
		constexpr auto IsServerFalling = 0x5a5f10;
		constexpr auto GetBuildingPrivilege = 0x59fa10;
		constexpr auto CanBuild = 0x596bf0;
		constexpr auto IsBuildingBlocked = 0x5a5130;
		constexpr auto IsBuildingAuthed = 0x5a4cf0;
		constexpr auto CanPlaceBuildingPrivilege = 0x596d80;
		constexpr auto NewProjectileID = 0x5a81d0;
		constexpr auto NewProjectileSeed = 0x5a81e0;
		constexpr auto SendProjectileAttack = 0x5b6690;
		constexpr auto SendProjectileRicochet = 0x5b66e0;
		constexpr auto SendProjectileUpdate = 0x5b6730;
		constexpr auto Load = 0x5a6fc0;
		constexpr auto SpectatedPlayerHeadshot = 0x5b7d20;
		constexpr auto GetThreatLevel = 0x5a2ea0;
		constexpr auto EnsureUpdated = 0x59e5f0;
		constexpr auto SetHostileLength = 0x5b6d70;
		constexpr auto SetWeaponDrawnDuration = 0x5b7990;
		constexpr auto ModifyInputState = 0x479d20;
		constexpr auto ForcePositionToParentOffset = 0x59f0f0;
		constexpr auto UpdateClientTickRate = 0x5b86a0;
		constexpr auto ForcePositionTo = 0x59f220;
		constexpr auto ForceViewAnglesTo = 0x59f3c0;
		constexpr auto SendVoiceData = 0x5b6780;
		constexpr auto SendClientTick = 0x5b5fa0;
		constexpr auto NotifyUnderwearChange = 0x5a8240;
		constexpr auto UpdatePlayerVisibilities = 0x5ba130;
		constexpr auto TimeSinceSeen = 0x5b8280;
		constexpr auto SetNextVisThink = 0x5b7330;
		constexpr auto WantsVisUpdate = 0x5bb9a0;
		constexpr auto IsAimingAt = 0x5a4920;
		constexpr auto UpdateCullingSpheres = 0x5b9050;
		constexpr auto VisUpdateUsingCulling = 0x5bafe0;
		constexpr auto VisUpdateUsingRays = 0x5bb0f0;
		constexpr auto LogDebugCull = 0x5a75d0;
		constexpr auto OnVisibilityChanged = 0x5b2410;
		constexpr auto VisUpdate = 0x5bb510;
		constexpr auto VisPlayerArmed = 0x5baf20;
		constexpr auto AnyPartVisible = 0x594680;
		constexpr auto CalcVisUpdateRate = 0x596120;
		constexpr auto PointSeePoint = 0x5b2b30;
		constexpr auto IsWounded = 0x5a6210;
		constexpr auto IsCrawling = 0x5a51e0;
		constexpr auto IsIncapacitated = 0x5a58c0;
		constexpr auto ToPlayer = 0x5b82a0;
		constexpr auto get_Connection = 0x5bc460;
		constexpr auto get_displayName = 0x5bcc70;
		constexpr auto set_displayName = 0x5bd3f0;
		constexpr auto SanitizePlayerNameString = 0x5b5880;
		constexpr auto IsGod = 0x5a56a0;
		constexpr auto GetNetworkRotation = 0x5a2010;
		constexpr auto CanInteract = 0x596d20;
		constexpr auto StartHealth = 0x5b7f20;
		constexpr auto StartMaxHealth = 0x5b2740;
		constexpr auto MaxHealth = 0x5a7b10;
		constexpr auto MaxVelocity = 0x5a7bc0;
		constexpr auto WorldSpaceBounds = 0x5bbed0;
		constexpr auto GetMountVelocity = 0x5a1e10;
		constexpr auto GetInheritedProjectileVelocity = 0x5a0520;
		constexpr auto GetInheritedThrowVelocity = 0x5a0620;
		constexpr auto GetInheritedDropVelocity = 0x5a0460;
		constexpr auto PreInitShared = 0x5b3200;
		constexpr auto DestroyShared = 0x59d8d0;
		constexpr auto InSafeZone = 0x5a3d50;
		constexpr auto LateClientCycle = 0x5a6220;
		constexpr auto ClientCycle = 0x598110;
		constexpr auto GetBounds = 0x59f690;
		constexpr auto GetCenter = 0x59fae0;
		constexpr auto GetOffset = 0x5a2130;
		constexpr auto GetSize = 0x5a2d00;
		constexpr auto GetHeight = 0x5a01d0;
		constexpr auto GetRadius = 0x5a2bf0;
		constexpr auto GetJumpHeight = 0x5a0bb0;
		constexpr auto TriggerPoint = 0x5b8440;
		constexpr auto NoClipOffset = 0x5a81f0;
		constexpr auto NoClipRadius = 0x5a8230;
		constexpr auto MaxDeployDistance = 0x5a7b00;
		constexpr auto ClientUpdatePersistantData = 0x59a860;
		constexpr auto GetMinSpeed = 0x5a1de0;
		constexpr auto GetMaxSpeed = 0x5a0d90;
		constexpr auto GetSpeed = 0x5a2d60;
		constexpr auto OnAttacked = 0x5a8280;
		constexpr auto EnablePlayerCollider = 0x59e260;
		constexpr auto DisablePlayerCollider = 0x59db10;
		constexpr auto RefreshColliderSize = 0x5b4d90;
		constexpr auto SetPlayerRigidbodyState = 0x5b7970;
		constexpr auto AddPlayerRigidbody = 0x594050;
		constexpr auto RemovePlayerRigidbody = 0x5b52b0;
		constexpr auto IsEnsnared = 0x5a52b0;
		constexpr auto IsAttacking = 0x5a4af0;
		constexpr auto CanAttack = 0x5966d0;
		constexpr auto OnLadder = 0x5a8b50;
		constexpr auto IsSwimming = 0x5a61c0;
		constexpr auto IsHeadUnderwater = 0x5a5720;
		constexpr auto IsOnGround = 0x5a5db0;
		constexpr auto IsRunning = 0x5a5e60;
		constexpr auto IsDucked = 0x5a5200;
		constexpr auto RecentlyTeleported = 0x5b4be0;
		constexpr auto ShowToast = 0x5b7ac0;
		constexpr auto ChatMessage = 0x5974d0;
		constexpr auto ConsoleMessage = 0x59ccb0;
		constexpr auto PenetrationResistance = 0x5b2740;
		constexpr auto ScaleDamage = 0x5b5d10;
		constexpr auto UpdateMoveSpeedFromClothing = 0x5b9d60;
		constexpr auto UpdateProtectionFromClothing = 0x5ba310;
		constexpr auto Categorize = 0x5974a0;
		constexpr auto ToString = 0x5b82b0;
		constexpr auto GetDebugStatus = 0x59fd70;
		constexpr auto GetItem = 0x5a0b00;
		constexpr auto get_Traits = 0x5bcb90;
		constexpr auto WaterFactor = 0x5bb9c0;
		constexpr auto AirFactor = 0x594590;
		constexpr auto GetOxygenTime = 0x5a2180;
		constexpr auto ShouldInheritNetworkGroup = 0x5a5f30;
		constexpr auto AnyPlayersVisibleToEntity = 0x594cc0;
		constexpr auto IsStandingOnEntity = 0x5a5f40;
		constexpr auto SetActiveTelephone = 0x5b6950;
		constexpr auto get_HasActiveTelephone = 0x5bc530;
		constexpr auto get_IsDesigningAI = 0x5bca20;
		constexpr auto ClearDesigningAIEntity = 0x597de0;
		constexpr auto ctor = 0x5bc2b0;
		constexpr auto cctor = 0x5bc160;
	};

	namespace BaseMovement {
		constexpr auto adminCheat = 0x18;
		constexpr auto adminSpeed = 0x1c;
		constexpr auto Ownerk__BackingField = 0x20;
		constexpr auto InheritedVelocityk__BackingField = 0x28;
		constexpr auto TargetMovementk__BackingField = 0x34;
		constexpr auto Runningk__BackingField = 0x40;
		constexpr auto Duckingk__BackingField = 0x44;
		constexpr auto Crawlingk__BackingField = 0x48;
		constexpr auto Groundedk__BackingField = 0x4c;
		constexpr auto lastTeleportedTime = 0x50;

		constexpr auto get_Owner = 0x5be2a0;
		constexpr auto set_Owner = 0x5be2d0;
		constexpr auto get_InheritedVelocity = 0x8a01f0;
		constexpr auto set_InheritedVelocity = 0x67e270;
		constexpr auto get_TargetMovement = 0x8a0280;
		constexpr auto set_TargetMovement = 0x67e260;
		constexpr auto get_Running = 0x5dd520;
		constexpr auto set_Running = 0x5dd530;
		constexpr auto get_Ducking = 0x8692d0;
		constexpr auto set_Ducking = 0x8a02b0;
		constexpr auto get_Crawling = 0x8a01e0;
		constexpr auto set_Crawling = 0x8a02a0;
		constexpr auto get_Grounded = 0x67e240;
		constexpr auto set_Grounded = 0x67e280;
		constexpr auto get_IsRunning = 0x8a0240;
		constexpr auto get_IsDucked = 0x8a0220;
		constexpr auto get_IsCrawling = 0x8a0210;
		constexpr auto get_IsGrounded = 0x8a0230;
		constexpr auto CurrentVelocity = 0x89ff50;
		constexpr auto CurrentMoveSpeed = 0x664f00;
		constexpr auto GetCollider = 0x592640;
		constexpr auto Init = 0x5be2d0;
		constexpr auto BlockJump = 0x479d20;
		constexpr auto BlockSprint = 0x479d20;
		constexpr auto get_RecentlyTeleported = 0x8a0250;
		constexpr auto ClientInput = 0x479d20;
		constexpr auto DoFixedUpdate = 0x479d20;
		constexpr auto FrameUpdate = 0x8a0040;
		constexpr auto TeleportTo = 0x8a0130;
		constexpr auto Push = 0x479d20;
		constexpr auto SetParent = 0x479d20;
		constexpr auto FixedUpdate = 0x89ffc0;
		constexpr auto PlayerAttemptedMount = 0x479d20;
		constexpr auto PlayerCompletedMount = 0x479d20;
		constexpr auto ctor = 0x8a01d0;
	};

	namespace BaseProjectile {
		constexpr auto NoiseRadius = 0x280;
		constexpr auto damageScale = 0x284;
		constexpr auto distanceScale = 0x288;
		constexpr auto projectileVelocityScale = 0x28c;
		constexpr auto automatic = 0x290;
		constexpr auto usableByTurret = 0x291;
		constexpr auto turretDamageScale = 0x294;
		constexpr auto attackFX = 0x298;
		constexpr auto silencedAttack = 0x2a0;
		constexpr auto muzzleBrakeAttack = 0x2a8;
		constexpr auto MuzzlePoint = 0x2b0;
		constexpr auto reloadTime = 0x2b8;
		constexpr auto canUnloadAmmo = 0x2bc;
		constexpr auto primaryMagazine = 0x2c0;
		constexpr auto fractionalReload = 0x2c8;
		constexpr auto reloadStartDuration = 0x2cc;
		constexpr auto reloadFractionDuration = 0x2d0;
		constexpr auto reloadEndDuration = 0x2d4;
		constexpr auto aimSway = 0x2d8;
		constexpr auto aimSwaySpeed = 0x2dc;
		constexpr auto recoil = 0x2e0;
		constexpr auto aimconeCurve = 0x2e8;
		constexpr auto aimCone = 0x2f0;
		constexpr auto hipAimCone = 0x2f4;
		constexpr auto aimconePenaltyPerShot = 0x2f8;
		constexpr auto aimConePenaltyMax = 0x2fc;
		constexpr auto aimconePenaltyRecoverTime = 0x300;
		constexpr auto aimconePenaltyRecoverDelay = 0x304;
		constexpr auto stancePenaltyScale = 0x308;
		constexpr auto hasADS = 0x30c;
		constexpr auto noAimingWhileCycling = 0x30d;
		constexpr auto manualCycle = 0x30e;
		constexpr auto needsCycle = 0x30f;
		constexpr auto isCycling = 0x310;
		constexpr auto aiming = 0x311;
		constexpr auto isBurstWeapon = 0x312;
		constexpr auto canChangeFireModes = 0x313;
		constexpr auto defaultOn = 0x314;
		constexpr auto internalBurstRecoilScale = 0x318;
		constexpr auto internalBurstFireRateScale = 0x31c;
		constexpr auto internalBurstAimConeScale = 0x320;
		constexpr auto Toast_BurstDisabled = 0x328;
		constexpr auto Toast_BurstEnabled = 0x330;
		constexpr auto resetDuration = 0x338;
		constexpr auto numShotsFired = 0x33c;
		constexpr auto nextReloadTime = 0x340;
		constexpr auto startReloadTime = 0x344;
		constexpr auto stancePenalty = 0x348;
		constexpr auto aimconePenalty = 0x34c;
		constexpr auto cachedModHash = 0x350;
		constexpr auto sightAimConeScale = 0x354;
		constexpr auto sightAimConeOffset = 0x358;
		constexpr auto hipAimConeScale = 0x35c;
		constexpr auto hipAimConeOffset = 0x360;
		constexpr auto isReloading = 0x364;
		constexpr auto swaySampleTime = 0x368;
		constexpr auto lastShotTime = 0x36c;
		constexpr auto reloadPressTime = 0x370;
		constexpr auto ammoTypePreReload = 0x378;
		constexpr auto fractionalReloadDesiredCount = 0x380;
		constexpr auto fractionalReloadNumAdded = 0x384;
		constexpr auto currentBurst = 0x388;
		constexpr auto triggerReady = 0x38c;
		constexpr auto nextHeightCheckTime = 0x390;
		constexpr auto cachedUnderground = 0x394;
		constexpr auto createdProjectiles = 0x398;

		constexpr auto OnRpcMessage = 0x900db0;
		constexpr auto get_recoilProperties = 0x902c00;
		constexpr auto GetInheritedVelocity = 0x8fe150;
		constexpr auto GetDamageScale = 0x8fe130;
		constexpr auto GetDistanceScale = 0x8fe140;
		constexpr auto GetProjectileVelocityScale = 0x58f220;
		constexpr auto StartReloadCooldown = 0x9025f0;
		constexpr auto ResetReloadCooldown = 0x9019b0;
		constexpr auto HasReloadCooldown = 0x8ff050;
		constexpr auto GetReloadCooldown = 0x8fe950;
		constexpr auto GetReloadIdle = 0x8feab0;
		constexpr auto OnDrawGizmos = 0x900550;
		constexpr auto GetRecoil = 0x8fe940;
		constexpr auto get_isSemiAuto = 0x902bf0;
		constexpr auto GetAimCone = 0x8fd470;
		constexpr auto ScaleRepeatDelay = 0x9019c0;
		constexpr auto GetProjectileModifier = 0x8fe300;
		constexpr auto UsingBurstMode = 0x902710;
		constexpr auto UsingInternalBurstMode = 0x9028a0;
		constexpr auto IsBurstEligable = 0x8ff110;
		constexpr auto TimeBetweenBursts = 0x902640;
		constexpr auto DidAttackClientside = 0x8fb7f0;
		constexpr auto GetItemOptions = 0x8fe1b0;
		constexpr auto ClientIsReloading = 0x8fb510;
		constexpr auto NotifySpectatorReloading = 0x900500;
		constexpr auto EditViewAngles = 0x8fca70;
		constexpr auto OnFrame = 0x900920;
		constexpr auto ShotFired = 0x901d50;
		constexpr auto SimulateAimcone = 0x901db0;
		constexpr auto CanAttack = 0x8fb310;
		constexpr auto CanAim = 0x8fb2e0;
		constexpr auto OnInput = 0x900930;
		constexpr auto ReadyToAim = 0x901900;
		constexpr auto ReadyToFire = 0x901950;
		constexpr auto AmmoTypeClicked = 0x8fb1c0;
		constexpr auto AddAmmoOption = 0x8fb010;
		constexpr auto GetReloadMenu = 0x8feb30;
		constexpr auto PredictAmmoType = 0x901560;
		constexpr auto HasMoreThanOneAmmoType = 0x8feda0;
		constexpr auto OnDeploy = 0x900510;
		constexpr auto DoReload = 0x8fc4e0;
		constexpr auto InsertAmmoFraction = 0x8ff080;
		constexpr auto CancelFractionalReloading = 0x8fb330;
		constexpr auto ClientFinishFractionalReload = 0x8fb3d0;
		constexpr auto ClientSingleReload = 0x8fb520;
		constexpr auto IsBursting = 0x8ff280;
		constexpr auto GetBurstModeCount = 0x8fdfb0;
		constexpr auto DoAttack = 0x8fb8c0;
		constexpr auto BeginCycle = 0x8fb250;
		constexpr auto LaunchProjectile = 0x900310;
		constexpr auto DryFire = 0x8fc9b0;
		constexpr auto ProcessSpectatorViewmodel = 0x9018a0;
		constexpr auto ProcessSpectatorViewmodelEvent = 0x901790;
		constexpr auto GetReloadDuration = 0x8fe9d0;
		constexpr auto GetAvailableAmmo = 0x8fdda0;
		constexpr auto IsBurstDisabled = 0x8ff0e0;
		constexpr auto IsSilenced = 0x8ff290;
		constexpr auto FiredUnderground = 0x8fd3e0;
		constexpr auto OnSignal = 0x900ea0;
		constexpr auto LaunchProjectileClientside = 0x8ff470;
		constexpr auto CreateProjectile = 0x8fb660;
		constexpr auto UpdateAmmoDisplay = 0x902660;
		constexpr auto get_UsingInfiniteAmmoCheat = 0x59db70;
		constexpr auto Load = 0x900460;
		constexpr auto ctor = 0x9028e0;
	};

	namespace PlayerWalkMovement {
		constexpr auto zeroFrictionMaterial = 0x58;
		constexpr auto highFrictionMaterial = 0x60;
		constexpr auto capsuleHeight = 0x68;
		constexpr auto capsuleCenter = 0x6c;
		constexpr auto capsuleHeightDucked = 0x70;
		constexpr auto capsuleCenterDucked = 0x74;
		constexpr auto capsuleHeightCrawling = 0x78;
		constexpr auto capsuleCenterCrawling = 0x7c;
		constexpr auto gravityTestRadius = 0x80;
		constexpr auto gravityMultiplier = 0x84;
		constexpr auto gravityMultiplierSwimming = 0x88;
		constexpr auto maxAngleWalking = 0x8c;
		constexpr auto maxAngleClimbing = 0x90;
		constexpr auto maxAngleSliding = 0x94;
		constexpr auto maxStepHeight = 0x98;
		constexpr auto body = 0xa0;
		constexpr auto initialColDetectionMode = 0xa8;
		constexpr auto capsule = 0xb0;
		constexpr auto ladder = 0xb8;
		constexpr auto maxVelocity = 0xc0;
		constexpr auto groundAngle = 0xc4;
		constexpr auto groundAngleNew = 0xc8;
		constexpr auto groundTime = 0xcc;
		constexpr auto jumpTime = 0xd0;
		constexpr auto landTime = 0xd4;
		constexpr auto previousPosition = 0xd8;
		constexpr auto previousVelocity = 0xe4;
		constexpr auto previousInheritedVelocity = 0xf0;
		constexpr auto groundNormal = 0xfc;
		constexpr auto groundNormalNew = 0x108;
		constexpr auto groundVelocity = 0x114;
		constexpr auto groundVelocityNew = 0x120;
		constexpr auto nextSprintTime = 0x12c;
		constexpr auto lastSprintTime = 0x130;
		constexpr auto sprintForced = 0x134;
		constexpr auto attemptedMountTime = 0x138;
		constexpr auto modify = 0x13c;
		constexpr auto grounded = 0x140;
		constexpr auto climbing = 0x141;
		constexpr auto sliding = 0x142;
		constexpr auto swimming = 0x143;
		constexpr auto wasSwimming = 0x144;
		constexpr auto jumping = 0x145;
		constexpr auto wasJumping = 0x146;
		constexpr auto falling = 0x147;
		constexpr auto wasFalling = 0x148;
		constexpr auto flying = 0x149;
		constexpr auto wasFlying = 0x14a;
		constexpr auto forcedDuckDelta = 0x14c;

		constexpr auto Awake = 0xaf1770;
		constexpr auto GetCollider = 0xa7dda0;
		constexpr auto OnDisable = 0xaf6670;
		constexpr auto Init = 0xaf3ea0;
		constexpr auto OnCollisionEnter = 0xaf64b0;
		constexpr auto OnCollisionStay = 0xaf6590;
		constexpr auto GroundCheck = 0xaf3660;
		constexpr auto TeleportTo = 0xaf6d20;
		constexpr auto UpdateCurrentLadder = 0xaf7050;
		constexpr auto WantsSprint = 0xaf80c0;
		constexpr auto ClientInput = 0xaf1a60;
		constexpr auto Movement_Water = 0xaf5900;
		constexpr auto Movement_Mounted = 0xaf49e0;
		constexpr auto Movement_Ladder = 0xaf4390;
		constexpr auto Movement_Noclip = 0xaf4af0;
		constexpr auto Movement_Walking = 0xaf5080;
		constexpr auto GetHeldEntityMovementMultiplier = 0xaf35b0;
		constexpr auto HandleGrounded = 0xaf3930;
		constexpr auto HandleRunDuckCrawl = 0xaf3ab0;
		constexpr auto GetForcedDuck = 0xaf34c0;
		constexpr auto HandleJumping = 0xaf3980;
		constexpr auto CanJump = 0xaf18e0;
		constexpr auto BlockJump = 0xaf1850;
		constexpr auto BlockSprint = 0xaf1890;
		constexpr auto SetKinematic = 0xaf6af0;
		constexpr auto ApplyForce = 0xaf1730;
		constexpr auto CanSprint = 0xaf19f0;
		constexpr auto Jump = 0xaf4070;
		constexpr auto DoFixedUpdate = 0xaf1e10;
		constexpr auto DoStepUp = 0xaf2640;
		constexpr auto UpdateVelocity = 0xaf7570;
		constexpr auto UpdateGravity = 0xaf7220;
		constexpr auto FrameUpdate = 0xaf3010;
		constexpr auto TransformState = 0xaf6e40;
		constexpr auto SetParent = 0xaf6b20;
		constexpr auto FallVelocity = 0xaf2f60;
		constexpr auto CurrentVelocity = 0xaf1dd0;
		constexpr auto CurrentMoveSpeed = 0xaf1d80;
		constexpr auto PlayerAttemptedMount = 0xaf6a90;
		constexpr auto PlayerCompletedMount = 0xaf6ac0;
		constexpr auto ctor = 0xaf8150;
	};

	namespace UnityEngine_GUI {
		constexpr auto s_BoxHash = 0x4;
		constexpr auto s_ButonHash = 0x8;
		constexpr auto s_RepeatButtonHash = 0xc;
		constexpr auto s_ToggleHash = 0x10;
		constexpr auto s_ButtonGridHash = 0x14;
		constexpr auto s_SliderHash = 0x18;
		constexpr auto s_BeginGroupHash = 0x1c;
		constexpr auto s_ScrollviewHash = 0x20;
		constexpr auto scrollTroughSidek__BackingField = 0x24;
		constexpr auto nextScrollStepTimek__BackingField = 0x28;
		constexpr auto s_Skin = 0x30;
		constexpr auto scrollViewStatesk__BackingField = 0x38;

		constexpr auto get_color = 0x1cf0fe0;
		constexpr auto set_color = 0x1cf1580;
		constexpr auto get_backgroundColor = 0x1cf0e90;
		constexpr auto set_backgroundColor = 0x1cf1490;
		constexpr auto get_contentColor = 0x1cf10a0;
		constexpr auto set_contentColor = 0x1cf1630;
		constexpr auto get_changed = 0x1cf0f70;
		constexpr auto set_changed = 0x1cf1500;
		constexpr auto get_enabled = 0x1cf1120;
		constexpr auto set_enabled = 0x1cf16a0;
		constexpr auto get_usePageScrollbars = 0x1cf1420;
		constexpr auto get_blendMaterial = 0x1cf0f10;
		constexpr auto get_blitMaterial = 0x1cf0f40;
		constexpr auto get_roundedRectMaterial = 0x1cf1240;
		constexpr auto get_roundedRectWithColorPerBorderMaterial = 0x1cf1270;
		constexpr auto GrabMouseControl = 0x1ceefe0;
		constexpr auto HasMouseControl = 0x1cefdd0;
		constexpr auto ReleaseMouseControl = 0x1cf04e0;
		constexpr auto SetNextControlName = 0x1cf0770;
		constexpr auto InternalRepaintEditorWindow = 0x1cf00f0;
		constexpr auto cctor = 0x1cf0bd0;
		constexpr auto get_scrollTroughSide = 0x1cf12a0;
		constexpr auto set_scrollTroughSide = 0x1cf1800;
		constexpr auto get_nextScrollStepTime = 0x1cf11e0;
		constexpr auto set_nextScrollStepTime = 0x1cf1740;
		constexpr auto set_skin = 0x1cf18c0;
		constexpr auto get_skin = 0x1cf13c0;
		constexpr auto DoSetSkin = 0x1ced460;
		constexpr auto get_matrix = 0x1cf1150;
		constexpr auto set_matrix = 0x1cf16e0;
		constexpr auto Label = 0x1cf0210;
		constexpr auto DrawTexture = 0x1cee5f0;
		constexpr auto CalculateScaledTextureRects = 0x1ceb7b0;
		constexpr auto Box = 0x1ceaba0;
		constexpr auto Button = 0x1ceac60;
		constexpr auto PasswordFieldGetStrToShow = 0x1cf03b0;
		constexpr auto DoTextField = 0x1ced8e0;
		constexpr auto HandleTextFieldEventForTouchscreen = 0x1cef810;
		constexpr auto HandleTextFieldEventForDesktop = 0x1cef020;
		constexpr auto Toggle = 0x1cf0a10;
		constexpr auto SelectionGrid = 0x1cf0610;
		constexpr auto CalcTotalHorizSpacing = 0x1ceb5a0;
		constexpr auto DoControl = 0x1cecd90;
		constexpr auto DoLabel = 0x1ced1d0;
		constexpr auto DoToggle = 0x1cedaa0;
		constexpr auto DoButton = 0x1cecc60;
		constexpr auto DoButtonGrid = 0x1cebf70;
		constexpr auto CalcMouseRects = 0x1ceb080;
		constexpr auto HorizontalSlider = 0x1cefee0;
		constexpr auto Slider = 0x1cf07b0;
		constexpr auto BeginGroup = 0x1cea580;
		constexpr auto EndGroup = 0x1ceefa0;
		constexpr auto get_scrollViewStates = 0x1cf1360;
		constexpr auto CallWindowDelegate = 0x1cebae0;
		constexpr auto get_color_Injected = 0x1cf0fa0;
		constexpr auto set_color_Injected = 0x1cf1540;
		constexpr auto get_backgroundColor_Injected = 0x1cf0e50;
		constexpr auto set_backgroundColor_Injected = 0x1cf1450;
		constexpr auto get_contentColor_Injected = 0x1cf1060;
		constexpr auto set_contentColor_Injected = 0x1cf15f0;
	};

	namespace UnityEngine_GUIStyle {
		constexpr auto m_Ptr = 0x10;
		constexpr auto m_Normal = 0x18;
		constexpr auto m_Hover = 0x20;
		constexpr auto m_Active = 0x28;
		constexpr auto m_Focused = 0x30;
		constexpr auto m_OnNormal = 0x38;
		constexpr auto m_OnHover = 0x40;
		constexpr auto m_OnActive = 0x48;
		constexpr auto m_OnFocused = 0x50;
		constexpr auto m_Border = 0x58;
		constexpr auto m_Padding = 0x60;
		constexpr auto m_Margin = 0x68;
		constexpr auto m_Overflow = 0x70;
		constexpr auto m_Name = 0x78;
		constexpr auto s_None = 0x8;

		constexpr auto get_rawName = 0x1ce80e0;
		constexpr auto set_rawName = 0x1ce84b0;
		constexpr auto get_font = 0x1ce7bd0;
		constexpr auto get_imagePosition = 0x1ce7c10;
		constexpr auto set_alignment = 0x1ce8350;
		constexpr auto get_wordWrap = 0x1ce81a0;
		constexpr auto get_contentOffset = 0x1ce7b00;
		constexpr auto set_contentOffset = 0x1ce83e0;
		constexpr auto get_fixedWidth = 0x1ce7b90;
		constexpr auto get_fixedHeight = 0x1ce7b50;
		constexpr auto get_stretchWidth = 0x1ce8160;
		constexpr auto set_stretchWidth = 0x1ce8550;
		constexpr auto get_stretchHeight = 0x1ce8120;
		constexpr auto set_stretchHeight = 0x1ce8500;
		constexpr auto set_fontSize = 0x1ce8420;
		constexpr auto set_Internal_clipOffset = 0x1ce8310;
		constexpr auto Internal_Create = 0x1ce6f10;
		constexpr auto Internal_Copy = 0x1ce6ec0;
		constexpr auto Internal_Destroy = 0x1ce6f50;
		constexpr auto GetStyleStatePtr = 0x1ce6cf0;
		constexpr auto GetRectOffsetPtr = 0x1ce6cb0;
		constexpr auto Internal_GetLineHeight = 0x1ce75e0;
		constexpr auto Internal_Draw = 0x1ce7360;
		constexpr auto Internal_Draw2 = 0x1ce7000;
		constexpr auto Internal_DrawCursor = 0x1ce70e0;
		constexpr auto Internal_DrawWithTextSelection = 0x1ce7200;
		constexpr auto Internal_GetCursorPixelPosition = 0x1ce7490;
		constexpr auto Internal_GetCursorStringIndex = 0x1ce7580;
		constexpr auto Internal_GetSelectedRenderedText = 0x1ce7690;
		constexpr auto Internal_CalcSize = 0x1ce5c00;
		constexpr auto Internal_CalcSizeWithConstraints = 0x1ce5ba0;
		constexpr auto Internal_CalcHeight = 0x1ce5ac0;
		constexpr auto Internal_CalcMinMaxWidth = 0x1ce6d90;
		constexpr auto SetMouseTooltip = 0x1ce7790;
		constexpr auto Internal_GetCursorFlashOffset = 0x1ce73f0;
		constexpr auto SetDefaultFont = 0x1ce7700;
		constexpr auto ctor = 0x1ce7a30;
		constexpr auto Finalize = 0x1ce6ad0;
		constexpr auto get_name = 0x1ce7e50;
		constexpr auto set_name = 0x1ce8460;
		constexpr auto get_normal = 0x1ce7f70;
		constexpr auto get_margin = 0x1ce7da0;
		constexpr auto get_padding = 0x1ce8030;
		constexpr auto get_lineHeight = 0x1ce7cf0;
		constexpr auto Draw = 0x1ce68a0;
		constexpr auto DrawCursor = 0x1ce5c60;
		constexpr auto DrawWithTextSelection = 0x1ce6120;
		constexpr auto op_Implicit = 0x1ce81e0;
		constexpr auto get_none = 0x1ce7eb0;
		constexpr auto GetCursorPixelPosition = 0x1ce6bd0;
		constexpr auto GetCursorStringIndex = 0x1ce6c50;
		constexpr auto CalcSize = 0x1ce5c00;
		constexpr auto CalcSizeWithConstraints = 0x1ce5ba0;
		constexpr auto CalcHeight = 0x1ce5ac0;
		constexpr auto get_isHeightDependantOnWidth = 0x1ce7c50;
		constexpr auto CalcMinMaxWidth = 0x1ce5b20;
		constexpr auto ToString = 0x1ce7810;
		constexpr auto cctor = 0x1ce7920;
		constexpr auto get_contentOffset_Injected = 0x1ce7ab0;
		constexpr auto set_contentOffset_Injected = 0x1ce8390;
		constexpr auto set_Internal_clipOffset_Injected = 0x1ce82c0;
		constexpr auto Internal_Draw_Injected = 0x1ce72d0;
		constexpr auto Internal_Draw2_Injected = 0x1ce6f90;
		constexpr auto Internal_DrawCursor_Injected = 0x1ce7070;
		constexpr auto Internal_DrawWithTextSelection_Injected = 0x1ce7150;
		constexpr auto Internal_GetCursorPixelPosition_Injected = 0x1ce7420;
		constexpr auto Internal_GetCursorStringIndex_Injected = 0x1ce7510;
		constexpr auto Internal_GetSelectedRenderedText_Injected = 0x1ce7620;
		constexpr auto Internal_CalcSize_Injected = 0x1ce6e60;
		constexpr auto Internal_CalcSizeWithConstraints_Injected = 0x1ce6df0;
		constexpr auto Internal_CalcMinMaxWidth_Injected = 0x1ce6d30;
		constexpr auto SetMouseTooltip_Injected = 0x1ce7740;
	};

	namespace UnityEngine_Event {
		constexpr auto m_Ptr = 0x10;
		constexpr auto s_MasterEvent = 0x8;

		constexpr auto get_rawType = 0x1cd7800;
		constexpr auto get_mousePosition = 0x1cd7730;
		constexpr auto set_mousePosition = 0x1cd7b10;
		constexpr auto get_delta = 0x1cd74b0;
		constexpr auto get_pointerType = 0x1cd7780;
		constexpr auto get_button = 0x1cd72a0;
		constexpr auto get_modifiers = 0x1cd76a0;
		constexpr auto set_modifiers = 0x1cd7a80;
		constexpr auto get_pressure = 0x1cd77c0;
		constexpr auto get_clickCount = 0x1cd7320;
		constexpr auto get_character = 0x1cd72e0;
		constexpr auto set_character = 0x1cd78c0;
		constexpr auto get_keyCode = 0x1cd7660;
		constexpr auto set_keyCode = 0x1cd7a40;
		constexpr auto get_displayIndex = 0x1cd7500;
		constexpr auto set_displayIndex = 0x1cd7a00;
		constexpr auto get_type = 0x1cd7880;
		constexpr auto set_type = 0x1cd7b50;
		constexpr auto get_commandName = 0x1cd7360;
		constexpr auto set_commandName = 0x1cd7910;
		constexpr auto Internal_Use = 0x1cd5180;
		constexpr auto Internal_Create = 0x1cd4f80;
		constexpr auto Internal_Destroy = 0x1cd4fc0;
		constexpr auto Internal_Copy = 0x1cd4f40;
		constexpr auto GetTypeForControl = 0x1cd4f00;
		constexpr auto CopyFromPtr = 0x1cd49e0;
		constexpr auto PopEvent = 0x1cd6450;
		constexpr auto Internal_SetNativeEvent = 0x1cd5140;
		constexpr auto Internal_MakeMasterEventCurrent = 0x1cd5000;
		constexpr auto ctor = 0x1cd71d0;
		constexpr auto Finalize = 0x1cd4cf0;
		constexpr auto CopyFrom = 0x1cd4a30;
		constexpr auto get_shift = 0x1cd7840;
		constexpr auto get_control = 0x1cd73e0;
		constexpr auto get_alt = 0x1cd7260;
		constexpr auto get_command = 0x1cd73a0;
		constexpr auto get_current = 0x1cd7420;
		constexpr auto set_current = 0x1cd7960;
		constexpr auto get_isKey = 0x1cd75b0;
		constexpr auto get_isMouse = 0x1cd7600;
		constexpr auto get_isDirectManipulationDevice = 0x1cd7540;
		constexpr auto KeyboardEvent = 0x1cd51c0;
		constexpr auto GetHashCode = 0x1cd4dd0;
		constexpr auto Equals = 0x1cd4aa0;
		constexpr auto ToString = 0x1cd6490;
		constexpr auto Use = 0x1cd6f70;
		constexpr auto get_mousePosition_Injected = 0x1cd76e0;
		constexpr auto set_mousePosition_Injected = 0x1cd7ac0;
		constexpr auto get_delta_Injected = 0x1cd7460;
	};

	namespace UnityEngine_Input {

		constexpr auto GetKeyInt = 0x25bab20;
		constexpr auto GetKeyUpInt = 0x25bab60;
		constexpr auto GetKeyDownInt = 0x25baae0;
		constexpr auto GetAxis = 0x25baa60;
		constexpr auto GetAxisRaw = 0x25baa20;
		constexpr auto GetButtonDown = 0x25baaa0;
		constexpr auto GetMouseButton = 0x25bac20;
		constexpr auto GetMouseButtonDown = 0x25baba0;
		constexpr auto GetMouseButtonUp = 0x25babe0;
		constexpr auto GetTouch = 0x25baca0;
		constexpr auto GetKey = 0x25bab20;
		constexpr auto GetKeyUp = 0x25bab60;
		constexpr auto GetKeyDown = 0x25baae0;
		constexpr auto get_anyKey = 0x25bad30;
		constexpr auto get_anyKeyDown = 0x25bad00;
		constexpr auto get_mousePosition = 0x25bae80;
		constexpr auto get_mouseScrollDelta = 0x25baf30;
		constexpr auto get_imeCompositionMode = 0x25bae10;
		constexpr auto set_imeCompositionMode = 0x25bb180;
		constexpr auto get_compositionString = 0x25bade0;
		constexpr auto get_compositionCursorPos = 0x25bada0;
		constexpr auto set_compositionCursorPos = 0x25bb140;
		constexpr auto get_mousePresent = 0x25baec0;
		constexpr auto get_touchCount = 0x25baf70;
		constexpr auto get_touchSupported = 0x25bafa0;
		constexpr auto get_touches = 0x25bafd0;
		constexpr auto GetTouch_Injected = 0x25bac60;
		constexpr auto get_mousePosition_Injected = 0x25bae40;
		constexpr auto get_mouseScrollDelta_Injected = 0x25baef0;
		constexpr auto get_compositionCursorPos_Injected = 0x25bad60;
		constexpr auto set_compositionCursorPos_Injected = 0x25bb100;
	};

	namespace UnityEngine_DDraw {
		constexpr auto singleton = 0x8;
		constexpr auto list = 0x18;
		constexpr auto AutoYPosition = 0x10;
		constexpr auto LastAutoY = 0x14;
		constexpr auto lineMaterial = 0x18;
		constexpr auto _skin = 0x20;

		constexpr auto Get = 0x715a20;
		constexpr auto Capsule = 0x715640;
		constexpr auto Sphere = 0x716ec0;
		constexpr auto SphereGizmo = 0x716bd0;
		constexpr auto Line = 0x715cf0;
		constexpr auto Arrow = 0x714710;
		constexpr auto ArrowPadded = 0x714010;
		constexpr auto Bounds = 0x714940;
		constexpr auto Box = 0x714f00;
		constexpr auto Text = 0x7171a0;
		constexpr auto ScreenText = 0x716a30;
		constexpr auto Awake = 0x7148d0;
		constexpr auto OnPreRender = 0x716650;
		constexpr auto OnPostRender = 0x716310;
		constexpr auto OnGUI = 0x716140;
		constexpr auto CreateLineMaterial = 0x7158c0;
		constexpr auto get_skin = 0x7173b0;
		constexpr auto ctor = 0x717340;
		constexpr auto cctor = 0x479d20;
	};

	namespace UnityEngine_Texture2D {

		constexpr auto get_format = 0x2431e10;
		constexpr auto get_whiteTexture = 0x2431e90;
		constexpr auto get_blackTexture = 0x2431de0;
		constexpr auto Compress = 0x2430600;
		constexpr auto Internal_CreateImpl = 0x2430c90;
		constexpr auto Internal_Create = 0x2430cf0;
		constexpr auto get_isReadable = 0x2431e50;
		constexpr auto ApplyImpl = 0x2430450;
		constexpr auto ResizeImpl = 0x24311c0;
		constexpr auto SetPixelImpl = 0x2431500;
		constexpr auto GetPixelImpl = 0x2430870;
		constexpr auto GetPixelBilinearImpl = 0x24306b0;
		constexpr auto ResizeWithFormatImpl = 0x2431210;
		constexpr auto ReadPixelsImpl = 0x2430fb0;
		constexpr auto SetPixelsImpl = 0x2431700;
		constexpr auto LoadRawTextureDataImpl = 0x2430dc0;
		constexpr auto GetWritableImageData = 0x2430c50;
		constexpr auto GetRawImageDataSize = 0x2430c10;
		constexpr auto set_requestedMipmapLevel = 0x2431f00;
		constexpr auto set_minimumMipmapLevel = 0x2431ec0;
		constexpr auto ClearRequestedMipmapLevel = 0x24305c0;
		constexpr auto ClearMinimumMipmapLevel = 0x2430580;
		constexpr auto SetAllPixels32 = 0x24313e0;
		constexpr auto SetBlockOfPixels32 = 0x2431440;
		constexpr auto GetPixels = 0x2430b10;
		constexpr auto GetPixels32 = 0x2430a10;
		constexpr auto ctor = 0x2431c20;
		constexpr auto SetPixel = 0x2431570;
		constexpr auto SetPixels = 0x2431760;
		constexpr auto GetPixel = 0x24308f0;
		constexpr auto GetPixelBilinear = 0x2430730;
		constexpr auto LoadRawTextureData = 0x2430e20;
		constexpr auto Apply = 0x24304d0;
		constexpr auto Resize = 0x2431340;
		constexpr auto ReadPixels = 0x24310f0;
		constexpr auto SetPixels32 = 0x24313e0;
		constexpr auto SetPixelImpl_Injected = 0x24314a0;
		constexpr auto GetPixelImpl_Injected = 0x2430810;
		constexpr auto GetPixelBilinearImpl_Injected = 0x2430650;
		constexpr auto ReadPixelsImpl_Injected = 0x2430f40;
	};

	namespace ModelState {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto waterLevel = 0x14;
		constexpr auto lookDir = 0x18;
		constexpr auto flags = 0x24;
		constexpr auto poseType = 0x28;
		constexpr auto inheritedVelocity = 0x2c;

		constexpr auto ctor = 0x22efdd0;
		constexpr auto HasFlag = 0x22ef2b0;
		constexpr auto SetFlag = 0x22efd60;
		constexpr auto get_ducked = 0x22efe20;
		constexpr auto set_ducked = 0x22eff20;
		constexpr auto get_jumped = 0x22efe50;
		constexpr auto set_jumped = 0x22eff80;
		constexpr auto get_onground = 0x22efe90;
		constexpr auto set_onground = 0x22f0000;
		constexpr auto get_sleeping = 0x22efec0;
		constexpr auto set_sleeping = 0x22f0060;
		constexpr auto get_sprinting = 0x22efed0;
		constexpr auto set_sprinting = 0x22f0080;
		constexpr auto get_onLadder = 0x22efe70;
		constexpr auto set_onLadder = 0x22effc0;
		constexpr auto get_flying = 0x22efe30;
		constexpr auto set_flying = 0x22eff40;
		constexpr auto get_aiming = 0x22efe00;
		constexpr auto set_aiming = 0x22efee0;
		constexpr auto get_prone = 0x22efea0;
		constexpr auto set_prone = 0x22f0020;
		constexpr auto get_mounted = 0x22efe60;
		constexpr auto set_mounted = 0x22effa0;
		constexpr auto get_relaxed = 0x22efeb0;
		constexpr auto set_relaxed = 0x22f0040;
		constexpr auto get_crawling = 0x22efe10;
		constexpr auto set_crawling = 0x22eff00;
		constexpr auto get_onPhone = 0x22efe80;
		constexpr auto set_onPhone = 0x22effe0;
		constexpr auto get_headLook = 0x22efe40;
		constexpr auto set_headLook = 0x22eff60;
		constexpr auto Equal = 0x22eef50;
		constexpr auto ResetToPool = 0x22ef390;
		constexpr auto Dispose = 0x22eeed0;
		constexpr auto EnterPool = 0xf077f0;
		constexpr auto LeavePool = 0xf07820;
		constexpr auto CopyTo = 0x22edbb0;
		constexpr auto Copy = 0x22edc00;
		constexpr auto Deserialize = 0x22eec50;
		constexpr auto DeserializeLengthDelimited = 0x22edca0;
		constexpr auto DeserializeLength = 0x22ee330;
		constexpr auto FromProto = 0x22ef060;
		constexpr auto WriteToStream = 0x22efd90;
		constexpr auto WriteToStreamDelta = 0x22efdb0;
		constexpr auto ReadFromStream = 0x22ef2c0;
		constexpr auto SerializeDelta = 0x22ef440;
		constexpr auto Serialize = 0x22efaa0;
		constexpr auto ToProtoBytes = 0x22efd80;
		constexpr auto ToProto = 0x22efd90;
		constexpr auto SerializeToBytes = 0x22ef990;
		constexpr auto SerializeLengthDelimited = 0x22ef8e0;
	};

	namespace ProtoBuf_PlayerProjectileUpdate {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto projectileID = 0x14;
		constexpr auto curPosition = 0x18;
		constexpr auto curVelocity = 0x24;
		constexpr auto travelTime = 0x30;

		constexpr auto ResetToPool = 0x20aac60;
		constexpr auto Dispose = 0x20aa900;
		constexpr auto EnterPool = 0xf077f0;
		constexpr auto LeavePool = 0xf07820;
		constexpr auto CopyTo = 0x20a9790;
		constexpr auto Copy = 0x20a97d0;
		constexpr auto Deserialize = 0x20a9f00;
		constexpr auto DeserializeLengthDelimited = 0x20a9870;
		constexpr auto DeserializeLength = 0x20a9e70;
		constexpr auto FromProto = 0x20aaa30;
		constexpr auto WriteToStream = 0x20ab670;
		constexpr auto WriteToStreamDelta = 0x20ab690;
		constexpr auto ReadFromStream = 0x20aac40;
		constexpr auto SerializeDelta = 0x20aadc0;
		constexpr auto Serialize = 0x20ab3d0;
		constexpr auto ToProtoBytes = 0x20ab660;
		constexpr auto ToProto = 0x20ab670;
		constexpr auto SerializeToBytes = 0x20ab2c0;
		constexpr auto SerializeLengthDelimited = 0x20ab210;
		constexpr auto ctor = 0xf08180;
	};

	namespace Projectile {
		constexpr auto initialVelocity = 0x18;
		constexpr auto drag = 0x24;
		constexpr auto gravityModifier = 0x28;
		constexpr auto thickness = 0x2c;
		constexpr auto initialDistance = 0x30;
		constexpr auto remainInWorld = 0x34;
		constexpr auto stickProbability = 0x38;
		constexpr auto breakProbability = 0x3c;
		constexpr auto conditionLoss = 0x40;
		constexpr auto ricochetChance = 0x44;
		constexpr auto penetrationPower = 0x48;
		constexpr auto damageProperties = 0x50;
		constexpr auto damageDistances = 0x58;
		constexpr auto damageMultipliers = 0x60;
		constexpr auto damageTypes = 0x68;
		constexpr auto rendererToScale = 0x70;
		constexpr auto firstPersonRenderer = 0x78;
		constexpr auto createDecals = 0x80;
		constexpr auto doDefaultHitEffects = 0x81;
		constexpr auto flybySound = 0x88;
		constexpr auto flybySoundDistance = 0x90;
		constexpr auto closeFlybySound = 0x98;
		constexpr auto closeFlybyDistance = 0xa0;
		constexpr auto tumbleSpeed = 0xa4;
		constexpr auto tumbleAxis = 0xa8;
		constexpr auto swimScale = 0xb4;
		constexpr auto swimSpeed = 0xc0;
		constexpr auto owner = 0xd0;
		constexpr auto sourceWeaponPrefab = 0xd8;
		constexpr auto sourceProjectilePrefab = 0xe0;
		constexpr auto mod = 0xe8;
		constexpr auto projectileID = 0xf0;
		constexpr auto seed = 0xf4;
		constexpr auto clientsideEffect = 0xf8;
		constexpr auto clientsideAttack = 0xf9;
		constexpr auto integrity = 0xfc;
		constexpr auto maxDistance = 0x100;
		constexpr auto modifier = 0x104;
		constexpr auto invisible = 0x114;
		constexpr auto currentVelocity = 0x118;
		constexpr auto currentPosition = 0x124;
		constexpr auto traveledDistance = 0x130;
		constexpr auto traveledTime = 0x134;
		constexpr auto launchTime = 0x138;
		constexpr auto sentPosition = 0x13c;
		constexpr auto previousPosition = 0x148;
		constexpr auto previousVelocity = 0x154;
		constexpr auto previousTraveledTime = 0x160;
		constexpr auto isRicochet = 0x164;
		constexpr auto isRetiring = 0x165;
		constexpr auto flybyPlayed = 0x166;
		constexpr auto wasFacingPlayer = 0x167;
		constexpr auto flybyPlane = 0x168;
		constexpr auto flybyRay = 0x178;
		constexpr auto cleanupAction = 0x190;
		constexpr auto hitTest = 0x198;
		constexpr auto swimRandom = 0x1a0;
		constexpr auto _waterMaterialID = 0x4;
		constexpr auto cachedWaterString = 0x8;

		constexpr auto CalculateDamage = 0x81e880;
		constexpr auto get_isAuthoritative = 0x8236c0;
		constexpr auto get_isAlive = 0x823680;
		constexpr auto Retire = 0x822470;
		constexpr auto Cleanup = 0x81edd0;
		constexpr auto AdjustVelocity = 0x81e610;
		constexpr auto InitializeVelocity = 0x8216b0;
		constexpr auto OnDisable = 0x821920;
		constexpr auto Update = 0x8232e0;
		constexpr auto SetEffectScale = 0x822a40;
		constexpr auto DoFlybySound = 0x81efd0;
		constexpr auto CalculateEffectScale = 0x81ed30;
		constexpr auto UpdateVelocity = 0x823000;
		constexpr auto DoVelocityUpdate = 0x820ec0;
		constexpr auto DoMovement = 0x81fcf0;
		constexpr auto DoWaterHit = 0x8212a0;
		constexpr auto DoRicochet = 0x820aa0;
		constexpr auto DoHit = 0x81f5e0;
		constexpr auto AdditiveImpactEffect = 0x479d20;
		constexpr auto Reflect = 0x821bf0;
		constexpr auto Refract = 0x821f40;
		constexpr auto RandomRotation = 0x821af0;
		constexpr auto Launch = 0x821890;
		constexpr auto FleshMaterialID = 0x8215b0;
		constexpr auto WaterMaterialID = 0x8233e0;
		constexpr auto IsWaterMaterial = 0x821760;
		constexpr auto ShouldStopProjectile = 0x822f40;
		constexpr auto ctor = 0x8234e0;
		constexpr auto cctor = 0x479d20;
	};

	namespace PlayerEyes {
		constexpr auto DuckOffset = 0xc;
		constexpr auto CrawlOffset = 0x18;
		constexpr auto thirdPersonSleepingOffset = 0x20;
		constexpr auto defaultLazyAim = 0x30;
		constexpr auto viewOffset = 0x38;
		constexpr auto bodyRotationk__BackingField = 0x44;
		constexpr auto headAnglesk__BackingField = 0x54;
		constexpr auto rotationLookk__BackingField = 0x60;
		constexpr auto IsAltLookingLegsThresholdk__BackingField = 0x70;

		constexpr auto get_worldMountedPosition = 0x6277e0;
		constexpr auto get_worldStandingPosition = 0x6279d0;
		constexpr auto get_worldCrouchedPosition = 0x6276e0;
		constexpr auto get_worldCrawlingPosition = 0x6275e0;
		constexpr auto get_position = 0x6270a0;
		constexpr auto get_BodyLeanOffset = 0x626760;
		constexpr auto get_center = 0x626ac0;
		constexpr auto get_offset = 0x626de0;
		constexpr auto get_rotation = 0x627530;
		constexpr auto set_rotation = 0x627b30;
		constexpr auto get_bodyRotation = 0x6269e0;
		constexpr auto set_bodyRotation = 0x627b00;
		constexpr auto get_headAngles = 0x626dc0;
		constexpr auto set_headAngles = 0x627b10;
		constexpr auto get_rotationLook = 0x627520;
		constexpr auto set_rotationLook = 0x627b20;
		constexpr auto get_parentRotation = 0x626f10;
		constexpr auto get_canUpdateViewAngles = 0x6269f0;
		constexpr auto get_IsAltLookingLegsThreshold = 0x6269d0;
		constexpr auto set_IsAltLookingLegsThreshold = 0x627af0;
		constexpr auto FrameUpdate = 0x6252f0;
		constexpr auto UpdateAltLegsThreshold = 0x626380;
		constexpr auto UpdateCamera = 0x6263f0;
		constexpr auto DoFirstPersonCamera = 0x623330;
		constexpr auto DoInEyeCamera = 0x623980;
		constexpr auto DoThirdPersonCamera = 0x623cd0;
		constexpr auto DoDeathCamera = 0x622d50;
		constexpr auto ApplyCameraMoves = 0x622720;
		constexpr auto MovementForward = 0x626000;
		constexpr auto MovementRight = 0x6261c0;
		constexpr auto BodyRay = 0x622900;
		constexpr auto BodyForward = 0x6227b0;
		constexpr auto BodyRight = 0x622ab0;
		constexpr auto BodyUp = 0x622c00;
		constexpr auto HeadRay = 0x625c40;
		constexpr auto HeadForward = 0x625b50;
		constexpr auto HeadRight = 0x625e20;
		constexpr auto HeadUp = 0x625f10;
		constexpr auto GetLookRotation = 0x6259d0;
		constexpr auto GetAimRotation = 0x625910;
		constexpr auto ctor = 0x6266a0;
		constexpr auto cctor = 0x6265a0;
	};

	namespace ViewModel {
		constexpr auto viewModelPrefab = 0x18;
		constexpr auto targetEntity = 0x20;
		constexpr auto instance = 0x28;

		constexpr auto Deploy = 0x858970;
		constexpr auto OnDisable = 0x858ce0;
		constexpr auto Holster = 0x858c70;
		constexpr auto Clear = 0x858800;
		constexpr auto OnFrame = 0x858d50;
		constexpr auto Play = 0x858eb0;
		constexpr auto ResetTrigger = 0x858fe0;
		constexpr auto Trigger = 0x8592f0;
		constexpr auto CrossFade = 0x8588d0;
		constexpr auto SetBool = 0x859110;
		constexpr auto SetFloat = 0x859250;
		constexpr auto set_ironSights = 0x859410;
		constexpr auto ctor = 0x4a0480;
	};

	namespace BowWeapon {
		constexpr auto attackReady = 0x3a0;
		constexpr auto arrowBack = 0x3a4;
		constexpr auto swapArrows = 0x3a8;
		constexpr auto wasAiming = 0x3b0;

		constexpr auto OnRpcMessage = 0x9185d0;
		constexpr auto ClientInit = 0x917d30;
		constexpr auto OnSignal = 0x9186c0;
		constexpr auto UpdatePullbackThink = 0x918b10;
		constexpr auto CancelPullbackThink = 0x917cc0;
		constexpr auto PullbackThink = 0x9189d0;
		constexpr auto OnInput = 0x918250;
		constexpr auto OnHolstered = 0x918210;
		constexpr auto DoAttack = 0x917da0;
		constexpr auto IsAiming = 0x918040;
		constexpr auto OnViewmodelEvent = 0x918830;
		constexpr auto OnFrame = 0x9180e0;
		constexpr auto PostNetworkUpdate = 0x9188a0;
		constexpr auto TryReload = 0x918aa0;
		constexpr auto ProcessSpectatorViewmodel = 0x918940;
		constexpr auto ctor = 0x80cc40;
	};

	namespace AttackEntity {
		constexpr auto deployDelay = 0x1f8;
		constexpr auto repeatDelay = 0x1fc;
		constexpr auto animationDelay = 0x200;
		constexpr auto effectiveRange = 0x204;
		constexpr auto npcDamageScale = 0x208;
		constexpr auto attackLengthMin = 0x20c;
		constexpr auto attackLengthMax = 0x210;
		constexpr auto attackSpacing = 0x214;
		constexpr auto aiAimSwayOffset = 0x218;
		constexpr auto aiAimCone = 0x21c;
		constexpr auto aiOnlyInRange = 0x220;
		constexpr auto CloseRangeAddition = 0x224;
		constexpr auto MediumRangeAddition = 0x228;
		constexpr auto LongRangeAddition = 0x22c;
		constexpr auto CanUseAtMediumRange = 0x230;
		constexpr auto CanUseAtLongRange = 0x231;
		constexpr auto reloadSounds = 0x238;
		constexpr auto thirdPersonMeleeSound = 0x240;
		constexpr auto recoilCompDelayOverride = 0x248;
		constexpr auto wantsRecoilComp = 0x24c;
		constexpr auto nextAttackTime = 0x250;
		constexpr auto lastTickTime = 0x254;
		constexpr auto nextTickTime = 0x258;
		constexpr auto timeSinceDeploy = 0x25c;
		constexpr auto lastRecoilCompTime = 0x260;
		constexpr auto startAimingDirection = 0x264;
		constexpr auto wasDoingRecoilComp = 0x270;
		constexpr auto reductionSpeed = 0x274;

		constexpr auto GetInheritedVelocity = 0x9fa1e0;
		constexpr auto get_NextAttackTime = 0x9fa710;
		constexpr auto GetAttackStats = 0x479d20;
		constexpr auto StartAttackCooldownRaw = 0x9fa450;
		constexpr auto StartAttackCooldown = 0x9fa480;
		constexpr auto ResetAttackCooldown = 0x9fa3f0;
		constexpr auto HasAttackCooldown = 0x9fa250;
		constexpr auto GetAttackCooldown = 0x9fa0e0;
		constexpr auto GetAttackIdle = 0x9fa160;
		constexpr auto CalculateCooldownTime = 0x9f9510;
		constexpr auto IsFullyDeployed = 0x9fa280;
		constexpr auto ProcessInputTime = 0x9fa320;
		constexpr auto OnInput = 0x9fa2c0;
		constexpr auto OnDeploy = 0x9fa2a0;
		constexpr auto SpectatorNotifyDeploy = 0x9fa400;
		constexpr auto SpectatorNotifyTick = 0x9fa410;
		constexpr auto RecoilCompReady = 0x9fa370;
		constexpr auto AddPunch = 0x9f9360;
		constexpr auto DoRecoilCompensation = 0x9f9650;
		constexpr auto ctor = 0x9fa620;
		constexpr auto cctor = 0x9fa5b0;
	};

	namespace BaseEntity {
		constexpr auto ragdoll = 0x78;
		constexpr auto positionLerp = 0x80;
		constexpr auto menuOptions = 0x88;
		constexpr auto globalBroadcastProtocol = 0x8;
		constexpr auto broadcastProtocol = 0x90;
		constexpr auto links = 0x98;
		constexpr auto linkedToNeighbours = 0xa0;
		constexpr auto QueuedFileRequests = 0x10;
		constexpr auto _fileRequestCounter = 0x18;
		constexpr auto _flushQueuedFileRequests = 0x30;
		constexpr auto _pendingFileRequests = 0xa8;
		constexpr auto updateParentingAction = 0xb0;
		constexpr auto addedToParentEntity = 0xb8;
		constexpr auto itemSkin = 0xc0;
		constexpr auto entitySlots = 0xc8;
		constexpr auto triggers = 0xd0;
		constexpr auto isVisible = 0xd8;
		constexpr auto isAnimatorVisible = 0xd9;
		constexpr auto isShadowVisible = 0xda;
		constexpr auto localOccludee = 0xe0;
		constexpr auto Weightk__BackingField = 0x100;
		constexpr auto bounds = 0x104;
		constexpr auto impactEffect = 0x120;
		constexpr auto enableSaving = 0x128;
		constexpr auto syncPosition = 0x129;
		constexpr auto model = 0x130;
		constexpr auto flags = 0x138;
		constexpr auto parentBone = 0x13c;
		constexpr auto skinID = 0x140;
		constexpr auto _components = 0x148;
		constexpr auto HasBrain = 0x150;
		constexpr auto _name = 0x158;
		constexpr auto OwnerIDk__BackingField = 0x160;

		constexpr auto OnRpcMessage = 0xc7aa00;
		constexpr auto GetEntityMenu = 0xc75b30;
		constexpr auto GetMenuOptions = 0x479d20;
		constexpr auto get_HasMenuOptions = 0x59db70;
		constexpr auto GetItemOptions = 0xc762e0;
		constexpr auto GetMovementModify = 0xc76e80;
		constexpr auto GetExtrapolationTime = 0xc75c70;
		constexpr auto GetInterpolationDelay = 0xc76130;
		constexpr auto GetInterpolationInertia = 0xc761c0;
		constexpr auto GetInterpolationSmoothing = 0xc76250;
		constexpr auto GetAngularVelocityClient = 0xc755d0;
		constexpr auto GetLocalVelocityClient = 0xc76530;
		constexpr auto DrawInterpolationState = 0xc73640;
		constexpr auto LerpIdleDisable = 0xc791b0;
		constexpr auto ClientInit = 0xc72890;
		constexpr auto ClientOnEnable = 0xc72940;
		constexpr auto OnPositionalFromNetwork = 0xc7a690;
		constexpr auto StartLerping = 0xc7dc30;
		constexpr auto StopLerping = 0xc7ddb0;
		constexpr auto ShouldLerp = 0xc7d820;
		constexpr auto SetNetworkPosition = 0xc7d310;
		constexpr auto SetNetworkRotation = 0xc7d480;
		constexpr auto DoDestroyEffects = 0xc73620;
		constexpr auto SpawnGibs = 0xc7d920;
		constexpr auto DoNetworkDestroy = 0x4a2370;
		constexpr auto PostNetworkUpdate = 0xc7bdc0;
		constexpr auto OnBecameRagdoll = 0xc7a3d0;
		constexpr auto GetMenuInformation = 0xc766b0;
		constexpr auto HideMenuItems = 0xc77bd0;
		constexpr auto GetMenuItems = 0xc769a0;
		constexpr auto OnUse = 0xc7bbb0;
		constexpr auto OnUseHeld = 0xc7b990;
		constexpr auto OnUseStopped = 0x479d20;
		constexpr auto OnRendered = 0x479d20;
		constexpr auto DoClientDestroy = 0xc73370;
		constexpr auto GetEyeTransform = 0xc75d00;
		constexpr auto NeedsCrosshair = 0xc7a2c0;
		constexpr auto AlwaysShowCrosshair = 0x59db70;
		constexpr auto ShouldDestroyWithGroup = 0xc7d770;
		constexpr auto DetachEffects = 0xc72f60;
		constexpr auto OnVoiceData = 0x479d20;
		constexpr auto LookingAtTick = 0x479d20;
		constexpr auto get_RealisticMass = 0x5b2740;
		constexpr auto OnCollision = 0xc7a480;
		constexpr auto ReceiveCollisionMessages = 0xc7beb0;
		constexpr auto DebugClient = 0x479d20;
		constexpr auto OnDebugStart = 0xc7a4d0;
		constexpr auto DebugText = 0xc72ea0;
		constexpr auto HasFlag = 0xc77b90;
		constexpr auto ParentHasFlag = 0xc7bd20;
		constexpr auto SetFlag = 0xc7d140;
		constexpr auto IsOn = 0xc781e0;
		constexpr auto IsOpen = 0xc781f0;
		constexpr auto IsOnFire = 0xc781d0;
		constexpr auto IsLocked = 0xc77f20;
		constexpr auto IsDebugging = 0xc77d30;
		constexpr auto IsDisabled = 0xc77d40;
		constexpr auto IsBroken = 0xc77d20;
		constexpr auto IsBusy = 0xc77bd0;
		constexpr auto GetLogColor = 0xc76660;
		constexpr auto OnFlagsChanged = 0xc7a590;
		constexpr auto IsOccupied = 0xc78020;
		constexpr auto FindLink = 0xc745a0;
		constexpr auto EntityLinkBroadcast = 0xc74080;
		constexpr auto ReceivedEntityLinkBroadcast = 0xc7bf40;
		constexpr auto GetEntityLinks = 0xc75af0;
		constexpr auto LinkToEntity = 0xc791e0;
		constexpr auto LinkToNeighbours = 0xc79440;
		constexpr auto InitEntityLinks = 0xc77be0;
		constexpr auto FreeEntityLinks = 0xc754f0;
		constexpr auto RefreshEntityLinks = 0xc7bfb0;
		constexpr auto RequestFileFromServer = 0xc7c860;
		constexpr auto EnqueueFileRequest = 0xc73d30;
		constexpr auto RequestFileImpl = 0xc7c960;
		constexpr auto FlushQueuedFileRequests = 0xc74880;
		constexpr auto CL_ReceiveFileRequest = 0xc725a0;
		constexpr auto CompletePendingFileRequests = 0xc72b40;
		constexpr auto UpdateChildren = 0xc7df70;
		constexpr auto UpdateParenting = 0xc7ed40;
		constexpr auto SetParentTransform = 0xc7d550;
		constexpr auto UpdateDisableState = 0xc7e2e0;
		constexpr auto HasClientTransformOffset = 0xc779f0;
		constexpr auto RemoveClientTransformOffset = 0xc7c2c0;
		constexpr auto AddClientTransformOffset = 0xc71f60;
		constexpr auto OnParentChangingClient = 0x479d20;
		constexpr auto GetBuildingPrivilege = 0xc75a80;
		constexpr auto ServerRPC = 0xc7ce00;
		constexpr auto ServerRPCStart = 0xc7cc50;
		constexpr auto ServerRPCSend = 0xc7cbe0;
		constexpr auto CL_RPCMessage = 0xc722b0;
		constexpr auto SendSignalBroadcast = 0xc7cb30;
		constexpr auto SignalFromServerEx = 0xc7d840;
		constexpr auto SignalFromServer = 0xc7d8d0;
		constexpr auto OnSignal = 0x479d20;
		constexpr auto OnSkinChanged = 0xc7b600;
		constexpr auto OnSkinRefreshStart = 0xc7b970;
		constexpr auto OnSkinRefreshEnd = 0xc7b950;
		constexpr auto PreProcess = 0xc7bde0;
		constexpr auto HasAnySlot = 0xc77910;
		constexpr auto GetSlot = 0xc77490;
		constexpr auto GetSlotAnchorName = 0xc77350;
		constexpr auto GetSlotAnchor = 0xc773e0;
		constexpr auto HasSlot = 0x59db70;
		constexpr auto get_Traits = 0x592640;
		constexpr auto HasTrait = 0xc77ba0;
		constexpr auto HasAnyTrait = 0xc779c0;
		constexpr auto EnterTrigger = 0xc73fd0;
		constexpr auto LeaveTrigger = 0xc79110;
		constexpr auto RemoveFromTriggers = 0xc7c320;
		constexpr auto ForceUpdateTriggersAction = 0xc74a70;
		constexpr auto ForceUpdateTriggers = 0xc74aa0;
		constexpr auto MakeVisible = 0xc7a2a0;
		constexpr auto UpdateCullingSpheres = 0xc7e160;
		constexpr auto RegisterForCulling = 0xc7c090;
		constexpr auto OnVisibilityChanged = 0x479d20;
		constexpr auto UnregisterFromCulling = 0xc7def0;
		constexpr auto UpdateCullingBounds = 0xc7e090;
		constexpr auto CheckVisibility = 0xc72870;
		constexpr auto CalcEntityVisUpdateRate = 0xc72750;
		constexpr auto DebugDrawCullingBounds = 0xc72dd0;
		constexpr auto get_Weight = 0xc7f560;
		constexpr auto set_Weight = 0xc7f580;
		constexpr auto get_Components = 0xc7f4e0;
		constexpr auto ToPlayer = 0x592640;
		constexpr auto get_IsNpc = 0x59db70;
		constexpr auto InitShared = 0xc696d0;
		constexpr auto DestroyShared = 0xc6eef0;
		constexpr auto ResetState = 0xc7cac0;
		constexpr auto InheritedVelocityScale = 0x664f00;
		constexpr auto InheritedVelocityDirection = 0x590d20;
		constexpr auto GetInheritedProjectileVelocity = 0xc75e70;
		constexpr auto GetInheritedThrowVelocity = 0xc76100;
		constexpr auto GetInheritedDropVelocity = 0xc75d90;
		constexpr auto GetParentVelocity = 0xc77090;
		constexpr auto GetWorldVelocity = 0xc774f0;
		constexpr auto GetLocalVelocity = 0xc765c0;
		constexpr auto GetAngularVelocity = 0xc75660;
		constexpr auto WorldSpaceBounds = 0xc7f1e0;
		constexpr auto PivotPoint = 0x4a0c70;
		constexpr auto CenterPoint = 0xc72830;
		constexpr auto ClosestPoint = 0xc72a90;
		constexpr auto TriggerPoint = 0xc72830;
		constexpr auto Distance = 0xc73230;
		constexpr auto SqrDistance = 0xc7daf0;
		constexpr auto Distance2D = 0xc73090;
		constexpr auto SqrDistance2D = 0xc7d950;
		constexpr auto IsVisible = 0xc78d50;
		constexpr auto IsVisibleSpecificLayers = 0xc78700;
		constexpr auto IsVisibleAndCanSee = 0xc784f0;
		constexpr auto IsOlderThan = 0xc78130;
		constexpr auto IsOutside = 0xc78200;
		constexpr auto WaterFactor = 0xc7ed50;
		constexpr auto AirFactor = 0xc72000;
		constexpr auto WaterTestFromVolumes = 0xc7ef20;
		constexpr auto IsInWaterVolume = 0xc77de0;
		constexpr auto BlocksWaterFor = 0x59db70;
		constexpr auto Health = 0x664f00;
		constexpr auto MaxHealth = 0x664f00;
		constexpr auto MaxVelocity = 0x664f00;
		constexpr auto BoundsPadding = 0xc72040;
		constexpr auto PenetrationResistance = 0x5b2740;
		constexpr auto GetImpactEffect = 0xa74990;
		constexpr auto OnAttacked = 0x479d20;
		constexpr auto GetItem = 0x592640;
		constexpr auto GiveItem = 0xc778e0;
		constexpr auto CanBeLooted = 0x590d20;
		constexpr auto GetEntity = 0x5b82a0;
		constexpr auto ToString = 0xc7de00;
		constexpr auto Categorize = 0xc72800;
		constexpr auto Log = 0xc79df0;
		constexpr auto SetModel = 0xc7d260;
		constexpr auto GetModel = 0x9d4c60;
		constexpr auto GetBones = 0xc75700;
		constexpr auto FindBone = 0xc74430;
		constexpr auto FindBoneID = 0xc74350;
		constexpr auto FindClosestBone = 0xc744e0;
		constexpr auto get_OwnerID = 0xc7f550;
		constexpr auto set_OwnerID = 0xc7f570;
		constexpr auto ShouldBlockProjectiles = 0x590d20;
		constexpr auto ShouldInheritNetworkGroup = 0x590d20;
		constexpr auto SupportsChildDeployables = 0x59db70;
		constexpr auto BroadcastEntityMessage = 0xc72050;
		constexpr auto OnEntityMessage = 0x479d20;
		constexpr auto Load = 0xc79730;
		constexpr auto ctor = 0xc7f3d0;
		constexpr auto cctor = 0xc7f320;
	};

	namespace UnityEngine_Time {

		constexpr auto get_time = 0x2432a30;
		constexpr auto get_deltaTime = 0x2432880;
		constexpr auto get_fixedTime = 0x24328e0;
		constexpr auto get_unscaledTime = 0x2432a90;
		constexpr auto get_unscaledDeltaTime = 0x2432a60;
		constexpr auto get_fixedDeltaTime = 0x24328b0;
		constexpr auto set_fixedDeltaTime = 0x2432ac0;
		constexpr auto get_maximumDeltaTime = 0x2432940;
		constexpr auto set_maximumDeltaTime = 0x2432b00;
		constexpr auto get_smoothDeltaTime = 0x24329d0;
		constexpr auto get_timeScale = 0x2432a00;
		constexpr auto set_timeScale = 0x2432b40;
		constexpr auto get_frameCount = 0x2432910;
		constexpr auto get_renderedFrameCount = 0x24329a0;
		constexpr auto get_realtimeSinceStartup = 0x2432970;
	};

	namespace UnityEngine_Physics {

		constexpr auto get_gravity = 0x2541690;
		constexpr auto get_queriesHitBackfaces = 0x25416d0;
		constexpr auto set_queriesHitBackfaces = 0x2541740;
		constexpr auto get_defaultPhysicsScene = 0x2541610;
		constexpr auto IgnoreCollision = 0x253dec0;
		constexpr auto Raycast = 0x253fe30;
		constexpr auto Linecast = 0x253e000;
		constexpr auto CapsuleCast = 0x253d700;
		constexpr auto SphereCast = 0x25410a0;
		constexpr auto BoxCast = 0x253d140;
		constexpr auto Internal_RaycastAll = 0x253df90;
		constexpr auto RaycastAll = 0x253eb70;
		constexpr auto RaycastNonAlloc = 0x253f290;
		constexpr auto Query_SphereCastAll = 0x253ea10;
		constexpr auto SphereCastAll = 0x2540b10;
		constexpr auto SyncTransforms = 0x2541570;
		constexpr auto get_autoSyncTransforms = 0x25415a0;
		constexpr auto set_autoSyncTransforms = 0x2541700;
		constexpr auto OverlapSphereNonAlloc = 0x253e8e0;
		constexpr auto CheckSphere_Internal = 0x253dce0;
		constexpr auto CheckSphere = 0x253dd50;
		constexpr auto CapsuleCastNonAlloc = 0x253d4a0;
		constexpr auto SphereCastNonAlloc = 0x2540ca0;
		constexpr auto CheckCapsule_Internal = 0x253da40;
		constexpr auto CheckCapsule = 0x253dab0;
		constexpr auto CheckBox_Internal = 0x253d880;
		constexpr auto CheckBox = 0x253d8f0;
		constexpr auto OverlapBox_Internal = 0x253e5c0;
		constexpr auto OverlapBox = 0x253e630;
		constexpr auto OverlapBoxNonAlloc = 0x253e460;
		constexpr auto OverlapCapsuleNonAlloc = 0x253e7f0;
		constexpr auto get_gravity_Injected = 0x2541650;
		constexpr auto get_defaultPhysicsScene_Injected = 0x25415d0;
		constexpr auto Internal_RaycastAll_Injected = 0x253df20;
		constexpr auto Query_SphereCastAll_Injected = 0x253e9a0;
		constexpr auto CheckSphere_Internal_Injected = 0x253dc70;
		constexpr auto CheckCapsule_Internal_Injected = 0x253d9d0;
		constexpr auto CheckBox_Internal_Injected = 0x253d810;
		constexpr auto OverlapBox_Internal_Injected = 0x253e550;
	};

	namespace AssetNameCache {
		constexpr auto lower = 0x8;
		constexpr auto upper = 0x10;

		constexpr auto LookupName = 0x9f5af0;
		constexpr auto LookupNameLower = 0x9f5830;
		constexpr auto LookupNameUpper = 0x9f5990;
		constexpr auto GetName = 0x9f5770;
		constexpr auto GetNameLower = 0x9f55f0;
		constexpr auto GetNameUpper = 0x9f56b0;
		constexpr auto cctor = 0x9f5c30;
	};

	namespace UnityEngine_Component {

		constexpr auto get_transform = 0x1a72b50;
		constexpr auto get_gameObject = 0x1a72b10;
		constexpr auto GetComponent = 0x1a726f0;
		constexpr auto GetComponentFastPath = 0x1a72580;
		constexpr auto GetComponentInChildren = 0x1a725e0;
		constexpr auto GetComponentsInChildren = 0x1a727d0;
		constexpr auto GetComponentInParent = 0x1a72670;
		constexpr auto GetComponents = 0x1a72830;
		constexpr auto GetComponentsForListInternal = 0x1a72770;
		constexpr auto CompareTag = 0x1a72500;
		constexpr auto SendMessageUpwards = 0x1a72920;
		constexpr auto SendMessage = 0x1a72a60;
		constexpr auto BroadcastMessage = 0x1a72490;
		constexpr auto ctor = 0x1a6cee0;
	};

	namespace UnityEngine_Transform {

		constexpr auto ctor = 0x1b79b80;
		constexpr auto get_position = 0x24358d0;
		constexpr auto set_position = 0x2436250;
		constexpr auto get_localPosition = 0x24355a0;
		constexpr auto set_localPosition = 0x2435fc0;
		constexpr auto get_eulerAngles = 0x24352a0;
		constexpr auto set_eulerAngles = 0x2435d10;
		constexpr auto get_localEulerAngles = 0x24354c0;
		constexpr auto set_localEulerAngles = 0x2435ec0;
		constexpr auto get_right = 0x2435920;
		constexpr auto set_right = 0x24362a0;
		constexpr auto get_up = 0x2435b10;
		constexpr auto set_up = 0x2436490;
		constexpr auto get_forward = 0x2435330;
		constexpr auto set_forward = 0x2435dc0;
		constexpr auto get_rotation = 0x2435ac0;
		constexpr auto set_rotation = 0x2436440;
		constexpr auto get_localRotation = 0x2435640;
		constexpr auto set_localRotation = 0x2436060;
		constexpr auto get_localScale = 0x24356e0;
		constexpr auto set_localScale = 0x2436100;
		constexpr auto get_parent = 0x2433cc0;
		constexpr auto set_parent = 0x2436150;
		constexpr auto get_parentInternal = 0x2433cc0;
		constexpr auto set_parentInternal = 0x2434ca0;
		constexpr auto GetParent = 0x2433cc0;
		constexpr auto SetParent = 0x2434ca0;
		constexpr auto get_worldToLocalMatrix = 0x2435cb0;
		constexpr auto get_localToWorldMatrix = 0x2435780;
		constexpr auto SetPositionAndRotation = 0x2434d50;
		constexpr auto Translate = 0x2435090;
		constexpr auto Rotate = 0x24346b0;
		constexpr auto RotateAroundInternal = 0x2434410;
		constexpr auto RotateAround = 0x2434470;
		constexpr auto LookAt = 0x2434240;
		constexpr auto Internal_LookAt = 0x2433de0;
		constexpr auto TransformDirection = 0x2434e50;
		constexpr auto InverseTransformDirection = 0x2433ea0;
		constexpr auto TransformVector = 0x2434fd0;
		constexpr auto InverseTransformVector = 0x2434020;
		constexpr auto TransformPoint = 0x2434f10;
		constexpr auto InverseTransformPoint = 0x2433f60;
		constexpr auto get_root = 0x2433d00;
		constexpr auto GetRoot = 0x2433d00;
		constexpr auto get_childCount = 0x2435260;
		constexpr auto DetachChildren = 0x2433ad0;
		constexpr auto SetAsFirstSibling = 0x2434bc0;
		constexpr auto SetAsLastSibling = 0x2434c00;
		constexpr auto SetSiblingIndex = 0x2434db0;
		constexpr auto GetSiblingIndex = 0x2433d40;
		constexpr auto FindRelativeTransformWithPath = 0x2433b10;
		constexpr auto Find = 0x2433b70;
		constexpr auto get_lossyScale = 0x2435830;
		constexpr auto IsChildOf = 0x2434080;
		constexpr auto get_hasChanged = 0x2435480;
		constexpr auto set_hasChanged = 0x2435e70;
		constexpr auto GetEnumerator = 0x2433c50;
		constexpr auto GetChild = 0x2433c10;
		constexpr auto get_position_Injected = 0x2435880;
		constexpr auto set_position_Injected = 0x2436200;
		constexpr auto get_localPosition_Injected = 0x2435550;
		constexpr auto set_localPosition_Injected = 0x2435f70;
		constexpr auto get_rotation_Injected = 0x2435a70;
		constexpr auto set_rotation_Injected = 0x24363f0;
		constexpr auto get_localRotation_Injected = 0x24355f0;
		constexpr auto set_localRotation_Injected = 0x2436010;
		constexpr auto get_localScale_Injected = 0x2435690;
		constexpr auto set_localScale_Injected = 0x24360b0;
		constexpr auto get_worldToLocalMatrix_Injected = 0x2435c60;
		constexpr auto get_localToWorldMatrix_Injected = 0x2435730;
		constexpr auto SetPositionAndRotation_Injected = 0x2434cf0;
		constexpr auto RotateAroundInternal_Injected = 0x24343b0;
		constexpr auto Internal_LookAt_Injected = 0x2433d80;
		constexpr auto TransformDirection_Injected = 0x2434df0;
		constexpr auto InverseTransformDirection_Injected = 0x2433e40;
		constexpr auto TransformVector_Injected = 0x2434f70;
		constexpr auto InverseTransformVector_Injected = 0x2433fc0;
		constexpr auto TransformPoint_Injected = 0x2434eb0;
		constexpr auto InverseTransformPoint_Injected = 0x2433f00;
		constexpr auto get_lossyScale_Injected = 0x24357e0;
	};

	namespace GameTrace {

		constexpr auto TraceAll = 0xad28f0;
		constexpr auto Trace = 0xad31f0;
	};

	namespace HitTest {
		constexpr auto type = 0x10;
		constexpr auto AttackRay = 0x14;
		constexpr auto Radius = 0x2c;
		constexpr auto Forgiveness = 0x30;
		constexpr auto MaxDistance = 0x34;
		constexpr auto RayHit = 0x38;
		constexpr auto MultiHit = 0x64;
		constexpr auto BestHit = 0x65;
		constexpr auto DidHit = 0x66;
		constexpr auto damageProperties = 0x68;
		constexpr auto gameObject = 0x70;
		constexpr auto collider = 0x78;
		constexpr auto ignoreEntity = 0x80;
		constexpr auto HitEntity = 0x88;
		constexpr auto HitPoint = 0x90;
		constexpr auto HitNormal = 0x9c;
		constexpr auto HitDistance = 0xa8;
		constexpr auto HitTransform = 0xb0;
		constexpr auto HitPart = 0xb8;
		constexpr auto HitMaterial = 0xc0;

		constexpr auto HitPointWorld = 0x8bb000;
		constexpr auto HitNormalWorld = 0x8baee0;
		constexpr auto BuildAttackMessage = 0x8ba650;
		constexpr auto Clear = 0x8bae00;
		constexpr auto ctor = 0x4a2370;
	};

	namespace UnityEngine_Quaternion {
		constexpr auto x = 0x10;
		constexpr auto y = 0x14;
		constexpr auto z = 0x18;
		constexpr auto w = 0x1c;

		constexpr auto FromToRotation = 0x1b80690;
		constexpr auto Inverse = 0x1b80a80;
		constexpr auto Slerp = 0x1b81500;
		constexpr auto SlerpUnclamped = 0x1b813e0;
		constexpr auto Lerp = 0x1b80cb0;
		constexpr auto LerpUnclamped = 0x1b80b90;
		constexpr auto Internal_FromEulerRad = 0x1b807f0;
		constexpr auto Internal_ToEulerRad = 0x1b809a0;
		constexpr auto AngleAxis = 0x1b80070;
		constexpr auto LookRotation = 0x1b80f10;
		constexpr auto ctor = 0xfc3b0;
		constexpr auto get_identity = 0x1b81a00;
		constexpr auto op_Multiply = 0x1b81e20;
		constexpr auto IsEqualUsingDot = 0x1b80b10;
		constexpr auto op_Equality = 0x1b81a70;
		constexpr auto op_Inequality = 0x1b81b30;
		constexpr auto Dot = 0x1b80230;
		constexpr auto SetLookRotation = 0x30f250;
		constexpr auto Angle = 0x1b80110;
		constexpr auto Internal_MakePositive = 0x1b80880;
		constexpr auto get_eulerAngles = 0x30f370;
		constexpr auto Euler = 0x1b80360;
		constexpr auto RotateTowards = 0x1b80fb0;
		constexpr auto GetHashCode = 0x30f1e0;
		constexpr auto Equals = 0x30f100;
		constexpr auto ToString = 0x30f360;
		constexpr auto cctor = 0x1b817f0;
		constexpr auto FromToRotation_Injected = 0x1b80630;
		constexpr auto Inverse_Injected = 0x1b80a30;
		constexpr auto Slerp_Injected = 0x1b81490;
		constexpr auto SlerpUnclamped_Injected = 0x1b81370;
		constexpr auto Lerp_Injected = 0x1b80c40;
		constexpr auto LerpUnclamped_Injected = 0x1b80b20;
		constexpr auto Internal_FromEulerRad_Injected = 0x1b807a0;
		constexpr auto Internal_ToEulerRad_Injected = 0x1b80950;
		constexpr auto AngleAxis_Injected = 0x1b80010;
		constexpr auto LookRotation_Injected = 0x1b80d60;
	};

	namespace GamePhysics {
		constexpr auto hitBufferB = 0x8;
		constexpr auto colBuffer = 0x10;

		constexpr auto CheckSphere = 0x8e72d0;
		constexpr auto CheckCapsule = 0x8e6860;
		constexpr auto CheckOBB = 0x8e71a0;
		constexpr auto CheckOBBAndEntity = 0x8e6f20;
		constexpr auto CheckBounds = 0x8e6700;
		constexpr auto CheckInsideNonConvexMesh = 0x8e6b70;
		constexpr auto CheckInsideAnyCollider = 0x8e69e0;
		constexpr auto OverlapSphere = 0x8e8700;
		constexpr auto CapsuleSweep = 0x8e6460;
		constexpr auto OverlapCapsule = 0x8e8480;
		constexpr auto OverlapOBB = 0x8e85b0;
		constexpr auto OverlapBounds = 0x8e82e0;
		constexpr auto BufferToList = 0x8e62c0;
		constexpr auto HitBufferToList = 0x8e7530;
		constexpr auto Trace = 0x8e8db0;
		constexpr auto TraceAll = 0x8e8cd0;
		constexpr auto TraceAllUnordered = 0x8e89e0;
		constexpr auto LineOfSightRadius = 0x8e7ec0;
		constexpr auto LineOfSight = 0x8e80b0;
		constexpr auto LineOfSightInternal = 0x8e76a0;
		constexpr auto Verify = 0x8e8fc0;
		constexpr auto CompareEntity = 0x8e7390;
		constexpr auto HandleTerrainCollision = 0x8e7420;
		constexpr auto Sort = 0x8e88e0;
		constexpr auto cctor = 0x8e9270;
	};

	namespace WaterLevel {

		constexpr auto Factor = 0xcb3030;
		constexpr auto Test = 0xcb51e0;
		constexpr auto GetWaterDepth = 0xcb3900;
		constexpr auto GetOverallWaterDepth = 0xcb37b0;
		constexpr auto GetBuoyancyWaterInfo = 0xcb3210;
		constexpr auto GetWaterInfo = 0xcb3c90;
		constexpr auto GetWaterInfoFromVolumes = 0xcb3a40;
	};

	namespace System_Math {
		constexpr auto roundPower10Double = 0x8;

		constexpr auto Acos = 0x185de50;
		constexpr auto Asin = 0x185de60;
		constexpr auto Atan = 0x185de80;
		constexpr auto Atan2 = 0x185de70;
		constexpr auto Ceiling = 0x185de90;
		constexpr auto Cos = 0x185dea0;
		constexpr auto Cosh = 0x185deb0;
		constexpr auto Floor = 0x185dee0;
		constexpr auto InternalRound = 0x185def0;
		constexpr auto InternalTruncate = 0x185e150;
		constexpr auto Sin = 0x185eca0;
		constexpr auto Tan = 0x185ece0;
		constexpr auto Sinh = 0x185ecb0;
		constexpr auto Round = 0x185e980;
		constexpr auto SplitFractionDouble = 0x185ecc0;
		constexpr auto Truncate = 0x185ecf0;
		constexpr auto Sqrt = 0x185ecd0;
		constexpr auto Log = 0x185e320;
		constexpr auto Log10 = 0x185e1b0;
		constexpr auto Exp = 0x185ded0;
		constexpr auto Pow = 0x185e730;
		constexpr auto Abs = 0x185dd80;
		constexpr auto AbsHelper = 0x185dc20;
		constexpr auto Max = 0x185e3d0;
		constexpr auto Min = 0x185e720;
		constexpr auto Sign = 0x185ec60;
		constexpr auto DivRem = 0x185dec0;
		constexpr auto cctor = 0x185eda0;
	};

	namespace UnityEngine_Mathf {

		constexpr auto ClosestPowerOfTwo = 0x1b70330;
		constexpr auto IsPowerOfTwo = 0x1b70750;
		constexpr auto NextPowerOfTwo = 0x1b70f20;
		constexpr auto GammaToLinearSpace = 0x1b70620;
		constexpr auto LinearToGammaSpace = 0x1b709b0;
		constexpr auto FloatToHalf = 0x1b70520;
		constexpr auto HalfToFloat = 0x1b70660;
		constexpr auto PerlinNoise = 0x1b70f60;
		constexpr auto Sin = 0x1b711b0;
		constexpr auto Cos = 0x1b70370;
		constexpr auto Tan = 0x1b71690;
		constexpr auto Asin = 0x1b700d0;
		constexpr auto Acos = 0x1b6ffc0;
		constexpr auto Atan = 0x1b701b0;
		constexpr auto Atan2 = 0x1b70130;
		constexpr auto Sqrt = 0x1b71630;
		constexpr auto Abs = 0x1b6ff60;
		constexpr auto Min = 0x1b70bc0;
		constexpr auto Max = 0x1b70b30;
		constexpr auto Pow = 0x1b70fb0;
		constexpr auto Exp = 0x1b704c0;
		constexpr auto Log = 0x1b70ab0;
		constexpr auto Log10 = 0x1b709f0;
		constexpr auto Ceil = 0x1b70270;
		constexpr auto Floor = 0x1b705c0;
		constexpr auto Round = 0x1b71130;
		constexpr auto CeilToInt = 0x1b70210;
		constexpr auto FloorToInt = 0x1b70560;
		constexpr auto RoundToInt = 0x1b710d0;
		constexpr auto Sign = 0x1b71190;
		constexpr auto Clamp = 0x1b702f0;
		constexpr auto Clamp01 = 0x1b702d0;
		constexpr auto Lerp = 0x1b70910;
		constexpr auto LerpUnclamped = 0x1b708f0;
		constexpr auto LerpAngle = 0x1b70790;
		constexpr auto MoveTowards = 0x1b70e30;
		constexpr auto MoveTowardsAngle = 0x1b70bd0;
		constexpr auto SmoothStep = 0x1b71570;
		constexpr auto Approximately = 0x1b70020;
		constexpr auto SmoothDamp = 0x1b713a0;
		constexpr auto Repeat = 0x1b71030;
		constexpr auto InverseLerp = 0x1b706a0;
		constexpr auto DeltaAngle = 0x1b703d0;
		constexpr auto cctor = 0x1b716f0;
	};

	namespace Door {
		constexpr auto __menuOption_Menu_CloseDoor = 0x270;
		constexpr auto __menuOption_Menu_KnockDoor = 0x2c8;
		constexpr auto __menuOption_Menu_OpenDoor = 0x320;
		constexpr auto __menuOption_Menu_ToggleHatch = 0x378;
		constexpr auto knockEffect = 0x3d0;
		constexpr auto canTakeLock = 0x3d8;
		constexpr auto hasHatch = 0x3d9;
		constexpr auto canTakeCloser = 0x3da;
		constexpr auto canTakeKnocker = 0x3db;
		constexpr auto canNpcOpen = 0x3dc;
		constexpr auto canHandOpen = 0x3dd;
		constexpr auto isSecurityDoor = 0x3de;
		constexpr auto vehiclePhysBoxes = 0x3e0;
		constexpr auto checkPhysBoxesOnOpen = 0x3e8;
		constexpr auto vehicleCollisionSfx = 0x3f0;
		constexpr auto ClosedColliderRoots = 0x3f8;
		constexpr auto closeHash = 0x4;

		constexpr auto GetMenuOptions = 0xb42b80;
		constexpr auto get_HasMenuOptions = 0xb44660;
		constexpr auto OnRpcMessage = 0xb43fb0;
		constexpr auto ResetState = 0xb44400;
		constexpr auto HasSlot = 0xb43770;
		constexpr auto CanPickup = 0xb42a10;
		constexpr auto Menu_OpenDoor = 0xb43b60;
		constexpr auto Menu_OpenDoor_Proxy = 0xb43a40;
		constexpr auto Menu_OpenDoorStart = 0xb43a00;
		constexpr auto Menu_OpenDoor_ShowIf = 0xb43b20;
		constexpr auto Menu_CloseDoor = 0xb43910;
		constexpr auto Menu_CloseDoor_Proxy = 0xb437f0;
		constexpr auto Menu_CloseDoorStart = 0xb437b0;
		constexpr auto Menu_CloseDoor_ShowIf = 0xb438d0;
		constexpr auto Menu_KnockDoor = 0xb439c0;
		constexpr auto Menu_KnockDoor_ShowIf = 0xb43950;
		constexpr auto Menu_ToggleHatch = 0xb43bb0;
		constexpr auto Menu_ToggleHatch_ShowIf = 0xb43ba0;
		constexpr auto NeedsCrosshair = 0x590d20;
		constexpr auto OnDoorInterrupted = 0xb43bf0;
		constexpr auto ReverseDoorAnimation = 0xb44410;
		constexpr auto BoundsPadding = 0x6727e0;
		constexpr auto OnObjects = 0x479d20;
		constexpr auto OnEmpty = 0x479d20;
		constexpr auto OnFlagsChanged = 0xb43e80;
		constexpr auto ctor = 0xb44640;
		constexpr auto cctor = 0xb445d0;
	};

	namespace UnityEngine_Object {
		constexpr auto m_CachedPtr = 0x10;

		constexpr auto GetInstanceID = 0x1b7a470;
		constexpr auto GetHashCode = 0x1b7a460;
		constexpr auto Equals = 0x1b7a080;
		constexpr auto op_Implicit = 0x1b7b900;
		constexpr auto CompareBaseObjects = 0x1b79d90;
		constexpr auto IsNativeObjectAlive = 0x1b7b550;
		constexpr auto GetCachedPtr = 0x1a6a640;
		constexpr auto get_name = 0x1b7b720;
		constexpr auto set_name = 0x1b7bb80;
		constexpr auto Instantiate = 0x1b7afd0;
		constexpr auto Destroy = 0x1b79f80;
		constexpr auto DestroyImmediate = 0x1b79f30;
		constexpr auto FindObjectsOfType = 0x1b7a420;
		constexpr auto DontDestroyOnLoad = 0x1b7a040;
		constexpr auto get_hideFlags = 0x1b7b6e0;
		constexpr auto set_hideFlags = 0x1b7bb40;
		constexpr auto CheckNullArgument = 0x1b79d20;
		constexpr auto FindObjectOfType = 0x1b7a390;
		constexpr auto ToString = 0x1b7b5f0;
		constexpr auto op_Equality = 0x1b7b790;
		constexpr auto op_Inequality = 0x1b7b9d0;
		constexpr auto GetOffsetOfInstanceIDInCPlusPlusObject = 0x1b7a5e0;
		constexpr auto Internal_CloneSingle = 0x1b7b310;
		constexpr auto Internal_CloneSingleWithParent = 0x1b7b2b0;
		constexpr auto Internal_InstantiateSingle = 0x1b7b4c0;
		constexpr auto Internal_InstantiateSingleWithParent = 0x1b7b3c0;
		constexpr auto GetName = 0x1b7a5a0;
		constexpr auto SetName = 0x1b7b5a0;
		constexpr auto FindObjectFromInstanceID = 0x1b7a350;
		constexpr auto ctor = 0x4a2370;
		constexpr auto cctor = 0x1b7b6a0;
		constexpr auto Internal_InstantiateSingle_Injected = 0x1b7b460;
		constexpr auto Internal_InstantiateSingleWithParent_Injected = 0x1b7b350;
	};

	namespace BaseMelee {
		constexpr auto canThrowAsProjectile = 0x280;
		constexpr auto canAiHearIt = 0x281;
		constexpr auto onlyThrowAsProjectile = 0x282;
		constexpr auto damageProperties = 0x288;
		constexpr auto damageTypes = 0x290;
		constexpr auto maxDistance = 0x298;
		constexpr auto attackRadius = 0x29c;
		constexpr auto isAutomatic = 0x2a0;
		constexpr auto blockSprintOnAttack = 0x2a1;
		constexpr auto strikeFX = 0x2a8;
		constexpr auto useStandardHitEffects = 0x2b0;
		constexpr auto aiStrikeDelay = 0x2b4;
		constexpr auto swingEffect = 0x2b8;
		constexpr auto materialStrikeFX = 0x2c0;
		constexpr auto heartStress = 0x2c8;
		constexpr auto gathering = 0x2d0;
		constexpr auto throwReady = 0x2d8;

		constexpr auto OnRpcMessage = 0x898a80;
		constexpr auto GetInheritedVelocity = 0x8984c0;
		constexpr auto DoThrow = 0x897d10;
		constexpr auto CreateProjectile = 0x8976d0;
		constexpr auto GetAttackStats = 0x898430;
		constexpr auto DoAttackShared = 0x897880;
		constexpr auto OnInput = 0x8986a0;
		constexpr auto get_CanAttack = 0x590d20;
		constexpr auto get_CanThrow = 0x590d20;
		constexpr auto ClientAttack = 0x479d20;
		constexpr auto OnHolstered = 0x898680;
		constexpr auto ProcessAttack = 0x898c30;
		constexpr auto DoAttack = 0x897ad0;
		constexpr auto DoViewmodelImpact = 0x8983a0;
		constexpr auto OnViewmodelEvent = 0x898b70;
		constexpr auto ProcessSpectatorViewmodel = 0x898f70;
		constexpr auto ProcessSpectatorViewmodelEvent = 0x898ec0;
		constexpr auto GetGatherInfoFromIndex = 0x898490;
		constexpr auto CanHit = 0x590d20;
		constexpr auto TotalDamage = 0x899020;
		constexpr auto CanBeUsedInWater = 0x590d20;
		constexpr auto GetStrikeEffectPath = 0x898520;
		constexpr auto ctor = 0x899180;
	};

	namespace ItemModProjectile {
		constexpr auto projectileObject = 0x18;
		constexpr auto mods = 0x20;
		constexpr auto ammoType = 0x28;
		constexpr auto numProjectiles = 0x2c;
		constexpr auto projectileSpread = 0x30;
		constexpr auto projectileVelocity = 0x34;
		constexpr auto projectileVelocitySpread = 0x38;
		constexpr auto useCurve = 0x3c;
		constexpr auto spreadScalar = 0x40;
		constexpr auto attackEffectOverride = 0x48;
		constexpr auto barrelConditionLoss = 0x50;
		constexpr auto category = 0x58;

		constexpr auto GetRandomVelocity = 0xa5d590;
		constexpr auto GetSpreadScalar = 0xa5d5d0;
		constexpr auto GetIndexedSpreadScalar = 0xa5d500;
		constexpr auto GetAverageVelocity = 0xa5d4f0;
		constexpr auto GetMinVelocity = 0xa5d580;
		constexpr auto GetMaxVelocity = 0xa5d570;
		constexpr auto IsAmmo = 0xa5d630;
		constexpr auto ServerProjectileHit = 0xa5d640;
		constexpr auto ctor = 0xa5d710;
	};

	namespace RecoilProperties {
		constexpr auto recoilYawMin = 0x18;
		constexpr auto recoilYawMax = 0x1c;
		constexpr auto recoilPitchMin = 0x20;
		constexpr auto recoilPitchMax = 0x24;
		constexpr auto timeToTakeMin = 0x28;
		constexpr auto timeToTakeMax = 0x2c;
		constexpr auto ADSScale = 0x30;
		constexpr auto movementPenalty = 0x34;
		constexpr auto clampPitch = 0x38;
		constexpr auto pitchCurve = 0x40;
		constexpr auto yawCurve = 0x48;
		constexpr auto useCurves = 0x50;
		constexpr auto curvesAsScalar = 0x51;
		constexpr auto shotsUntilMax = 0x54;
		constexpr auto maxRecoilRadius = 0x58;
		constexpr auto overrideAimconeWithCurve = 0x5c;
		constexpr auto aimconeCurveScale = 0x60;
		constexpr auto aimconeCurve = 0x68;
		constexpr auto aimconeProbabilityCurve = 0x70;
		constexpr auto newRecoilOverride = 0x78;

		constexpr auto GetRecoil = 0xa66b10;
		constexpr auto ctor = 0xa66b90;
	};

	namespace ItemDefinition {
		constexpr auto itemid = 0x18;
		constexpr auto shortname = 0x20;
		constexpr auto displayName = 0x28;
		constexpr auto displayDescription = 0x30;
		constexpr auto iconSprite = 0x38;
		constexpr auto category = 0x40;
		constexpr auto selectionPanel = 0x44;
		constexpr auto maxDraggable = 0x48;
		constexpr auto itemType = 0x4c;
		constexpr auto amountType = 0x50;
		constexpr auto occupySlots = 0x54;
		constexpr auto stackable = 0x58;
		constexpr auto quickDespawn = 0x5c;
		constexpr auto rarity = 0x60;
		constexpr auto despawnRarity = 0x64;
		constexpr auto spawnAsBlueprint = 0x68;
		constexpr auto inventoryGrabSound = 0x70;
		constexpr auto inventoryDropSound = 0x78;
		constexpr auto physImpactSoundDef = 0x80;
		constexpr auto condition = 0x88;
		constexpr auto hidden = 0xa0;
		constexpr auto flags = 0xa4;
		constexpr auto steamItem = 0xa8;
		constexpr auto steamDlc = 0xb0;
		constexpr auto Parent = 0xb8;
		constexpr auto worldModelPrefab = 0xc0;
		constexpr auto isRedirectOf = 0xc8;
		constexpr auto redirectVendingBehaviour = 0xd0;
		constexpr auto itemMods = 0xd8;
		constexpr auto Traits = 0xe0;
		constexpr auto skins = 0xe8;
		constexpr auto _skins2 = 0xf0;
		constexpr auto panel = 0xf8;
		constexpr auto ItemModWearablek__BackingField = 0x100;
		constexpr auto isHoldablek__BackingField = 0x108;
		constexpr auto isUsablek__BackingField = 0x109;
		constexpr auto CraftableWithSkink__BackingField = 0x10a;
		constexpr auto Children = 0x110;

		constexpr auto get_skins2 = 0xa53c30;
		constexpr auto InvalidateWorkshopSkinCache = 0xa53980;
		constexpr auto get_Blueprint = 0xa53a90;
		constexpr auto get_craftingStackable = 0xa53b50;
		constexpr auto HasFlag = 0xa53700;
		constexpr auto Initialize = 0xa53710;
		constexpr auto GetDisplayName = 0xa53600;
		constexpr auto GetDescriptionText = 0xa53530;
		constexpr auto FindIconSprite = 0xa531d0;
		constexpr auto get_isWearable = 0xa53bd0;
		constexpr auto get_ItemModWearable = 0xa53b40;
		constexpr auto set_ItemModWearable = 0xa53e40;
		constexpr auto get_isHoldable = 0xa53bb0;
		constexpr auto set_isHoldable = 0xa53e50;
		constexpr auto get_isUsable = 0xa53bc0;
		constexpr auto set_isUsable = 0xa53e60;
		constexpr auto get_HasSkins = 0xa53ae0;
		constexpr auto get_CraftableWithSkin = 0xa53ad0;
		constexpr auto set_CraftableWithSkin = 0xa53e30;
		constexpr auto ctor = 0xa53a20;
		constexpr auto Initializeb__45_0 = 0xa539a0;
	};

	namespace PlayerInput {
		constexpr auto state = 0x20;
		constexpr auto hadInputBuffer = 0x28;
		constexpr auto bodyRotation = 0x2c;
		constexpr auto bodyAngles = 0x3c;
		constexpr auto headRotation = 0x48;
		constexpr auto headAngles = 0x58;
		constexpr auto recoilAngles = 0x64;
		constexpr auto viewDelta = 0x70;
		constexpr auto headLerp = 0x78;
		constexpr auto mouseWheelUp = 0x7c;
		constexpr auto mouseWheelDn = 0x80;
		constexpr auto autorun = 0x84;
		constexpr auto toggleDuck = 0x85;
		constexpr auto toggleAds = 0x86;
		constexpr auto lastAdsEntity = 0x88;
		constexpr auto pendingMouseDelta = 0x8c;
		constexpr auto offsetAngles = 0x98;
		constexpr auto ignoredButtons = 0xa4;
		constexpr auto hasKeyFocus = 0xa8;

		constexpr auto OnDisable = 0x62aa10;
		constexpr auto FrameUpdate = 0x629bb0;
		constexpr auto CanToggleAds = 0x6295d0;
		constexpr auto Flip = 0x629a40;
		constexpr auto ResetMouseDelta = 0x62aa90;
		constexpr auto AddMouseDelta = 0x627e30;
		constexpr auto AdjustMouseMovement = 0x628100;
		constexpr auto UpdateViewAngles = 0x62ac90;
		constexpr auto ApplyViewAngles = 0x628340;
		constexpr auto SetViewVars = 0x62ab70;
		constexpr auto FinalizeRecoil = 0x629860;
		constexpr auto ResetOffsetAngles = 0x62ab00;
		constexpr auto ClientAngles = 0x629830;
		constexpr auto ClientLookVars = 0x629840;
		constexpr auto HeadAngles = 0x62a000;
		constexpr auto HeadLookVars = 0x62a010;
		constexpr auto ModifyInputState = 0x62a980;
		constexpr auto IsButtonDownNative = 0x62a480;
		constexpr auto BuildInputState = 0x628ee0;
		constexpr auto IsAiming = 0x62a330;
		constexpr auto UpdateButton = 0x62ac00;
		constexpr auto IgnoreCurrentButtons = 0x62a030;
		constexpr auto get_hasOnlyPartialKeyInput = 0x62afa0;
		constexpr auto get_hasNoKeyInput = 0x62ae10;
		constexpr auto UpdateKeyFocus = 0x62ac70;
		constexpr auto IgnoreCurrentKeys = 0x62a140;
		constexpr auto ctor = 0x62ada0;
	};

	namespace PlayerModel {
		constexpr auto pm_downlimit = 0x4;
		constexpr auto pm_upspine = 0x8;
		constexpr auto pm_downspine = 0xc;
		constexpr auto pm_lookoffset = 0x10;
		constexpr auto pm_anglesmoothspeed = 0x1c;
		constexpr auto pm_nohold = 0x20;
		constexpr auto pm_ladder = 0x24;
		constexpr auto pm_minweight = 0x28;
		constexpr auto _smoothAimWeight = 0x18;
		constexpr auto _smoothVelocity = 0x1c;
		constexpr auto _smoothlookAngle = 0x20;
		constexpr auto allowMountedHeadLook = 0x2c;
		constexpr auto smoothLookDir = 0x30;
		constexpr auto lastSafeLookDir = 0x3c;
		constexpr auto Shoulders = 0x48;
		constexpr auto AdditionalSpineBones = 0x50;
		constexpr auto FinishedLegWearables = 0x30;
		constexpr auto LegParts = 0x58;
		constexpr auto fakeSpineBones = 0x60;
		constexpr auto extraLeanBack = 0x68;
		constexpr auto drawState = 0x6c;
		constexpr auto timeInArmsMode = 0x70;
		constexpr auto speed = 0x38;
		constexpr auto acceleration = 0x3c;
		constexpr auto rotationYaw = 0x40;
		constexpr auto forward = 0x44;
		constexpr auto right = 0x48;
		constexpr auto up = 0x4c;
		constexpr auto ducked = 0x50;
		constexpr auto grounded = 0x54;
		constexpr auto crawling = 0x58;
		constexpr auto waterlevel = 0x5c;
		constexpr auto attack = 0x60;
		constexpr auto attack_alt = 0x64;
		constexpr auto deploy = 0x68;
		constexpr auto reload = 0x6c;
		constexpr auto throwWeapon = 0x70;
		constexpr auto holster = 0x74;
		constexpr auto aiming = 0x78;
		constexpr auto onLadder = 0x7c;
		constexpr auto posing = 0x80;
		constexpr auto poseType = 0x84;
		constexpr auto relaxGunPose = 0x88;
		constexpr auto vehicle_aim_yaw = 0x8c;
		constexpr auto vehicle_aim_speed = 0x90;
		constexpr auto onPhone = 0x94;
		constexpr auto usePoseTransition = 0x98;
		constexpr auto leftFootIK = 0x9c;
		constexpr auto rightFootIK = 0xa0;
		constexpr auto vehicleSteering = 0xa4;
		constexpr auto sitReaction = 0xa8;
		constexpr auto forwardReaction = 0xac;
		constexpr auto rightReaction = 0xb0;
		constexpr auto collision = 0x78;
		constexpr auto censorshipCube = 0x80;
		constexpr auto censorshipCubeBreasts = 0x88;
		constexpr auto jawBone = 0x90;
		constexpr auto neckBone = 0x98;
		constexpr auto headBone = 0xa0;
		constexpr auto eyeController = 0xa8;
		constexpr auto blinkController = 0xb0;
		constexpr auto SpineBones = 0xb8;
		constexpr auto leftFootBone = 0xc0;
		constexpr auto rightFootBone = 0xc8;
		constexpr auto leftHandPropBone = 0xd0;
		constexpr auto rightHandPropBone = 0xd8;
		constexpr auto rightHandTarget = 0xe0;
		constexpr auto leftHandTargetPosition = 0xec;
		constexpr auto leftHandTargetRotation = 0xf8;
		constexpr auto rightHandTargetPosition = 0x108;
		constexpr auto rightHandTargetRotation = 0x114;
		constexpr auto steeringTargetDegrees = 0x124;
		constexpr auto rightFootTargetPosition = 0x128;
		constexpr auto rightFootTargetRotation = 0x134;
		constexpr auto leftFootTargetPosition = 0x144;
		constexpr auto leftFootTargetRotation = 0x150;
		constexpr auto CinematicAnimationController = 0x160;
		constexpr auto DefaultAvatar = 0x168;
		constexpr auto CinematicAvatar = 0x170;
		constexpr auto DefaultHoldType = 0x178;
		constexpr auto SleepGesture = 0x180;
		constexpr auto CrawlToIncapacitatedGesture = 0x188;
		constexpr auto StandToIncapacitatedGesture = 0x190;
		constexpr auto CurrentGesture = 0x198;
		constexpr auto MaleSkin = 0x1a0;
		constexpr auto FemaleSkin = 0x1a8;
		constexpr auto subsurfaceProfile = 0x1b0;
		constexpr auto voiceVolume = 0x1b8;
		constexpr auto skinColor = 0x1bc;
		constexpr auto skinNumber = 0x1c0;
		constexpr auto meshNumber = 0x1c4;
		constexpr auto hairNumber = 0x1c8;
		constexpr auto skinType = 0x1cc;
		constexpr auto movementSounds = 0x1d0;
		constexpr auto showSash = 0x1d8;
		constexpr auto tempPoseType = 0x1dc;
		constexpr auto underwearSkin = 0x1e0;
		constexpr auto overrideSkinSeedk__BackingField = 0x1e8;
		constexpr auto AimAnglesk__BackingField = 0x1f0;
		constexpr auto LookAnglesk__BackingField = 0x200;
		constexpr auto modelState = 0x210;
		constexpr auto position = 0x218;
		constexpr auto velocity = 0x224;
		constexpr auto speedOverride = 0x230;
		constexpr auto newVelocity = 0x23c;
		constexpr auto rotation = 0x248;
		constexpr auto mountedRotation = 0x258;
		constexpr auto smoothLeftFootIK = 0x268;
		constexpr auto smoothRightFootIK = 0x274;
		constexpr auto drawShadowOnly = 0x280;
		constexpr auto isIncapacitated = 0x281;
		constexpr auto flinchLocation = 0x284;
		constexpr auto visible = 0x288;
		constexpr auto nameTag = 0x290;
		constexpr auto animatorNeedsWarmup = 0x298;
		constexpr auto isLocalPlayer = 0x299;
		constexpr auto aimSoundDef = 0x2a0;
		constexpr auto aimEndSoundDef = 0x2a8;
		constexpr auto InGesture = 0x2b0;
		constexpr auto CurrentGestureConfig = 0x2b8;
		constexpr auto InCinematic = 0x2c0;
		constexpr auto defaultAnimatorController = 0x2c8;
		constexpr auto _multiMesh = 0x2d0;
		constexpr auto _animator = 0x2d8;
		constexpr auto _lodGroup = 0x2e0;
		constexpr auto _currentGesture = 0x2e8;
		constexpr auto holdTypeLock = 0x2f0;
		constexpr auto hasHeldEntity = 0x2f4;
		constexpr auto wasMountedRightAim = 0x2f5;
		constexpr auto cachedMask = 0x2f8;
		constexpr auto cachedConstructionMask = 0x2fc;
		constexpr auto WorkshopHeldEntity = 0x300;
		constexpr auto wasCrawling = 0x308;
		constexpr auto mountedSpineLookWeight = 0x30c;
		constexpr auto mountedAnimSpeed = 0x310;
		constexpr auto preserveBones = 0x314;
		constexpr auto downLimitOverride = 0x318;
		constexpr auto blendShapeControllers = 0x320;
		constexpr auto IsNpck__BackingField = 0x328;
		constexpr auto timeSinceReactionStart = 0x32c;
		constexpr auto timeSinceLeftFootTest = 0x330;
		constexpr auto cachedLeftFootPos = 0x334;
		constexpr auto cachedLeftFootNormal = 0x340;
		constexpr auto timeSinceRightFootTest = 0x34c;
		constexpr auto cachedRightFootPos = 0x350;
		constexpr auto cachedRightFootNormal = 0x35c;

		constexpr auto SetMountedLookAtOverride = 0x6376c0;
		constexpr auto SpineIk = 0x637ae0;
		constexpr auto ParentArmsToCamera = 0x6358e0;
		constexpr auto OnAnimatorIK = 0x634f50;
		constexpr auto HandIK = 0x6335b0;
		constexpr auto FootIK = 0x62fc20;
		constexpr auto HeadIK = 0x633a10;
		constexpr auto get_ShouldDoLegs = 0x63d420;
		constexpr auto get_ShouldShowHands = 0x63d4a0;
		constexpr auto ClearLegs = 0x62ea90;
		constexpr auto RebuildLegs = 0x636290;
		constexpr auto InitializeLegSpineBones = 0x6340f0;
		constexpr auto UpdateLegsBeforeRender = 0x6392f0;
		constexpr auto UpdateLegsDisable = 0x63a1e0;
		constexpr auto AddLegRenderer = 0x62dfc0;
		constexpr auto SwapLegBone = 0x6384d0;
		constexpr auto GetFlat = 0x632a20;
		constexpr auto RebuildAll = 0x635e90;
		constexpr auto get_overrideSkinSeed = 0x63d780;
		constexpr auto set_overrideSkinSeed = 0x63d7c0;
		constexpr auto get_IsFemale = 0x63d3d0;
		constexpr auto get_SkinSet = 0x63d580;
		constexpr auto get_AimAngles = 0x63d280;
		constexpr auto set_AimAngles = 0x63d790;
		constexpr auto get_LookAngles = 0x63d410;
		constexpr auto set_LookAngles = 0x63d7b0;
		constexpr auto get_GestureAllowsSpineMovement = 0x63d330;
		constexpr auto get_GestureAllowsRootMotion = 0x63d290;
		constexpr auto get_IsFirstPerson = 0x63d3e0;
		constexpr auto get_IsNpc = 0x63d400;
		constexpr auto set_IsNpc = 0x63d7a0;
		constexpr auto get_multiMesh = 0x63d6e0;
		constexpr auto get_animator = 0x63d5a0;
		constexpr auto get_lodGroup = 0x63d640;
		constexpr auto GetTargetVelocity = 0x633450;
		constexpr auto Awake = 0x62e9f0;
		constexpr auto OnEnable = 0x635370;
		constexpr auto OnDisable = 0x635080;
		constexpr auto SetDefaultAnimatorWeights = 0x636fa0;
		constexpr auto UpdateMultiMesh = 0x63a880;
		constexpr auto UpdateCensorship = 0x638a10;
		constexpr auto UpdateCollider = 0x638e90;
		constexpr auto UpdateModelState = 0x63a830;
		constexpr auto UpdatePosition = 0x63b310;
		constexpr auto UpdateRotation = 0x63b430;
		constexpr auto UpdateLocalVelocity = 0x63a760;
		constexpr auto UpdateVelocity = 0x63bdb0;
		constexpr auto UpdateParameters = 0x63aa30;
		constexpr auto UpdateFrom = 0x639100;
		constexpr auto UpdateGlobalShaderConstants = 0x639160;
		constexpr auto SetBlendShapesMode = 0x636e60;
		constexpr auto GetCurrentBlendShapeMode = 0x632990;
		constexpr auto LateCycle = 0x6348d0;
		constexpr auto FrameUpdate = 0x631e90;
		constexpr auto FrameUpdate_Default = 0x6314b0;
		constexpr auto FrameUpdate_Sleeping = 0x631bc0;
		constexpr auto FrameUpdate_Incapacitated = 0x631620;
		constexpr auto FrameUpdate_OnLadder = 0x6318f0;
		constexpr auto GetAim360 = 0x632720;
		constexpr auto UpdateVehicleAim360 = 0x63b8c0;
		constexpr auto ResetCurrentState = 0x636d10;
		constexpr auto DoAimingSounds = 0x62f3c0;
		constexpr auto SetAimSounds = 0x636e20;
		constexpr auto SetMountedLookAtWeight = 0x6376d0;
		constexpr auto SetMountedAnimationSpeed = 0x6376b0;
		constexpr auto UpdateLocalPlayerPosition = 0x63a410;
		constexpr auto Attack = 0x62e970;
		constexpr auto AltAttack = 0x62e630;
		constexpr auto Deploy = 0x62f310;
		constexpr auto Reload = 0x636a90;
		constexpr auto Holster = 0x634070;
		constexpr auto Flinch = 0x62fbc0;
		constexpr auto SetReactionAnim = 0x6376e0;
		constexpr auto OnReactionEnded = 0x6358b0;
		constexpr auto Throw = 0x638800;
		constexpr auto Gesture = 0x632390;
		constexpr auto FadeInGestureUpperBodyLayer = 0x62f620;
		constexpr auto FadeOutGestureUpperBodyLayer = 0x62f910;
		constexpr auto FadeInGestureFullBodyLayer = 0x62f500;
		constexpr auto FadeOutGestureFullBodyLayer = 0x62f740;
		constexpr auto AnimatorWarmup = 0x62e6e0;
		constexpr auto AlwaysAnimate = 0x62e6b0;
		constexpr auto SetHoldType = 0x637330;
		constexpr auto SetHasHeldEntity = 0x637320;
		constexpr auto FadeOutGestureLayer = 0x62f8a0;
		constexpr auto SetGesture = 0x6370d0;
		constexpr auto FadeOutPlayerGestureLayers = 0x62fa70;
		constexpr auto StopGesture = 0x6383d0;
		constexpr auto PlayCinematic = 0x635d00;
		constexpr auto StopCinematic = 0x638370;
		constexpr auto SetSpeedOverride = 0x637ac0;
		constexpr auto GetReplacementUnderwear = 0x633390;
		constexpr auto RemoveUnderwearParts = 0x636be0;
		constexpr auto Clear = 0x62ebf0;
		constexpr auto Rebuild = 0x636650;
		constexpr auto AddPart = 0x62e350;
		constexpr auto RemovePart = 0x636b10;
		constexpr auto HasPart = 0x633950;
		constexpr auto IsBarefoot = 0x634840;
		constexpr auto GetSkinColor = 0x6333d0;
		constexpr auto SetSkinProperties = 0x6379a0;
		constexpr auto RefreshUnderwear = 0x636700;
		constexpr auto ForceModelSeed = 0x631280;
		constexpr auto FindBone = 0x62fb90;
		constexpr auto GetBones = 0x632960;
		constexpr auto GetFootPlacement = 0x632a60;
		constexpr auto ApplyVisibility = 0x62e740;
		constexpr auto ToggleUpdateOffscreen = 0x6388a0;
		constexpr auto OnParentDestroying = 0x6357b0;
		constexpr auto WorkshopPreviewSetup = 0x63c1c0;
		constexpr auto ctor = 0x63d0a0;
		constexpr auto cctor = 0x63cb60;
	};

	namespace ProtoBuf_PlayerTeam {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto teamID = 0x18;
		constexpr auto teamName = 0x20;
		constexpr auto teamLeader = 0x28;
		constexpr auto members = 0x30;
		constexpr auto teamLifetime = 0x38;
		constexpr auto mapNote = 0x40;

		constexpr auto ResetToPool = 0x20af970;
		constexpr auto Dispose = 0x20af570;
		constexpr auto EnterPool = 0xf077f0;
		constexpr auto LeavePool = 0xf07820;
		constexpr auto CopyTo = 0x20ada80;
		constexpr auto Copy = 0x20adcc0;
		constexpr auto Deserialize = 0x20aea70;
		constexpr auto DeserializeLengthDelimited = 0x20add40;
		constexpr auto DeserializeLength = 0x20ae1f0;
		constexpr auto FromProto = 0x20af5f0;
		constexpr auto WriteToStream = 0x20b0830;
		constexpr auto WriteToStreamDelta = 0x20b0850;
		constexpr auto ReadFromStream = 0x20af950;
		constexpr auto SerializeDelta = 0x20afe20;
		constexpr auto Serialize = 0x20b0440;
		constexpr auto ToProtoBytes = 0x20b0820;
		constexpr auto ToProto = 0x20b0830;
		constexpr auto SerializeToBytes = 0x20b0330;
		constexpr auto SerializeLengthDelimited = 0x20b0280;
		constexpr auto ctor = 0xf08180;
	};

	namespace PlayerInventory {
		constexpr auto containerMain = 0x20;
		constexpr auto containerBelt = 0x28;
		constexpr auto containerWear = 0x30;
		constexpr auto crafting = 0x38;
		constexpr auto loot = 0x40;

		constexpr auto OnRpcMessage = 0x62be00;
		constexpr auto Initialize = 0x62ba50;
		constexpr auto DoDestroy = 0x62b230;
		constexpr auto ClientInit = 0x62b1b0;
		constexpr auto UpdatedItemContainer = 0x62c250;
		constexpr auto FindItemUID = 0x62b870;
		constexpr auto FindItemID = 0x62b590;
		constexpr auto FindBySubEntityID = 0x62b310;
		constexpr auto FindItemIDs = 0x62b780;
		constexpr auto FindContainer = 0x62b3e0;
		constexpr auto GetContainer = 0x62b9d0;
		constexpr auto Load = 0x62bcb0;
		constexpr auto GetAmount = 0x62b950;
		constexpr auto AllItems = 0x62b0e0;
		constexpr auto AllItemsNoAlloc = 0x62b010;
		constexpr auto FindAmmo = 0x62b2c0;
		constexpr auto HasAmmo = 0x62b9f0;
		constexpr auto ctor = 0x62c440;
	};

	namespace ItemContainer {
		constexpr auto flags = 0x10;
		constexpr auto allowedContents = 0x14;
		constexpr auto onlyAllowedItems = 0x18;
		constexpr auto availableSlots = 0x20;
		constexpr auto capacity = 0x28;
		constexpr auto uid = 0x2c;
		constexpr auto dirty = 0x30;
		constexpr auto itemList = 0x38;
		constexpr auto temperature = 0x40;
		constexpr auto parent = 0x48;
		constexpr auto playerOwner = 0x50;
		constexpr auto entityOwner = 0x58;
		constexpr auto isServer = 0x60;
		constexpr auto maxStackSize = 0x64;

		constexpr auto HasFlag = 0xa51570;
		constexpr auto SetFlag = 0xa52620;
		constexpr auto IsLocked = 0xa51740;
		constexpr auto PlayerItemInputBlocked = 0xa52260;
		constexpr auto get_HasLimitedAllowedItems = 0xa52a10;
		constexpr auto OnChanged = 0xa521c0;
		constexpr auto ClientInitialize = 0xa506a0;
		constexpr auto FindItemByUID = 0xa50c50;
		constexpr auto IsFull = 0xa516f0;
		constexpr auto IsEmpty = 0xa516b0;
		constexpr auto CanAccept = 0xa50570;
		constexpr auto GetMaxTransferAmount = 0xa51210;
		constexpr auto SetOnlyAllowedItem = 0xa52640;
		constexpr auto SetOnlyAllowedItems = 0xa52700;
		constexpr auto Insert = 0xa51580;
		constexpr auto SlotTaken = 0xa52890;
		constexpr auto GetSlot = 0xa513d0;
		constexpr auto FindPosition = 0xa50f40;
		constexpr auto Clear = 0xa505c0;
		constexpr auto Kill = 0xa51750;
		constexpr auto GetAmount = 0xa51090;
		constexpr auto FindItemByItemID = 0xa50ae0;
		constexpr auto FindItemsByItemName = 0xa50df0;
		constexpr auto FindBySubEntityID = 0xa50880;
		constexpr auto FindItemsByItemID = 0xa50d40;
		constexpr auto Save = 0xa52270;
		constexpr auto Load = 0xa51a10;
		constexpr auto GetOwnerPlayer = 0x5d0840;
		constexpr auto ContainerMaxStackSize = 0xa506e0;
		constexpr auto FindAmmo = 0xa507c0;
		constexpr auto HasAmmo = 0xa514a0;
		constexpr auto GetAmmoAmount = 0xa50fd0;
		constexpr auto TotalItemAmount = 0xa528b0;
		constexpr auto ContentsHash = 0xa506f0;
		constexpr auto FindContainer = 0xa509f0;
		constexpr auto CanAcceptItem = 0xa50440;
		constexpr auto ctor = 0xa52960;
	};

	namespace Item {
		constexpr auto amountOverride = 0x10;
		constexpr auto _condition = 0x18;
		constexpr auto _maxCondition = 0x1c;
		constexpr auto info = 0x20;
		constexpr auto uid = 0x28;
		constexpr auto dirty = 0x2c;
		constexpr auto amount = 0x30;
		constexpr auto position = 0x34;
		constexpr auto busyTime = 0x38;
		constexpr auto removeTime = 0x3c;
		constexpr auto fuel = 0x40;
		constexpr auto isServer = 0x44;
		constexpr auto instanceData = 0x48;
		constexpr auto skin = 0x50;
		constexpr auto name = 0x58;
		constexpr auto text = 0x60;
		constexpr auto cookTimeLeft = 0x68;
		constexpr auto progressBar = 0x6c;
		constexpr auto OnDirty = 0x70;
		constexpr auto flags = 0x78;
		constexpr auto contents = 0x80;
		constexpr auto parent = 0x88;
		constexpr auto worldEnt = 0x90;
		constexpr auto heldEntity = 0xa0;

		constexpr auto UpdateAmountDisplay = 0xa5f990;
		constexpr auto FormatAmount = 0xa5e410;
		constexpr auto set_condition = 0xa60960;
		constexpr auto get_condition = 0x7f8430;
		constexpr auto set_maxCondition = 0xa609e0;
		constexpr auto get_maxCondition = 0x7f8400;
		constexpr auto get_maxConditionNormalized = 0xa60710;
		constexpr auto get_conditionNormalized = 0xa60290;
		constexpr auto set_conditionNormalized = 0xa608c0;
		constexpr auto get_hasCondition = 0xa603a0;
		constexpr auto get_isBroken = 0xa605e0;
		constexpr auto get_despawnMultiplier = 0xa602d0;
		constexpr auto get_blueprintTargetDef = 0xa60260;
		constexpr auto get_blueprintTarget = 0xa60280;
		constexpr auto set_blueprintTarget = 0xa60830;
		constexpr auto get_blueprintAmount = 0xa60250;
		constexpr auto set_blueprintAmount = 0xa60820;
		constexpr auto IsBlueprint = 0xa5e950;
		constexpr auto add_OnDirty = 0xa60190;
		constexpr auto remove_OnDirty = 0xa60780;
		constexpr auto HasFlag = 0xa5e940;
		constexpr auto SetFlag = 0xa5f490;
		constexpr auto IsOn = 0xa5eb80;
		constexpr auto IsOnFire = 0xa5eb70;
		constexpr auto IsCooking = 0xa5eb30;
		constexpr auto IsLocked = 0xa5eb40;
		constexpr auto get_parentItem = 0xa60740;
		constexpr auto MarkDirty = 0xa5efd0;
		constexpr auto OnChanged = 0xa5f0c0;
		constexpr auto CollectedForCrafting = 0x479d20;
		constexpr auto ReturnedFromCancelledCraft = 0x479d20;
		constexpr auto IsChildContainer = 0xa5e9a0;
		constexpr auto IsBusy = 0xa5e970;
		constexpr auto BusyFor = 0xa5df90;
		constexpr auto Remove = 0xa5f270;
		constexpr auto DoRemove = 0xa5e250;
		constexpr auto SwitchOnOff = 0xa5f620;
		constexpr auto LockUnlock = 0xa5ef50;
		constexpr auto get_temperature = 0xa60760;
		constexpr auto GetOwnerPlayer = 0xa5e750;
		constexpr auto CanBeHeld = 0xa5dfc0;
		constexpr auto CanStack = 0xa5e000;
		constexpr auto IsValid = 0xa5eb90;
		constexpr auto SetWorldEntity = 0xa5f4b0;
		constexpr auto OnMovedToWorld = 0xa5f1e0;
		constexpr auto GetWorldEntity = 0xa5e800;
		constexpr auto GetHeldEntity = 0xa5e730;
		constexpr auto BeltBarSelect = 0xa5def0;
		constexpr auto GetTotalUISlots = 0xa5e770;
		constexpr auto GetFilledUISlots = 0xa5e6a0;
		constexpr auto HasAmmo = 0xa5e820;
		constexpr auto FindAmmo = 0xa5e2b0;
		constexpr auto GetAmmoAmount = 0xa5e570;
		constexpr auto ToString = 0xa5f6a0;
		constexpr auto FindItem = 0xa5e3f0;
		constexpr auto MaxStackable = 0xa5f030;
		constexpr auto get_iconSprite = 0xa60440;
		constexpr auto get_isLoadingIconSprite = 0xa60610;
		constexpr auto get_Traits = 0xa60230;
		constexpr auto Save = 0xa5f2d0;
		constexpr auto Load = 0xa5eba0;
		constexpr auto ctor = 0xa60170;
		constexpr auto cctor = 0xa600a0;
		constexpr auto get_iconSpriteb__97_0 = 0xa5f980;
		constexpr auto get_isLoadingIconSpriteb__99_0 = 0xa5f980;
	};

	namespace Model {
		constexpr auto collision = 0x18;
		constexpr auto rootBone = 0x20;
		constexpr auto headBone = 0x28;
		constexpr auto eyeBone = 0x30;
		constexpr auto animator = 0x38;
		constexpr auto skeleton = 0x40;
		constexpr auto boneTransforms = 0x48;
		constexpr auto boneNames = 0x50;
		constexpr auto boneDict = 0x58;
		constexpr auto skin = 0x60;
		constexpr auto _lodGroup = 0x68;

		constexpr auto OnEnable = 0x7f7990;
		constexpr auto BuildBoneDictionary = 0x7f70f0;
		constexpr auto GetSkin = 0x7f74b0;
		constexpr auto FindBoneInternal = 0x7f71e0;
		constexpr auto FindBone = 0x7f7270;
		constexpr auto FindBoneID = 0x7f71a0;
		constexpr auto GetBones = 0x7f7480;
		constexpr auto FindClosestBone = 0x7f72e0;
		constexpr auto get_lodGroup = 0x7f8180;
		constexpr auto OnDisable = 0x7f7860;
		constexpr auto SyncBones = 0x7f7d60;
		constexpr auto Trigger = 0x7f80d0;
		constexpr auto GetTransform = 0x7f74c0;
		constexpr auto ApplyVisibility = 0x7f6f60;
		constexpr auto PreProcess = 0x7f79a0;
		constexpr auto ctor = 0x4a0480;
	};

	namespace MedicalTool {
		constexpr auto healDurationSelf = 0x280;
		constexpr auto healDurationOther = 0x284;
		constexpr auto healDurationOtherWounded = 0x288;
		constexpr auto maxDistanceOther = 0x28c;
		constexpr auto canUseOnOther = 0x290;
		constexpr auto canRevive = 0x291;
		constexpr auto useTarget = 0x298;
		constexpr auto resetTime = 0x2a0;

		constexpr auto OnRpcMessage = 0x976d40;
		constexpr auto GetTarget = 0x9765e0;
		constexpr auto AnyPressed = 0x976510;
		constexpr auto OnInput = 0x976990;
		constexpr auto OnViewmodelEvent = 0x977110;
		constexpr auto Reset = 0x977320;
		constexpr auto OnDeploy = 0x976930;
		constexpr auto OnHolstered = 0x976960;
		constexpr auto ProcessSpectatorViewmodelEvent = 0x977260;
		constexpr auto ctor = 0x977340;
	};

	namespace HeldEntity {
		constexpr auto _punches = 0x168;
		constexpr auto punchAdded = 0x170;
		constexpr auto lastPunchTime = 0x17c;
		constexpr auto worldModelAnimator = 0x180;
		constexpr auto thirdPersonDeploySound = 0x188;
		constexpr auto thirdPersonAimSound = 0x190;
		constexpr auto thirdPersonAimEndSound = 0x198;
		constexpr auto viewModel = 0x1a0;
		constexpr auto isDeployed = 0x1a8;
		constexpr auto nextExamineTime = 0x1ac;
		constexpr auto handBone = 0x1b0;
		constexpr auto HoldAnimationOverride = 0x1b8;
		constexpr auto isBuildingTool = 0x1c0;
		constexpr auto hostileScore = 0x1c4;
		constexpr auto holsterInfo = 0x1c8;
		constexpr auto HeldCameraMode = 0x1d0;
		constexpr auto FirstPersonArmOffset = 0x1d4;
		constexpr auto FirstPersonArmRotation = 0x1e0;
		constexpr auto FirstPersonRotationStrength = 0x1ec;
		constexpr auto ownerItemUID = 0x1f0;

		constexpr auto OnRpcMessage = 0x8b58a0;
		constexpr auto AddPunch = 0x8b4b00;
		constexpr auto CL_Punch = 0x8b4bd0;
		constexpr auto DoRecoilCompensation = 0x479d20;
		constexpr auto GetAddedPunch = 0x8b4f00;
		constexpr auto SimPunches = 0x8b6090;
		constexpr auto ClientInit = 0x8b4c80;
		constexpr auto GetFovOverride = 0x8b4f20;
		constexpr auto DoNetworkDestroy = 0x8b4d50;
		constexpr auto PostLateClientCycle = 0x479d20;
		constexpr auto PostNetworkUpdate = 0x8b5d50;
		constexpr auto UpdateHolsteredOffset = 0x8b6560;
		constexpr auto EditViewAngles = 0x479d20;
		constexpr auto ClampPitch = 0x479d20;
		constexpr auto OnFrame = 0x8b5710;
		constexpr auto OnInput = 0x479d20;
		constexpr auto Examine = 0x8b4d90;
		constexpr auto OnDeploy = 0x8b5450;
		constexpr auto OnDeployed = 0x8b5700;
		constexpr auto OnHolster = 0x8b5730;
		constexpr auto OnHolstered = 0x8b5890;
		constexpr auto OnViewmodelEvent = 0x479d20;
		constexpr auto OnReliableEvent = 0x479d20;
		constexpr auto ModifyCamera = 0x479d20;
		constexpr auto ShouldDestroyImmediately = 0x590d20;
		constexpr auto UpdatePlayerModel = 0x8b6d60;
		constexpr auto ProcessPlayerModel = 0x479d20;
		constexpr auto GetHoldAnimations = 0x8b5110;
		constexpr auto GetMovementMultiplier = 0x5e06d0;
		constexpr auto OnSpawnedForWorkshopPreview = 0x479d20;
		constexpr auto HeldEntityBlocksMovement = 0x59db70;
		constexpr auto ProcessSpectatorViewmodel = 0x479d20;
		constexpr auto ProcessSpectatorViewmodelEvent = 0x8b5fe0;
		constexpr auto get_hostile = 0x8b6f10;
		constexpr auto LightsOn = 0x663bc0;
		constexpr auto IsDeployed = 0x8b53e0;
		constexpr auto GetOwnerPlayer = 0x8b5320;
		constexpr auto GetOwnerConnection = 0x8b5130;
		constexpr auto CanBeUsedInWater = 0x59db70;
		constexpr auto BlocksGestures = 0x59db70;
		constexpr auto GetOwnerItem = 0x8b5240;
		constexpr auto GetItem = 0x8b5120;
		constexpr auto GetOwnerItemDefinition = 0x8b51c0;
		constexpr auto IsInstrument = 0x59db70;
		constexpr auto Load = 0x8b53f0;
		constexpr auto ctor = 0x8b6e20;
		constexpr auto cctor = 0x8b6de0;
	};

	namespace UnityEngine_GUIContent {
		constexpr auto m_Text = 0x10;
		constexpr auto m_Image = 0x18;
		constexpr auto m_Tooltip = 0x20;
		constexpr auto s_Image = 0x8;
		constexpr auto s_TextImage = 0x10;
		constexpr auto none = 0x18;

		constexpr auto get_text = 0x1a6a640;
		constexpr auto set_text = 0x5d8160;
		constexpr auto set_image = 0x5e86a0;
		constexpr auto get_tooltip = 0x1cd8a90;
		constexpr auto set_tooltip = 0x5be2d0;
		constexpr auto ctor = 0x1cd8a00;
		constexpr auto Temp = 0x1cd82e0;
		constexpr auto ClearStaticCache = 0x1cd8180;
		constexpr auto cctor = 0x1cd85b0;
	};

	namespace BaseCombatEntity {
		constexpr auto __menuOption_Menu_Pickup = 0x168;
		constexpr auto skeletonProperties = 0x1c0;
		constexpr auto baseProtection = 0x1c8;
		constexpr auto startHealth = 0x1d0;
		constexpr auto pickup = 0x1d8;
		constexpr auto repair = 0x1f8;
		constexpr auto ShowHealthInfo = 0x220;
		constexpr auto lifestate = 0x224;
		constexpr auto sendsHitNotification = 0x228;
		constexpr auto sendsMeleeHitNotification = 0x229;
		constexpr auto markAttackerHostile = 0x22a;
		constexpr auto _health = 0x22c;
		constexpr auto _maxHealth = 0x230;
		constexpr auto faction = 0x234;
		constexpr auto deathTime = 0x238;
		constexpr auto lastNotifyFrame = 0x23c;

		constexpr auto GetMenuOptions = 0xc6f400;
		constexpr auto get_HasMenuOptions = 0xc705f0;
		constexpr auto OnRpcMessage = 0xc6fb40;
		constexpr auto HitNotify = 0xc6f760;
		constexpr auto ClientInit = 0xc6ee10;
		constexpr auto DisplayHealthInfo = 0x70a700;
		constexpr auto GetEyeTransform = 0xc6f2e0;
		constexpr auto OnLifeStateChanged = 0xc6fb10;
		constexpr auto GetPickupCount = 0xc6f740;
		constexpr auto CanPickup = 0xc6ed70;
		constexpr auto OnPickedUp = 0x479d20;
		constexpr auto OnPickedUpPreItemMove = 0x479d20;
		constexpr auto Menu_Pickup = 0xc6f9e0;
		constexpr auto Menu_Pickup_TimeStart = 0x479d20;
		constexpr auto Menu_Pickup_If = 0xc6f9c0;
		constexpr auto BuildCost = 0xc6eca0;
		constexpr auto IsDead = 0xc6f910;
		constexpr auto IsAlive = 0xc6f900;
		constexpr auto GetFaction = 0xc6f3f0;
		constexpr auto IsFriendly = 0x59db70;
		constexpr auto get_SecondsSinceDeath = 0xc706b0;
		constexpr auto get_healthFraction = 0xc706d0;
		constexpr auto ResetState = 0xc70180;
		constexpr auto DestroyShared = 0xc6eef0;
		constexpr auto GetThreatLevel = 0x664f00;
		constexpr auto PenetrationResistance = 0xc700f0;
		constexpr auto ScaleDamage = 0xc70280;
		constexpr auto SkeletonLookup = 0xc703c0;
		constexpr auto Load = 0xc6f920;
		constexpr auto get_health = 0xc6f750;
		constexpr auto set_health = 0xc70720;
		constexpr auto Health = 0xc6f750;
		constexpr auto MaxHealth = 0x593df0;
		constexpr auto StartHealth = 0x593ed0;
		constexpr auto StartMaxHealth = 0xc70470;
		constexpr auto SetMaxHealth = 0xc70330;
		constexpr auto DoHitNotify = 0xc6ef10;
		constexpr auto OnAttacked = 0xc6fa20;
		constexpr auto ctor = 0xc70490;
	};

	namespace InputState {
		constexpr auto current = 0x10;
		constexpr auto previous = 0x18;
		constexpr auto SwallowedButtons = 0x20;

		constexpr auto IsDown = 0x5ec630;
		constexpr auto WasDown = 0x5ec700;
		constexpr auto IsAnyDown = 0x5ec600;
		constexpr auto WasJustPressed = 0x5ec720;
		constexpr auto WasJustReleased = 0x5ec760;
		constexpr auto SwallowButton = 0x5ec6f0;
		constexpr auto AimAngle = 0x5ec3c0;
		constexpr auto MouseDelta = 0x5ec660;
		constexpr auto Flip = 0x5ec530;
		constexpr auto Clear = 0x5ec480;
		constexpr auto ctor = 0x5ec7a0;
	};

	namespace InputMessage {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto buttons = 0x14;
		constexpr auto aimAngles = 0x18;
		constexpr auto mouseDelta = 0x24;

		constexpr auto ResetToPool = 0x22ed2a0;
		constexpr auto Dispose = 0x22ecfa0;
		constexpr auto EnterPool = 0xf077f0;
		constexpr auto LeavePool = 0xf07820;
		constexpr auto CopyTo = 0x22ec000;
		constexpr auto Copy = 0x22ec040;
		constexpr auto Deserialize = 0x22ec6d0;
		constexpr auto DeserializeLengthDelimited = 0x22ec360;
		constexpr auto DeserializeLength = 0x22ec3e0;
		constexpr auto FromProto = 0x22ed020;
		constexpr auto WriteToStream = 0x22edb70;
		constexpr auto WriteToStreamDelta = 0x22edb90;
		constexpr auto ReadFromStream = 0x22ed1e0;
		constexpr auto SerializeDelta = 0x22ed340;
		constexpr auto Serialize = 0x22ed900;
		constexpr auto ToProtoBytes = 0x22edb60;
		constexpr auto ToProto = 0x22edb70;
		constexpr auto SerializeToBytes = 0x22ed7f0;
		constexpr auto SerializeLengthDelimited = 0x22ed740;
		constexpr auto ctor = 0xf08180;
	};

	namespace BaseMountable {
		constexpr auto __menuOption_Menu_Mount = 0x240;
		constexpr auto eyePositionOverride = 0x298;
		constexpr auto eyeCenterOverride = 0x2a0;
		constexpr auto pitchClamp = 0x2a8;
		constexpr auto yawClamp = 0x2b0;
		constexpr auto canWieldItems = 0x2b8;
		constexpr auto relativeViewAngles = 0x2b9;
		constexpr auto mountAnchor = 0x2c0;
		constexpr auto mountPose = 0x2c8;
		constexpr auto maxMountDistance = 0x2cc;
		constexpr auto dismountPositions = 0x2d0;
		constexpr auto checkPlayerLosOnMount = 0x2d8;
		constexpr auto disableMeshCullingForPlayers = 0x2d9;
		constexpr auto allowHeadLook = 0x2da;
		constexpr auto ignoreVehicleParent = 0x2db;
		constexpr auto modifiesPlayerCollider = 0x2dc;
		constexpr auto customPlayerCollider = 0x2e0;
		constexpr auto mountSoundDef = 0x2f8;
		constexpr auto swapSoundDef = 0x300;
		constexpr auto dismountSoundDef = 0x308;
		constexpr auto mountTimeStatType = 0x310;
		constexpr auto allowedGestures = 0x314;
		constexpr auto canDrinkWhileMounted = 0x318;
		constexpr auto allowSleeperMounting = 0x319;
		constexpr auto animateClothInLocalSpace = 0x31a;
		constexpr auto MountedCameraMode = 0x31c;
		constexpr auto isMobile = 0x320;
		constexpr auto SideLeanAmount = 0x324;

		constexpr auto GetMenuOptions = 0x89d700;
		constexpr auto get_HasMenuOptions = 0x89fe80;
		constexpr auto OnRpcMessage = 0x89e680;
		constexpr auto CanHoldItems = 0x89c830;
		constexpr auto GetMountedCameraMode = 0x89da60;
		constexpr auto DirectlyMountable = 0x590d20;
		constexpr auto GetEyeOverride = 0x89d670;
		constexpr auto GetMountedBodyAngles = 0x89da10;
		constexpr auto ModifiesThirdPersonCamera = 0x59db70;
		constexpr auto GetPitchClamp = 0x609b60;
		constexpr auto GetYawClamp = 0x609b80;
		constexpr auto AnyMounted = 0x89c820;
		constexpr auto EyePositionForPlayer = 0x89cfa0;
		constexpr auto EyeCenterForPlayer = 0x89cea0;
		constexpr auto WaterFactorForPlayer = 0x89fcb0;
		constexpr auto MaxVelocity = 0x89df50;
		constexpr auto PlayerIsMounted = 0x89ec80;
		constexpr auto OnClientInput = 0x479d20;
		constexpr auto ForceUpdatePlayerModel = 0x59db70;
		constexpr auto UpdatePlayerModel = 0x89f180;
		constexpr auto ProcessPlayerModel = 0x479d20;
		constexpr auto SuppressHandsAnimationLayer = 0x59db70;
		constexpr auto GetAnimationOverride = 0x592640;
		constexpr auto GetSpineLookAtWeight = 0x5e06d0;
		constexpr auto GetMountedAnimationSpeed = 0x664f00;
		constexpr auto get_DisableLegsMeshAtExtremeViewAnglesInFirstPersonWithEyes = 0x590d20;
		constexpr auto get_FirstPersonWithArmsEyesLerp = 0x5a2bf0;
		constexpr auto ModifyThirdPersonEyeOffset = 0x89e110;
		constexpr auto LockThirdPersonOffset = 0x89dee0;
		constexpr auto LocalPlayerIsMounted = 0x89de20;
		constexpr auto VehicleParent = 0x89fc10;
		constexpr auto HasValidDismountPosition = 0x89dc40;
		constexpr auto ValidDismountPosition = 0x89f620;
		constexpr auto get_IsSummerDlcVehicle = 0x59db70;
		constexpr auto IsInstrument = 0x59db70;
		constexpr auto GetDismountCheckStart = 0x89d310;
		constexpr auto GetMountedPosition = 0x89da70;
		constexpr auto PostLateUpdatePlayer = 0x479d20;
		constexpr auto UpdatePlayerRotation = 0x89f570;
		constexpr auto SetNetworkPosition = 0x89f150;
		constexpr auto UpdatePlayerPosition = 0x89f4a0;
		constexpr auto GetMountedRotation = 0x89db30;
		constexpr auto PlayerMounted = 0x89ed20;
		constexpr auto PlayerDismounted = 0x89e7a0;
		constexpr auto ClientOnPlayerDismounted = 0x89c840;
		constexpr auto ClientOnPlayerMounted = 0x89c8e0;
		constexpr auto OverrideViewAngles = 0x89e770;
		constexpr auto DoPlayerMovement = 0x89cac0;
		constexpr auto HoldToDismount = 0x89dda0;
		constexpr auto ClientRequestDismount = 0x89c9b0;
		constexpr auto Menu_Mount = 0x89e0a0;
		constexpr auto Menu_Mount_ShowIf = 0x89e000;
		constexpr auto MountMenuVisible = 0x89e130;
		constexpr auto NearMountPoint = 0x89e1e0;
		constexpr auto ConvertVector = 0x89c9f0;
		constexpr auto get_BlocksDoors = 0x590d20;
		constexpr auto ctor = 0x89fdd0;
		constexpr auto cctor = 0x89fd60;
		constexpr auto DoPlayerMovementb__85_0 = 0x89c9b0;
	};

	namespace TOD_Sky {
		constexpr auto ColorSpace = 0x18;
		constexpr auto ColorRange = 0x1c;
		constexpr auto ColorOutput = 0x20;
		constexpr auto SkyQuality = 0x24;
		constexpr auto CloudQuality = 0x28;
		constexpr auto MeshQuality = 0x2c;
		constexpr auto StarQuality = 0x30;
		constexpr auto Cycle = 0x38;
		constexpr auto World = 0x40;
		constexpr auto Atmosphere = 0x48;
		constexpr auto Day = 0x50;
		constexpr auto Night = 0x58;
		constexpr auto Sun = 0x60;
		constexpr auto Moon = 0x68;
		constexpr auto Stars = 0x70;
		constexpr auto Clouds = 0x78;
		constexpr auto Light = 0x80;
		constexpr auto Fog = 0x88;
		constexpr auto Ambient = 0x90;
		constexpr auto Reflection = 0x98;
		constexpr auto Initializedk__BackingField = 0xa0;
		constexpr auto Componentsk__BackingField = 0xa8;
		constexpr auto Resourcesk__BackingField = 0xb0;
		constexpr auto IsDayk__BackingField = 0xb8;
		constexpr auto IsNightk__BackingField = 0xb9;
		constexpr auto LerpValuek__BackingField = 0xbc;
		constexpr auto SunZenithk__BackingField = 0xc0;
		constexpr auto SunAltitudek__BackingField = 0xc4;
		constexpr auto SunAzimuthk__BackingField = 0xc8;
		constexpr auto MoonZenithk__BackingField = 0xcc;
		constexpr auto MoonAltitudek__BackingField = 0xd0;
		constexpr auto MoonAzimuthk__BackingField = 0xd4;
		constexpr auto SunsetTimek__BackingField = 0xd8;
		constexpr auto SunriseTimek__BackingField = 0xdc;
		constexpr auto LocalSiderealTimek__BackingField = 0xe0;
		constexpr auto SunVisibilityk__BackingField = 0xe4;
		constexpr auto MoonVisibilityk__BackingField = 0xe8;
		constexpr auto SunDirectionk__BackingField = 0xec;
		constexpr auto MoonDirectionk__BackingField = 0xf8;
		constexpr auto LightDirectionk__BackingField = 0x104;
		constexpr auto LocalSunDirectionk__BackingField = 0x110;
		constexpr auto LocalMoonDirectionk__BackingField = 0x11c;
		constexpr auto LocalLightDirectionk__BackingField = 0x128;
		constexpr auto SunLightColork__BackingField = 0x134;
		constexpr auto MoonLightColork__BackingField = 0x144;
		constexpr auto SunRayColork__BackingField = 0x154;
		constexpr auto MoonRayColork__BackingField = 0x164;
		constexpr auto SunSkyColork__BackingField = 0x174;
		constexpr auto MoonSkyColork__BackingField = 0x184;
		constexpr auto SunMeshColork__BackingField = 0x194;
		constexpr auto MoonMeshColork__BackingField = 0x1a4;
		constexpr auto SunCloudColork__BackingField = 0x1b4;
		constexpr auto MoonCloudColork__BackingField = 0x1c4;
		constexpr auto FogColork__BackingField = 0x1d4;
		constexpr auto GroundColork__BackingField = 0x1e4;
		constexpr auto AmbientColork__BackingField = 0x1f4;
		constexpr auto MoonHaloColork__BackingField = 0x204;
		constexpr auto ReflectionCur = 0x218;
		constexpr auto ReflectionSrc = 0x220;
		constexpr auto ReflectionDst = 0x228;
		constexpr auto ReflectionUpdateSpeed = 0x8;
		constexpr auto ReflectionResolution = 0xc;
		constexpr auto ReflectionUpdateInterval = 0x10;
		constexpr auto ReflectionTimeSlicing = 0x14;
		constexpr auto timeSinceLightUpdate = 0x230;
		constexpr auto timeSinceAmbientUpdate = 0x234;
		constexpr auto timeSinceReflectionUpdate = 0x238;
		constexpr auto kBetaMie = 0x23c;
		constexpr auto kSun = 0x248;
		constexpr auto k4PI = 0x258;
		constexpr auto kRadius = 0x268;
		constexpr auto kScale = 0x278;

		constexpr auto get_Instances = 0x134fe80;
		constexpr auto get_Instance = 0x134fdb0;
		constexpr auto get_Initialized = 0xcc94f0;
		constexpr auto set_Initialized = 0xcc99d0;
		constexpr auto get_Headless = 0x134fd90;
		constexpr auto get_Components = 0xcabb40;
		constexpr auto set_Components = 0xe39cb0;
		constexpr auto get_Resources = 0xa7dda0;
		constexpr auto set_Resources = 0xc65b70;
		constexpr auto get_IsDay = 0x134fee0;
		constexpr auto set_IsDay = 0x13502b0;
		constexpr auto get_IsNight = 0x134fef0;
		constexpr auto set_IsNight = 0x13502c0;
		constexpr auto get_Radius = 0x1350190;
		constexpr auto get_Diameter = 0x134fd30;
		constexpr auto get_LerpValue = 0xd67c90;
		constexpr auto set_LerpValue = 0xd67e40;
		constexpr auto get_SunZenith = 0x1350250;
		constexpr auto set_SunZenith = 0x13504c0;
		constexpr auto get_SunAltitude = 0x13501d0;
		constexpr auto set_SunAltitude = 0x1350420;
		constexpr auto get_SunAzimuth = 0x13501e0;
		constexpr auto set_SunAzimuth = 0x1350430;
		constexpr auto get_MoonZenith = 0x1350140;
		constexpr auto set_MoonZenith = 0x1350410;
		constexpr auto get_MoonAltitude = 0x1350090;
		constexpr auto set_MoonAltitude = 0x1350360;
		constexpr auto get_MoonAzimuth = 0x13500a0;
		constexpr auto set_MoonAzimuth = 0x1350370;
		constexpr auto get_SunsetTime = 0x1350270;
		constexpr auto set_SunsetTime = 0x13504e0;
		constexpr auto get_SunriseTime = 0x1350260;
		constexpr auto set_SunriseTime = 0x13504d0;
		constexpr auto get_LocalSiderealTime = 0x1350060;
		constexpr auto set_LocalSiderealTime = 0x1350330;
		constexpr auto get_LightZenith = 0x134ffa0;
		constexpr auto get_LightIntensity = 0x134ff70;
		constexpr auto get_SunVisibility = 0x1350240;
		constexpr auto set_SunVisibility = 0x13504b0;
		constexpr auto get_MoonVisibility = 0x1350130;
		constexpr auto set_MoonVisibility = 0x1350400;
		constexpr auto get_SunDirection = 0x13501f0;
		constexpr auto set_SunDirection = 0x1350450;
		constexpr auto get_MoonDirection = 0x13500c0;
		constexpr auto set_MoonDirection = 0x1350390;
		constexpr auto get_LightDirection = 0x134ff50;
		constexpr auto set_LightDirection = 0x13502d0;
		constexpr auto get_LocalSunDirection = 0x1350070;
		constexpr auto set_LocalSunDirection = 0x1350340;
		constexpr auto get_LocalMoonDirection = 0x1350040;
		constexpr auto set_LocalMoonDirection = 0x1350310;
		constexpr auto get_LocalLightDirection = 0x1350020;
		constexpr auto set_LocalLightDirection = 0x13502f0;
		constexpr auto get_SunLightColor = 0x1350210;
		constexpr auto set_SunLightColor = 0x1350470;
		constexpr auto get_MoonLightColor = 0x13500f0;
		constexpr auto set_MoonLightColor = 0x13503c0;
		constexpr auto get_LightColor = 0x134ff00;
		constexpr auto get_SunRayColor = 0x1350230;
		constexpr auto set_SunRayColor = 0x1350490;
		constexpr auto get_MoonRayColor = 0x1350110;
		constexpr auto set_MoonRayColor = 0x13503e0;
		constexpr auto get_SunSkyColor = 0x1087120;
		constexpr auto set_SunSkyColor = 0x13504a0;
		constexpr auto get_MoonSkyColor = 0x1350120;
		constexpr auto set_MoonSkyColor = 0x13503f0;
		constexpr auto get_SunMeshColor = 0x1350220;
		constexpr auto set_SunMeshColor = 0x1350480;
		constexpr auto get_MoonMeshColor = 0x1350100;
		constexpr auto set_MoonMeshColor = 0x13503d0;
		constexpr auto get_SunCloudColor = 0xe49380;
		constexpr auto set_SunCloudColor = 0x1350440;
		constexpr auto get_MoonCloudColor = 0x13500b0;
		constexpr auto set_MoonCloudColor = 0x1350380;
		constexpr auto get_FogColor = 0x134fd70;
		constexpr auto set_FogColor = 0x1350290;
		constexpr auto get_GroundColor = 0x134fd80;
		constexpr auto set_GroundColor = 0x13502a0;
		constexpr auto get_AmbientColor = 0x134fd20;
		constexpr auto set_AmbientColor = 0x1350280;
		constexpr auto get_MoonHaloColor = 0x13500e0;
		constexpr auto set_MoonHaloColor = 0x13503b0;
		constexpr auto get_Probe = 0x1350170;
		constexpr auto get_ProbeInstance = 0x1350150;
		constexpr auto OrbitalToUnity = 0x13487c0;
		constexpr auto OrbitalToLocal = 0x1348700;
		constexpr auto SampleAtmosphere = 0x13497d0;
		constexpr auto RenderToSphericalHarmonics = 0x1349670;
		constexpr auto RenderToCubemap = 0x13488d0;
		constexpr auto RenderToProbe = 0x1348a10;
		constexpr auto ReflectionIsUpdating = 0x1348890;
		constexpr auto UpdateProbeBlending = 0x134d830;
		constexpr auto UpdateProbeProperties = 0x134d920;
		constexpr auto SampleFogColor = 0x1349b50;
		constexpr auto SampleSkyColor = 0x1349e00;
		constexpr auto SampleEquatorColor = 0x1349a90;
		constexpr auto UpdateFog = 0x134d7b0;
		constexpr auto UpdateAmbient = 0x134b410;
		constexpr auto UpdateReflection = 0x134e350;
		constexpr auto DelayReflectionUpdate = 0x1347f90;
		constexpr auto LoadParameters = 0x1348380;
		constexpr auto SaveParameters = 0x1349f10;
		constexpr auto UpdateQualitySettings = 0x134dd40;
		constexpr auto UpdateRenderSettings = 0x134e450;
		constexpr auto UpdateShaderKeywords = 0x134ea20;
		constexpr auto UpdateShaderProperties = 0x134ec80;
		constexpr auto ShaderScale = 0x134a570;
		constexpr auto ShaderMiePhase = 0x134a250;
		constexpr auto ShaderRayleighPhase = 0x134a550;
		constexpr auto ShaderNightSkyColor = 0x134a460;
		constexpr auto ShaderMoonHaloColor = 0x134a320;
		constexpr auto TOD_HDR2LDR = 0x134b1c0;
		constexpr auto TOD_GAMMA2LINEAR = 0x134b160;
		constexpr auto TOD_LINEAR2GAMMA = 0x134b340;
		constexpr auto ShaderScatteringColor = 0x134a620;
		constexpr auto Initialize = 0x1347fa0;
		constexpr auto Cleanup = 0x1347e70;
		constexpr auto OnEnable = 0x13486b0;
		constexpr auto OnDisable = 0x1347e70;
		constexpr auto LateUpdate = 0x13480a0;
		constexpr auto OnValidate = 0x13486c0;
		constexpr auto UpdateScattering = 0x134e870;
		constexpr auto UpdateCelestials = 0x134b8b0;
		constexpr auto ctor = 0x134fc10;
		constexpr auto cctor = 0x134fb50;
	};

	namespace UnityEngine_Random {

		constexpr auto InitState = 0x1b821d0;
		constexpr auto get_state = 0x1b824a0;
		constexpr auto set_state = 0x1b82550;
		constexpr auto Range = 0x1b82250;
		constexpr auto RandomRangeInt = 0x1b82210;
		constexpr auto get_value = 0x1b824e0;
		constexpr auto get_insideUnitSphere = 0x1b82320;
		constexpr auto GetRandomUnitCircle = 0x1b82190;
		constexpr auto get_insideUnitCircle = 0x1b822a0;
		constexpr auto get_onUnitSphere = 0x1b823a0;
		constexpr auto get_rotation = 0x1b82420;
		constexpr auto RandomRange = 0x1b82210;
		constexpr auto ColorHSV = 0x1b81fd0;
		constexpr auto get_state_Injected = 0x1b82460;
		constexpr auto set_state_Injected = 0x1b82510;
		constexpr auto get_insideUnitSphere_Injected = 0x1b822e0;
		constexpr auto get_onUnitSphere_Injected = 0x1b82360;
		constexpr auto get_rotation_Injected = 0x1b823e0;
	};

	namespace UnityEngine_PhysicsScene {
		constexpr auto m_Handle = 0x10;

		constexpr auto ToString = 0x32d8d0;
		constexpr auto GetHashCode = 0x14f530;
		constexpr auto Equals = 0x32d390;
		constexpr auto Raycast = 0x32d660;
		constexpr auto Internal_RaycastTest = 0x253c1c0;
		constexpr auto Internal_Raycast = 0x253c2a0;
		constexpr auto Internal_RaycastNonAlloc = 0x253c0e0;
		constexpr auto Query_CapsuleCast = 0x253c9d0;
		constexpr auto Internal_CapsuleCast = 0x253bec0;
		constexpr auto CapsuleCast = 0x32d2e0;
		constexpr auto Internal_CapsuleCastNonAlloc = 0x253be20;
		constexpr auto OverlapCapsuleNonAlloc_Internal = 0x253c6f0;
		constexpr auto OverlapCapsule = 0x32d4c0;
		constexpr auto Query_SphereCast = 0x253cae0;
		constexpr auto Internal_SphereCast = 0x253c410;
		constexpr auto SphereCast = 0x32d750;
		constexpr auto Internal_SphereCastNonAlloc = 0x253c380;
		constexpr auto OverlapSphereNonAlloc_Internal = 0x253c7e0;
		constexpr auto OverlapSphere = 0x32d560;
		constexpr auto Query_BoxCast = 0x253c8c0;
		constexpr auto Internal_BoxCast = 0x253bbf0;
		constexpr auto BoxCast = 0x32d0f0;
		constexpr auto OverlapBoxNonAlloc_Internal = 0x253c600;
		constexpr auto OverlapBox = 0x32d410;
		constexpr auto Internal_RaycastTest_Injected = 0x253c150;
		constexpr auto Internal_Raycast_Injected = 0x253c230;
		constexpr auto Internal_RaycastNonAlloc_Injected = 0x253c070;
		constexpr auto Query_CapsuleCast_Injected = 0x253c960;
		constexpr auto Internal_CapsuleCastNonAlloc_Injected = 0x253bdb0;
		constexpr auto OverlapCapsuleNonAlloc_Internal_Injected = 0x253c680;
		constexpr auto Query_SphereCast_Injected = 0x253ca70;
		constexpr auto Internal_SphereCastNonAlloc_Injected = 0x253c310;
		constexpr auto OverlapSphereNonAlloc_Internal_Injected = 0x253c770;
		constexpr auto Query_BoxCast_Injected = 0x253c850;
		constexpr auto OverlapBoxNonAlloc_Internal_Injected = 0x253c590;
	};

	namespace UnityEngine_GameObjectEx {

		constexpr auto ToBaseEntity = 0x717840;
		constexpr auto IsOnLayer = 0x7176f0;
		constexpr auto GetEntityFromRegistry = 0x7175c0;
		constexpr auto GetEntityFromComponent = 0x7174c0;
		constexpr auto SetHierarchyGroup = 0x717780;
	};

	namespace BaseHelicopter {
		constexpr auto weakspots = 0x240;
		constexpr auto rotorPivot = 0x248;
		constexpr auto mainRotor = 0x250;
		constexpr auto mainRotor_blades = 0x258;
		constexpr auto mainRotor_blur = 0x260;
		constexpr auto tailRotor = 0x268;
		constexpr auto tailRotor_blades = 0x270;
		constexpr auto tailRotor_blur = 0x278;
		constexpr auto rocket_tube_left = 0x280;
		constexpr auto rocket_tube_right = 0x288;
		constexpr auto left_gun_yaw = 0x290;
		constexpr auto left_gun_pitch = 0x298;
		constexpr auto left_gun_muzzle = 0x2a0;
		constexpr auto right_gun_yaw = 0x2a8;
		constexpr auto right_gun_pitch = 0x2b0;
		constexpr auto right_gun_muzzle = 0x2b8;
		constexpr auto spotlight_rotation = 0x2c0;
		constexpr auto rocket_fire_effect = 0x2c8;
		constexpr auto gun_fire_effect = 0x2d0;
		constexpr auto bulletEffect = 0x2d8;
		constexpr auto explosionEffect = 0x2e0;
		constexpr auto fireBall = 0x2e8;
		constexpr auto crateToDrop = 0x2f0;
		constexpr auto maxCratesToSpawn = 0x2f8;
		constexpr auto bulletSpeed = 0x2fc;
		constexpr auto bulletDamage = 0x300;
		constexpr auto servergibs = 0x308;
		constexpr auto debrisFieldMarker = 0x310;
		constexpr auto rotorWashSoundDef = 0x318;
		constexpr auto _rotorWashSound = 0x320;
		constexpr auto flightEngineSoundDef = 0x328;
		constexpr auto flightThwopsSoundDef = 0x330;
		constexpr auto flightEngineSound = 0x338;
		constexpr auto flightThwopsSound = 0x340;
		constexpr auto flightEngineGainMod = 0x348;
		constexpr auto flightThwopsGainMod = 0x350;
		constexpr auto rotorGainModSmoothing = 0x358;
		constexpr auto engineGainMin = 0x35c;
		constexpr auto engineGainMax = 0x360;
		constexpr auto thwopGainMin = 0x364;
		constexpr auto thwopGainMax = 0x368;
		constexpr auto spotlightJitterAmount = 0x36c;
		constexpr auto spotlightJitterSpeed = 0x370;
		constexpr auto nightLights = 0x378;
		constexpr auto spotlightTarget = 0x380;
		constexpr auto engineSpeed = 0x38c;
		constexpr auto targetEngineSpeed = 0x390;
		constexpr auto blur_rotationScale = 0x394;
		constexpr auto _rotorWashParticles = 0x398;
		constexpr auto myAI = 0x3a0;
		constexpr auto mapMarkerEntityPrefab = 0x3a8;
		constexpr auto client_rotorPivotIdeal = 0x3b0;
		constexpr auto nightLightsOn = 0x3c0;

		constexpr auto OnRpcMessage = 0x893030;
		constexpr auto InitalizeWeakspots = 0x892a90;
		constexpr auto MaxVelocity = 0x5b2740;
		constexpr auto InitShared = 0x892a00;
		constexpr auto Load = 0x892d70;
		constexpr auto ClientInit = 0x892420;
		constexpr auto InitializeClientsideEffects = 0x892b10;
		constexpr auto DoClientDestroy = 0x892440;
		constexpr auto SetLights = 0x893480;
		constexpr auto Update = 0x893ef0;
		constexpr auto UpdateEffects = 0x8935a0;
		constexpr auto UpdateRotorWashPosition = 0x893db0;
		constexpr auto ToggleRotorWash = 0x893520;
		constexpr auto UpdateRotorVisibility = 0x893d20;
		constexpr auto FireGun = 0x892520;
		constexpr auto ctor = 0x894650;
	};

	namespace HitInfo {
		constexpr auto Initiator = 0x10;
		constexpr auto WeaponPrefab = 0x18;
		constexpr auto Weapon = 0x20;
		constexpr auto DoHitEffects = 0x28;
		constexpr auto DoDecals = 0x29;
		constexpr auto IsPredicting = 0x2a;
		constexpr auto UseProtection = 0x2b;
		constexpr auto Predicted = 0x30;
		constexpr auto DidHit = 0x38;
		constexpr auto HitEntity = 0x40;
		constexpr auto HitBone = 0x48;
		constexpr auto HitPart = 0x4c;
		constexpr auto HitMaterial = 0x50;
		constexpr auto HitPositionWorld = 0x54;
		constexpr auto HitPositionLocal = 0x60;
		constexpr auto HitNormalWorld = 0x6c;
		constexpr auto HitNormalLocal = 0x78;
		constexpr auto PointStart = 0x84;
		constexpr auto PointEnd = 0x90;
		constexpr auto ProjectileID = 0x9c;
		constexpr auto ProjectileHits = 0xa0;
		constexpr auto ProjectileDistance = 0xa4;
		constexpr auto ProjectileIntegrity = 0xa8;
		constexpr auto ProjectileTravelTime = 0xac;
		constexpr auto ProjectileTrajectoryMismatch = 0xb0;
		constexpr auto ProjectileVelocity = 0xb4;
		constexpr auto ProjectilePrefab = 0xc0;
		constexpr auto material = 0xc8;
		constexpr auto damageProperties = 0xd0;
		constexpr auto damageTypes = 0xd8;
		constexpr auto CanGather = 0xe0;
		constexpr auto DidGather = 0xe1;
		constexpr auto gatherScale = 0xe4;

		constexpr auto IsProjectile = 0x8b9620;
		constexpr auto get_InitiatorPlayer = 0x8b9e70;
		constexpr auto get_attackNormal = 0x8b9f00;
		constexpr auto get_hasDamage = 0x8ba400;
		constexpr auto ctor = 0x8b9c90;
		constexpr auto LoadFromAttack = 0x8b9630;
		constexpr auto get_isHeadshot = 0x8ba430;
		constexpr auto get_bonePhrase = 0x8ba2a0;
		constexpr auto get_boneName = 0x8ba110;
		constexpr auto get_boneArea = 0x8ba000;
		constexpr auto PositionOnRay = 0x8b9830;
		constexpr auto HitPositionOnRay = 0x8b93f0;
		constexpr auto IsNaNOrInfinity = 0x8b9440;
	};

	namespace System_Number {

		constexpr auto NumberBufferToDecimal = 0x1869760;
		constexpr auto NumberBufferToDouble = 0x1869770;
		constexpr auto FormatDecimal = 0x1868c80;
		constexpr auto FormatDouble = 0x1868da0;
		constexpr auto FormatInt32 = 0x1868e20;
		constexpr auto FormatUInt32 = 0x1869180;
		constexpr auto FormatInt64 = 0x1868f90;
		constexpr auto FormatUInt64 = 0x18692e0;
		constexpr auto FormatSingle = 0x1869100;
		constexpr auto HexNumberToInt32 = 0x1869440;
		constexpr auto HexNumberToInt64 = 0x18694c0;
		constexpr auto HexNumberToUInt32 = 0x1869580;
		constexpr auto HexNumberToUInt64 = 0x1869600;
		constexpr auto IsWhite = 0x1869690;
		constexpr auto NumberToInt32 = 0x1869780;
		constexpr auto NumberToInt64 = 0x18697e0;
		constexpr auto NumberToUInt32 = 0x1869860;
		constexpr auto NumberToUInt64 = 0x18698c0;
		constexpr auto MatchChars = 0x18696f0;
		constexpr auto ParseDecimal = 0x1869930;
		constexpr auto ParseDouble = 0x1869aa0;
		constexpr auto ParseInt32 = 0x1869d50;
		constexpr auto ParseInt64 = 0x1869fa0;
		constexpr auto ParseNumber = 0x186a210;
		constexpr auto ParseSingle = 0x186ad00;
		constexpr auto ParseUInt32 = 0x186b020;
		constexpr auto ParseUInt64 = 0x186b260;
		constexpr auto StringToNumber = 0x186b4c0;
		constexpr auto TrailingZeros = 0x186b600;
		constexpr auto TryParseDecimal = 0x186b660;
		constexpr auto TryParseDouble = 0x186b7e0;
		constexpr auto TryParseInt32 = 0x186b960;
		constexpr auto TryParseInt64 = 0x186bba0;
		constexpr auto TryParseSingle = 0x186bd70;
		constexpr auto TryParseUInt32 = 0x186bf20;
		constexpr auto TryParseUInt64 = 0x186c160;
		constexpr auto TryStringToNumber = 0x186c480;
	};

	namespace System_Globalization_NumberFormatInfo {
		constexpr auto numberGroupSizes = 0x10;
		constexpr auto currencyGroupSizes = 0x18;
		constexpr auto percentGroupSizes = 0x20;
		constexpr auto positiveSign = 0x28;
		constexpr auto negativeSign = 0x30;
		constexpr auto numberDecimalSeparator = 0x38;
		constexpr auto numberGroupSeparator = 0x40;
		constexpr auto currencyGroupSeparator = 0x48;
		constexpr auto currencyDecimalSeparator = 0x50;
		constexpr auto currencySymbol = 0x58;
		constexpr auto ansiCurrencySymbol = 0x60;
		constexpr auto nanSymbol = 0x68;
		constexpr auto positiveInfinitySymbol = 0x70;
		constexpr auto negativeInfinitySymbol = 0x78;
		constexpr auto percentDecimalSeparator = 0x80;
		constexpr auto percentGroupSeparator = 0x88;
		constexpr auto percentSymbol = 0x90;
		constexpr auto perMilleSymbol = 0x98;
		constexpr auto nativeDigits = 0xa0;
		constexpr auto m_dataItem = 0xa8;
		constexpr auto numberDecimalDigits = 0xac;
		constexpr auto currencyDecimalDigits = 0xb0;
		constexpr auto currencyPositivePattern = 0xb4;
		constexpr auto currencyNegativePattern = 0xb8;
		constexpr auto numberNegativePattern = 0xbc;
		constexpr auto percentPositivePattern = 0xc0;
		constexpr auto percentNegativePattern = 0xc4;
		constexpr auto percentDecimalDigits = 0xc8;
		constexpr auto digitSubstitution = 0xcc;
		constexpr auto isReadOnly = 0xd0;
		constexpr auto m_useUserOverride = 0xd1;
		constexpr auto m_isInvariant = 0xd2;
		constexpr auto validForParseAsNumber = 0xd3;
		constexpr auto validForParseAsCurrency = 0xd4;

		constexpr auto ctor = 0x15405a0;
		constexpr auto OnSerializing = 0x153fc00;
		constexpr auto OnDeserializing = 0x479d20;
		constexpr auto OnDeserialized = 0x479d20;
		constexpr auto get_InvariantInfo = 0x1540730;
		constexpr auto GetInstance = 0x153f980;
		constexpr auto Clone = 0x153f880;
		constexpr auto get_CurrencyDecimalDigits = 0x4a0840;
		constexpr auto get_CurrencyDecimalSeparator = 0x5d0840;
		constexpr auto get_IsReadOnly = 0xc65b30;
		constexpr auto get_CurrencyGroupSizes = 0x15405b0;
		constexpr auto get_NumberGroupSizes = 0x1540840;
		constexpr auto get_PercentGroupSizes = 0x15408c0;
		constexpr auto get_CurrencyGroupSeparator = 0x851030;
		constexpr auto get_CurrencySymbol = 0x5d0830;
		constexpr auto get_CurrentInfo = 0x1540630;
		constexpr auto get_NaNSymbol = 0x669290;
		constexpr auto get_CurrencyNegativePattern = 0x8a02e0;
		constexpr auto get_NumberNegativePattern = 0x8a02c0;
		constexpr auto get_PercentPositivePattern = 0x13470e0;
		constexpr auto get_PercentNegativePattern = 0xbb9940;
		constexpr auto get_NegativeInfinitySymbol = 0x65f540;
		constexpr auto get_NegativeSign = 0x5c9520;
		constexpr auto get_NumberDecimalDigits = 0x113fa10;
		constexpr auto get_NumberDecimalSeparator = 0x5eb6b0;
		constexpr auto get_NumberGroupSeparator = 0x5e3bd0;
		constexpr auto get_CurrencyPositivePattern = 0x8a02d0;
		constexpr auto get_PositiveInfinitySymbol = 0x8013e0;
		constexpr auto get_PositiveSign = 0x71a0e0;
		constexpr auto get_PercentDecimalDigits = 0xbb9960;
		constexpr auto get_PercentDecimalSeparator = 0x9a2b40;
		constexpr auto get_PercentGroupSeparator = 0x9a2b10;
		constexpr auto get_PercentSymbol = 0x65b0a0;
		constexpr auto get_PerMilleSymbol = 0x80dbb0;
		constexpr auto GetFormat = 0x153f8f0;
		constexpr auto ReadOnly = 0x153fc90;
		constexpr auto ValidateParseStyleInteger = 0x153fe10;
		constexpr auto ValidateParseStyleFloatingPoint = 0x153fd40;
	};

	namespace UnityEngine_GL {

		constexpr auto Vertex3 = 0x1a78040;
		constexpr auto Vertex = 0x1a780a0;
		constexpr auto TexCoord3 = 0x1a77fe0;
		constexpr auto TexCoord2 = 0x1a77f90;
		constexpr auto MultiTexCoord3 = 0x1a77ec0;
		constexpr auto MultiTexCoord2 = 0x1a77e60;
		constexpr auto ImmediateColor = 0x1a77ba0;
		constexpr auto Color = 0x1a77870;
		constexpr auto get_sRGBWrite = 0x1a78100;
		constexpr auto set_sRGBWrite = 0x1a78130;
		constexpr auto Flush = 0x1a77900;
		constexpr auto MultMatrix = 0x1a77e20;
		constexpr auto PushMatrix = 0x1a77f60;
		constexpr auto PopMatrix = 0x1a77f30;
		constexpr auto LoadIdentity = 0x1a77cd0;
		constexpr auto LoadOrtho = 0x1a77d00;
		constexpr auto LoadPixelMatrix = 0x1a77d30;
		constexpr auto LoadProjectionMatrix = 0x1a77da0;
		constexpr auto GetGPUProjectionMatrix = 0x1a77b30;
		constexpr auto GLLoadPixelMatrixScript = 0x1a77a50;
		constexpr auto GLIssuePluginEvent = 0x1a77a10;
		constexpr auto IssuePluginEvent = 0x1a77c20;
		constexpr auto Begin = 0x1a77780;
		constexpr auto End = 0x1a778d0;
		constexpr auto GLClear = 0x1a779a0;
		constexpr auto Clear = 0x1a77810;
		constexpr auto ClearWithSkybox = 0x1a777c0;
		constexpr auto MultMatrix_Injected = 0x1a77de0;
		constexpr auto LoadProjectionMatrix_Injected = 0x1a77d60;
		constexpr auto GetGPUProjectionMatrix_Injected = 0x1a77ad0;
		constexpr auto GLClear_Injected = 0x1a77930;
	};

	namespace UnityEngine_Material {

		constexpr auto CreateWithShader = 0x1b6e4c0;
		constexpr auto CreateWithMaterial = 0x1b6e470;
		constexpr auto CreateWithString = 0x1b6e510;
		constexpr auto ctor = 0x1b6fa70;
		constexpr auto get_shader = 0x1b6fd30;
		constexpr auto set_shader = 0x1b6fec0;
		constexpr auto get_color = 0x1b6fb00;
		constexpr auto set_color = 0x1b6fd70;
		constexpr auto get_mainTexture = 0x1b6fc10;
		constexpr auto GetFirstPropertyNameIdByAttribute = 0x1b6e7e0;
		constexpr auto HasProperty = 0x1b6ecf0;
		constexpr auto get_renderQueue = 0x1b6fcf0;
		constexpr auto set_renderQueue = 0x1b6fe80;
		constexpr auto EnableKeyword = 0x1b6e5a0;
		constexpr auto DisableKeyword = 0x1b6e550;
		constexpr auto IsKeywordEnabled = 0x1b6ed30;
		constexpr auto get_enableInstancing = 0x1b6fbd0;
		constexpr auto set_enableInstancing = 0x1b6fe30;
		constexpr auto get_passCount = 0x1b6fcb0;
		constexpr auto GetShaderPassEnabled = 0x1b6e930;
		constexpr auto GetPassName = 0x1b6e8b0;
		constexpr auto FindPass = 0x1b6e5f0;
		constexpr auto SetOverrideTag = 0x1b6f4c0;
		constexpr auto GetTagImpl = 0x1b6e980;
		constexpr auto GetTag = 0x1b6ea80;
		constexpr auto SetPass = 0x1b6f520;
		constexpr auto CopyPropertiesFromMaterial = 0x1b6e420;
		constexpr auto GetShaderKeywords = 0x1b6e8f0;
		constexpr auto SetShaderKeywords = 0x1b6f560;
		constexpr auto get_shaderKeywords = 0x1b6e8f0;
		constexpr auto set_shaderKeywords = 0x1b6f560;
		constexpr auto SetFloatImpl = 0x1b6f210;
		constexpr auto SetColorImpl = 0x1b6ee80;
		constexpr auto SetMatrixImpl = 0x1b6f380;
		constexpr auto SetTextureImpl = 0x1b6f5b0;
		constexpr auto SetBufferImpl = 0x1b6ed80;
		constexpr auto GetFloatImpl = 0x1b6e820;
		constexpr auto GetColorImpl = 0x1b6e690;
		constexpr auto GetTextureImpl = 0x1b6eaf0;
		constexpr auto SetFloatArrayImpl = 0x1b6ef80;
		constexpr auto SetTextureOffsetImpl = 0x1b6f650;
		constexpr auto SetTextureScaleImpl = 0x1b6f750;
		constexpr auto SetFloatArray = 0x1b6f0e0;
		constexpr auto SetFloat = 0x1b6f260;
		constexpr auto SetInt = 0x1b6f2c0;
		constexpr auto SetColor = 0x1b6ef20;
		constexpr auto SetVector = 0x1b6f860;
		constexpr auto SetMatrix = 0x1b6f440;
		constexpr auto SetTexture = 0x1b6f800;
		constexpr auto SetBuffer = 0x1b6edd0;
		constexpr auto GetFloat = 0x1b6e860;
		constexpr auto GetColor = 0x1b6e760;
		constexpr auto GetVector = 0x1b6eb80;
		constexpr auto GetTexture = 0x1b6eb30;
		constexpr auto SetTextureOffset = 0x1b6f6a0;
		constexpr auto SetTextureScale = 0x1b6f7a0;
		constexpr auto SetColorImpl_Injected = 0x1b6ee30;
		constexpr auto SetMatrixImpl_Injected = 0x1b6f330;
		constexpr auto GetColorImpl_Injected = 0x1b6e640;
		constexpr auto SetTextureOffsetImpl_Injected = 0x1b6f600;
		constexpr auto SetTextureScaleImpl_Injected = 0x1b6f700;
	};

	namespace UnityEngine_Screen {

		constexpr auto get_width = 0x1c2adb0;
		constexpr auto get_height = 0x1c2ad50;
		constexpr auto get_dpi = 0x1c2acf0;
		constexpr auto get_currentResolution = 0x1c2acb0;
		constexpr auto get_fullScreen = 0x1c2ad20;
		constexpr auto SetResolution = 0x1c2abb0;
		constexpr auto get_resolutions = 0x1c2ad80;
		constexpr auto get_currentResolution_Injected = 0x1c2ac70;
	};

	namespace TOD_AtmosphereParameters {
		constexpr auto RayleighMultiplier = 0x10;
		constexpr auto MieMultiplier = 0x14;
		constexpr auto Brightness = 0x18;
		constexpr auto Contrast = 0x1c;
		constexpr auto Directionality = 0x20;
		constexpr auto Fogginess = 0x24;

		constexpr auto ctor = 0x1341be0;
	};

	namespace TOD_MoonParameters {
		constexpr auto MeshSize = 0x10;
		constexpr auto MeshBrightness = 0x14;
		constexpr auto MeshContrast = 0x18;
		constexpr auto HaloSize = 0x1c;
		constexpr auto HaloBrightness = 0x20;
		constexpr auto Position = 0x24;

		constexpr auto ctor = 0x1345940;
	};

	namespace TOD_CloudParameters {
		constexpr auto Size = 0x10;
		constexpr auto Opacity = 0x14;
		constexpr auto Coverage = 0x18;
		constexpr auto Sharpness = 0x1c;
		constexpr auto Coloring = 0x20;
		constexpr auto Attenuation = 0x24;
		constexpr auto Saturation = 0x28;
		constexpr auto Scattering = 0x2c;
		constexpr auto Brightness = 0x30;

		constexpr auto ctor = 0x1343070;
	};

	namespace TOD_NightParameters {
		constexpr auto MoonColor = 0x10;
		constexpr auto LightColor = 0x18;
		constexpr auto RayColor = 0x20;
		constexpr auto SkyColor = 0x28;
		constexpr auto CloudColor = 0x30;
		constexpr auto FogColor = 0x38;
		constexpr auto AmbientColor = 0x40;
		constexpr auto LightIntensity = 0x48;
		constexpr auto ShadowStrength = 0x4c;
		constexpr auto AmbientMultiplier = 0x50;
		constexpr auto ReflectionMultiplier = 0x54;

		constexpr auto ctor = 0x1345980;
	};

}
